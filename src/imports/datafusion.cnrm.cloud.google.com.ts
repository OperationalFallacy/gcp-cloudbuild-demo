// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema DataFusionInstance
 */
export class DataFusionInstance extends ApiObject {
  /**
   * Returns the apiVersion and kind for "DataFusionInstance"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'datafusion.cnrm.cloud.google.com/v1beta1',
    kind: 'DataFusionInstance',
  }

  /**
   * Renders a Kubernetes manifest for "DataFusionInstance".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: DataFusionInstanceProps): any {
    return {
      ...DataFusionInstance.GVK,
      ...toJson_DataFusionInstanceProps(props),
    };
  }

  /**
   * Defines a "DataFusionInstance" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: DataFusionInstanceProps) {
    super(scope, id, {
      ...DataFusionInstance.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...DataFusionInstance.GVK,
      ...toJson_DataFusionInstanceProps(resolved),
    };
  }
}

/**
 * @schema DataFusionInstance
 */
export interface DataFusionInstanceProps {
  /**
   * @schema DataFusionInstance#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema DataFusionInstance#spec
   */
  readonly spec: DataFusionInstanceSpec;

}

/**
 * Converts an object of type 'DataFusionInstanceProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataFusionInstanceProps(obj: DataFusionInstanceProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_DataFusionInstanceSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataFusionInstanceSpec
 */
export interface DataFusionInstanceSpec {
  /**
   * @schema DataFusionInstanceSpec#dataprocServiceAccountRef
   */
  readonly dataprocServiceAccountRef?: DataFusionInstanceSpecDataprocServiceAccountRef;

  /**
   * Immutable. A description of this instance.
   *
   * @schema DataFusionInstanceSpec#description
   */
  readonly description?: string;

  /**
   * Immutable. Display name for an instance.
   *
   * @schema DataFusionInstanceSpec#displayName
   */
  readonly displayName?: string;

  /**
   * Option to enable Stackdriver Logging.
   *
   * @schema DataFusionInstanceSpec#enableStackdriverLogging
   */
  readonly enableStackdriverLogging?: boolean;

  /**
   * Option to enable Stackdriver Monitoring.
   *
   * @schema DataFusionInstanceSpec#enableStackdriverMonitoring
   */
  readonly enableStackdriverMonitoring?: boolean;

  /**
   * Immutable. The location for the resource
   *
   * @schema DataFusionInstanceSpec#location
   */
  readonly location: string;

  /**
   * Immutable. Network configuration options. These are required when a private Data Fusion instance is to be created.
   *
   * @schema DataFusionInstanceSpec#networkConfig
   */
  readonly networkConfig?: DataFusionInstanceSpecNetworkConfig;

  /**
   * Immutable. Map of additional options used to configure the behavior of Data Fusion instance.
   *
   * @schema DataFusionInstanceSpec#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Immutable. Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP addresses and will not be able to access the public internet.
   *
   * @schema DataFusionInstanceSpec#privateInstance
   */
  readonly privateInstance?: boolean;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema DataFusionInstanceSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Immutable. Required. Instance type. Possible values: TYPE_UNSPECIFIED, BASIC, ENTERPRISE, DEVELOPER
   *
   * @schema DataFusionInstanceSpec#type
   */
  readonly type: string;

  /**
   * Current version of the Data Fusion.
   *
   * @schema DataFusionInstanceSpec#version
   */
  readonly version?: string;

  /**
   * Immutable. Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
   *
   * @schema DataFusionInstanceSpec#zone
   */
  readonly zone?: string;

}

/**
 * Converts an object of type 'DataFusionInstanceSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataFusionInstanceSpec(obj: DataFusionInstanceSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'dataprocServiceAccountRef': toJson_DataFusionInstanceSpecDataprocServiceAccountRef(obj.dataprocServiceAccountRef),
    'description': obj.description,
    'displayName': obj.displayName,
    'enableStackdriverLogging': obj.enableStackdriverLogging,
    'enableStackdriverMonitoring': obj.enableStackdriverMonitoring,
    'location': obj.location,
    'networkConfig': toJson_DataFusionInstanceSpecNetworkConfig(obj.networkConfig),
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'privateInstance': obj.privateInstance,
    'resourceID': obj.resourceId,
    'type': obj.type,
    'version': obj.version,
    'zone': obj.zone,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataFusionInstanceSpecDataprocServiceAccountRef
 */
export interface DataFusionInstanceSpecDataprocServiceAccountRef {
  /**
   * User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines. This allows users to have fine-grained access control on Dataproc's accesses to cloud resources.
   *
   * Allowed value: The `email` field of an `IAMServiceAccount` resource.
   *
   * @schema DataFusionInstanceSpecDataprocServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataFusionInstanceSpecDataprocServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataFusionInstanceSpecDataprocServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataFusionInstanceSpecDataprocServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataFusionInstanceSpecDataprocServiceAccountRef(obj: DataFusionInstanceSpecDataprocServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Network configuration options. These are required when a private Data Fusion instance is to be created.
 *
 * @schema DataFusionInstanceSpecNetworkConfig
 */
export interface DataFusionInstanceSpecNetworkConfig {
  /**
   * Immutable. The IP range in CIDR notation to use for the managed Data Fusion instance nodes. This range must not overlap with any other ranges used in the customer network.
   *
   * @schema DataFusionInstanceSpecNetworkConfig#ipAllocation
   */
  readonly ipAllocation?: string;

  /**
   * Immutable.
   *
   * @schema DataFusionInstanceSpecNetworkConfig#networkRef
   */
  readonly networkRef?: DataFusionInstanceSpecNetworkConfigNetworkRef;

}

/**
 * Converts an object of type 'DataFusionInstanceSpecNetworkConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataFusionInstanceSpecNetworkConfig(obj: DataFusionInstanceSpecNetworkConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ipAllocation': obj.ipAllocation,
    'networkRef': toJson_DataFusionInstanceSpecNetworkConfigNetworkRef(obj.networkRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataFusionInstanceSpecNetworkConfigNetworkRef
 */
export interface DataFusionInstanceSpecNetworkConfigNetworkRef {
  /**
   * Name of the network in the customer project with which the Tenant Project will be peered for executing pipelines. In case of shared VPC where the network resides in another host project the network should specified in the form of projects/{host-project-id}/global/networks/{network}
   *
   * Allowed value: The Google Cloud resource name of a `ComputeNetwork` resource (format: `projects/{{project}}/global/networks/{{name}}`).
   *
   * @schema DataFusionInstanceSpecNetworkConfigNetworkRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataFusionInstanceSpecNetworkConfigNetworkRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataFusionInstanceSpecNetworkConfigNetworkRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataFusionInstanceSpecNetworkConfigNetworkRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataFusionInstanceSpecNetworkConfigNetworkRef(obj: DataFusionInstanceSpecNetworkConfigNetworkRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

