// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema KMSCryptoKey
 */
export class KmsCryptoKey extends ApiObject {
  /**
   * Returns the apiVersion and kind for "KMSCryptoKey"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kms.cnrm.cloud.google.com/v1beta1',
    kind: 'KMSCryptoKey',
  }

  /**
   * Renders a Kubernetes manifest for "KMSCryptoKey".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: KmsCryptoKeyProps): any {
    return {
      ...KmsCryptoKey.GVK,
      ...toJson_KmsCryptoKeyProps(props),
    };
  }

  /**
   * Defines a "KMSCryptoKey" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: KmsCryptoKeyProps) {
    super(scope, id, {
      ...KmsCryptoKey.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...KmsCryptoKey.GVK,
      ...toJson_KmsCryptoKeyProps(resolved),
    };
  }
}

/**
 * @schema KMSCryptoKey
 */
export interface KmsCryptoKeyProps {
  /**
   * @schema KMSCryptoKey#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema KMSCryptoKey#spec
   */
  readonly spec: KmsCryptoKeySpec;

}

/**
 * Converts an object of type 'KmsCryptoKeyProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_KmsCryptoKeyProps(obj: KmsCryptoKeyProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_KmsCryptoKeySpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema KmsCryptoKeySpec
 */
export interface KmsCryptoKeySpec {
  /**
   * Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED.
   * If not specified at creation time, the default duration is 24 hours.
   *
   * @schema KmsCryptoKeySpec#destroyScheduledDuration
   */
  readonly destroyScheduledDuration?: string;

  /**
   * Immutable. Whether this key may contain imported versions only.
   *
   * @schema KmsCryptoKeySpec#importOnly
   */
  readonly importOnly?: boolean;

  /**
   * The KMSKeyRing that this key belongs to.
   *
   * @schema KmsCryptoKeySpec#keyRingRef
   */
  readonly keyRingRef: KmsCryptoKeySpecKeyRingRef;

  /**
   * Immutable. The immutable purpose of this CryptoKey. See the
   * [purpose reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
   * for possible inputs.
   * Default value is "ENCRYPT_DECRYPT".
   *
   * @schema KmsCryptoKeySpec#purpose
   */
  readonly purpose?: string;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema KmsCryptoKeySpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
   * The first rotation will take place after the specified period. The rotation period has
   * the format of a decimal number with up to 9 fractional digits, followed by the
   * letter 's' (seconds). It must be greater than a day (ie, 86400).
   *
   * @schema KmsCryptoKeySpec#rotationPeriod
   */
  readonly rotationPeriod?: string;

  /**
   * Immutable. If set to true, the request will create a CryptoKey without any CryptoKeyVersions.
   * You must use the 'google_kms_key_ring_import_job' resource to import the CryptoKeyVersion.
   *
   * @schema KmsCryptoKeySpec#skipInitialVersionCreation
   */
  readonly skipInitialVersionCreation?: boolean;

  /**
   * A template describing settings for new crypto key versions.
   *
   * @schema KmsCryptoKeySpec#versionTemplate
   */
  readonly versionTemplate?: KmsCryptoKeySpecVersionTemplate;

}

/**
 * Converts an object of type 'KmsCryptoKeySpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_KmsCryptoKeySpec(obj: KmsCryptoKeySpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'destroyScheduledDuration': obj.destroyScheduledDuration,
    'importOnly': obj.importOnly,
    'keyRingRef': toJson_KmsCryptoKeySpecKeyRingRef(obj.keyRingRef),
    'purpose': obj.purpose,
    'resourceID': obj.resourceId,
    'rotationPeriod': obj.rotationPeriod,
    'skipInitialVersionCreation': obj.skipInitialVersionCreation,
    'versionTemplate': toJson_KmsCryptoKeySpecVersionTemplate(obj.versionTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The KMSKeyRing that this key belongs to.
 *
 * @schema KmsCryptoKeySpecKeyRingRef
 */
export interface KmsCryptoKeySpecKeyRingRef {
  /**
   * Allowed value: The `selfLink` field of a `KMSKeyRing` resource.
   *
   * @schema KmsCryptoKeySpecKeyRingRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema KmsCryptoKeySpecKeyRingRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema KmsCryptoKeySpecKeyRingRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'KmsCryptoKeySpecKeyRingRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_KmsCryptoKeySpecKeyRingRef(obj: KmsCryptoKeySpecKeyRingRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A template describing settings for new crypto key versions.
 *
 * @schema KmsCryptoKeySpecVersionTemplate
 */
export interface KmsCryptoKeySpecVersionTemplate {
  /**
   * The algorithm to use when creating a version based on this template.
   * See the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm) for possible inputs.
   *
   * @schema KmsCryptoKeySpecVersionTemplate#algorithm
   */
  readonly algorithm: string;

  /**
   * Immutable. The protection level to use when creating a version based on this template. Possible values include "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC". Defaults to "SOFTWARE".
   *
   * @default SOFTWARE".
   * @schema KmsCryptoKeySpecVersionTemplate#protectionLevel
   */
  readonly protectionLevel?: string;

}

/**
 * Converts an object of type 'KmsCryptoKeySpecVersionTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_KmsCryptoKeySpecVersionTemplate(obj: KmsCryptoKeySpecVersionTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'algorithm': obj.algorithm,
    'protectionLevel': obj.protectionLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema KMSKeyRing
 */
export class KmsKeyRing extends ApiObject {
  /**
   * Returns the apiVersion and kind for "KMSKeyRing"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'kms.cnrm.cloud.google.com/v1beta1',
    kind: 'KMSKeyRing',
  }

  /**
   * Renders a Kubernetes manifest for "KMSKeyRing".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: KmsKeyRingProps): any {
    return {
      ...KmsKeyRing.GVK,
      ...toJson_KmsKeyRingProps(props),
    };
  }

  /**
   * Defines a "KMSKeyRing" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: KmsKeyRingProps) {
    super(scope, id, {
      ...KmsKeyRing.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...KmsKeyRing.GVK,
      ...toJson_KmsKeyRingProps(resolved),
    };
  }
}

/**
 * @schema KMSKeyRing
 */
export interface KmsKeyRingProps {
  /**
   * @schema KMSKeyRing#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema KMSKeyRing#spec
   */
  readonly spec: KmsKeyRingSpec;

}

/**
 * Converts an object of type 'KmsKeyRingProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_KmsKeyRingProps(obj: KmsKeyRingProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_KmsKeyRingSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema KmsKeyRingSpec
 */
export interface KmsKeyRingSpec {
  /**
   * Immutable. The location for the KeyRing.
   * A full list of valid locations can be found by running 'gcloud kms locations list'.
   *
   * @schema KmsKeyRingSpec#location
   */
  readonly location: string;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema KmsKeyRingSpec#resourceID
   */
  readonly resourceId?: string;

}

/**
 * Converts an object of type 'KmsKeyRingSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_KmsKeyRingSpec(obj: KmsKeyRingSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'location': obj.location,
    'resourceID': obj.resourceId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

