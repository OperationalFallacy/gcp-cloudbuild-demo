// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema DataprocAutoscalingPolicy
 */
export class DataprocAutoscalingPolicy extends ApiObject {
  /**
   * Returns the apiVersion and kind for "DataprocAutoscalingPolicy"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'dataproc.cnrm.cloud.google.com/v1beta1',
    kind: 'DataprocAutoscalingPolicy',
  }

  /**
   * Renders a Kubernetes manifest for "DataprocAutoscalingPolicy".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: DataprocAutoscalingPolicyProps): any {
    return {
      ...DataprocAutoscalingPolicy.GVK,
      ...toJson_DataprocAutoscalingPolicyProps(props),
    };
  }

  /**
   * Defines a "DataprocAutoscalingPolicy" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: DataprocAutoscalingPolicyProps) {
    super(scope, id, {
      ...DataprocAutoscalingPolicy.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...DataprocAutoscalingPolicy.GVK,
      ...toJson_DataprocAutoscalingPolicyProps(resolved),
    };
  }
}

/**
 * @schema DataprocAutoscalingPolicy
 */
export interface DataprocAutoscalingPolicyProps {
  /**
   * @schema DataprocAutoscalingPolicy#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema DataprocAutoscalingPolicy#spec
   */
  readonly spec: DataprocAutoscalingPolicySpec;

}

/**
 * Converts an object of type 'DataprocAutoscalingPolicyProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocAutoscalingPolicyProps(obj: DataprocAutoscalingPolicyProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_DataprocAutoscalingPolicySpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocAutoscalingPolicySpec
 */
export interface DataprocAutoscalingPolicySpec {
  /**
   * @schema DataprocAutoscalingPolicySpec#basicAlgorithm
   */
  readonly basicAlgorithm: DataprocAutoscalingPolicySpecBasicAlgorithm;

  /**
   * Immutable. The location for the resource
   *
   * @schema DataprocAutoscalingPolicySpec#location
   */
  readonly location: string;

  /**
   * Immutable. The Project that this resource belongs to.
   *
   * @schema DataprocAutoscalingPolicySpec#projectRef
   */
  readonly projectRef?: DataprocAutoscalingPolicySpecProjectRef;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema DataprocAutoscalingPolicySpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Optional. Describes how the autoscaler will operate for secondary workers.
   *
   * @schema DataprocAutoscalingPolicySpec#secondaryWorkerConfig
   */
  readonly secondaryWorkerConfig?: DataprocAutoscalingPolicySpecSecondaryWorkerConfig;

  /**
   * Required. Describes how the autoscaler will operate for primary workers.
   *
   * @schema DataprocAutoscalingPolicySpec#workerConfig
   */
  readonly workerConfig: DataprocAutoscalingPolicySpecWorkerConfig;

}

/**
 * Converts an object of type 'DataprocAutoscalingPolicySpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocAutoscalingPolicySpec(obj: DataprocAutoscalingPolicySpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'basicAlgorithm': toJson_DataprocAutoscalingPolicySpecBasicAlgorithm(obj.basicAlgorithm),
    'location': obj.location,
    'projectRef': toJson_DataprocAutoscalingPolicySpecProjectRef(obj.projectRef),
    'resourceID': obj.resourceId,
    'secondaryWorkerConfig': toJson_DataprocAutoscalingPolicySpecSecondaryWorkerConfig(obj.secondaryWorkerConfig),
    'workerConfig': toJson_DataprocAutoscalingPolicySpecWorkerConfig(obj.workerConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocAutoscalingPolicySpecBasicAlgorithm
 */
export interface DataprocAutoscalingPolicySpecBasicAlgorithm {
  /**
   * Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed. Bounds: . Default: 2m.
   *
   * @schema DataprocAutoscalingPolicySpecBasicAlgorithm#cooldownPeriod
   */
  readonly cooldownPeriod?: string;

  /**
   * Required. YARN autoscaling configuration.
   *
   * @schema DataprocAutoscalingPolicySpecBasicAlgorithm#yarnConfig
   */
  readonly yarnConfig: DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig;

}

/**
 * Converts an object of type 'DataprocAutoscalingPolicySpecBasicAlgorithm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocAutoscalingPolicySpecBasicAlgorithm(obj: DataprocAutoscalingPolicySpecBasicAlgorithm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cooldownPeriod': obj.cooldownPeriod,
    'yarnConfig': toJson_DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig(obj.yarnConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. The Project that this resource belongs to.
 *
 * @schema DataprocAutoscalingPolicySpecProjectRef
 */
export interface DataprocAutoscalingPolicySpecProjectRef {
  /**
   * The project for the resource
   *
   * Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
   *
   * @schema DataprocAutoscalingPolicySpecProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocAutoscalingPolicySpecProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocAutoscalingPolicySpecProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocAutoscalingPolicySpecProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocAutoscalingPolicySpecProjectRef(obj: DataprocAutoscalingPolicySpecProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Optional. Describes how the autoscaler will operate for secondary workers.
 *
 * @schema DataprocAutoscalingPolicySpecSecondaryWorkerConfig
 */
export interface DataprocAutoscalingPolicySpecSecondaryWorkerConfig {
  /**
   * Optional. Maximum number of instances for this group. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set. Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
   *
   * @schema DataprocAutoscalingPolicySpecSecondaryWorkerConfig#maxInstances
   */
  readonly maxInstances?: number;

  /**
   * Optional. Minimum number of instances for this group. Primary workers - Bounds: . Default: 0.
   *
   * @schema DataprocAutoscalingPolicySpecSecondaryWorkerConfig#minInstances
   */
  readonly minInstances?: number;

  /**
   * Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker. The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if `max_instances` for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created. If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
   *
   * @schema DataprocAutoscalingPolicySpecSecondaryWorkerConfig#weight
   */
  readonly weight?: number;

}

/**
 * Converts an object of type 'DataprocAutoscalingPolicySpecSecondaryWorkerConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocAutoscalingPolicySpecSecondaryWorkerConfig(obj: DataprocAutoscalingPolicySpecSecondaryWorkerConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxInstances': obj.maxInstances,
    'minInstances': obj.minInstances,
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. Describes how the autoscaler will operate for primary workers.
 *
 * @schema DataprocAutoscalingPolicySpecWorkerConfig
 */
export interface DataprocAutoscalingPolicySpecWorkerConfig {
  /**
   * Required. Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set. Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
   *
   * @schema DataprocAutoscalingPolicySpecWorkerConfig#maxInstances
   */
  readonly maxInstances: number;

  /**
   * Optional. Minimum number of instances for this group. Primary workers - Bounds: . Default: 0.
   *
   * @schema DataprocAutoscalingPolicySpecWorkerConfig#minInstances
   */
  readonly minInstances?: number;

  /**
   * Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker. The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if `max_instances` for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created. If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
   *
   * @schema DataprocAutoscalingPolicySpecWorkerConfig#weight
   */
  readonly weight?: number;

}

/**
 * Converts an object of type 'DataprocAutoscalingPolicySpecWorkerConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocAutoscalingPolicySpecWorkerConfig(obj: DataprocAutoscalingPolicySpecWorkerConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxInstances': obj.maxInstances,
    'minInstances': obj.minInstances,
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. YARN autoscaling configuration.
 *
 * @schema DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig
 */
export interface DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig {
  /**
   * Required. Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.
   *
   * @schema DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig#gracefulDecommissionTimeout
   */
  readonly gracefulDecommissionTimeout: string;

  /**
   * Required. Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See .
   *
   * @schema DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig#scaleDownFactor
   */
  readonly scaleDownFactor: number;

  /**
   * Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change. Bounds: . Default: 0.0.
   *
   * @schema DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig#scaleDownMinWorkerFraction
   */
  readonly scaleDownMinWorkerFraction?: number;

  /**
   * Required. Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See .
   *
   * @schema DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig#scaleUpFactor
   */
  readonly scaleUpFactor: number;

  /**
   * Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change. Bounds: . Default: 0.0.
   *
   * @schema DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig#scaleUpMinWorkerFraction
   */
  readonly scaleUpMinWorkerFraction?: number;

}

/**
 * Converts an object of type 'DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig(obj: DataprocAutoscalingPolicySpecBasicAlgorithmYarnConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gracefulDecommissionTimeout': obj.gracefulDecommissionTimeout,
    'scaleDownFactor': obj.scaleDownFactor,
    'scaleDownMinWorkerFraction': obj.scaleDownMinWorkerFraction,
    'scaleUpFactor': obj.scaleUpFactor,
    'scaleUpMinWorkerFraction': obj.scaleUpMinWorkerFraction,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema DataprocCluster
 */
export class DataprocCluster extends ApiObject {
  /**
   * Returns the apiVersion and kind for "DataprocCluster"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'dataproc.cnrm.cloud.google.com/v1beta1',
    kind: 'DataprocCluster',
  }

  /**
   * Renders a Kubernetes manifest for "DataprocCluster".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: DataprocClusterProps): any {
    return {
      ...DataprocCluster.GVK,
      ...toJson_DataprocClusterProps(props),
    };
  }

  /**
   * Defines a "DataprocCluster" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: DataprocClusterProps) {
    super(scope, id, {
      ...DataprocCluster.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...DataprocCluster.GVK,
      ...toJson_DataprocClusterProps(resolved),
    };
  }
}

/**
 * @schema DataprocCluster
 */
export interface DataprocClusterProps {
  /**
   * @schema DataprocCluster#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema DataprocCluster#spec
   */
  readonly spec: DataprocClusterSpec;

}

/**
 * Converts an object of type 'DataprocClusterProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterProps(obj: DataprocClusterProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_DataprocClusterSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocClusterSpec
 */
export interface DataprocClusterSpec {
  /**
   * Immutable. The cluster config. Note that Dataproc may set default values, and values may change when clusters are updated.
   *
   * @schema DataprocClusterSpec#config
   */
  readonly config?: DataprocClusterSpecConfig;

  /**
   * Immutable. The location for the resource, usually a GCP region.
   *
   * @schema DataprocClusterSpec#location
   */
  readonly location: string;

  /**
   * Immutable. The Project that this resource belongs to.
   *
   * @schema DataprocClusterSpec#projectRef
   */
  readonly projectRef?: DataprocClusterSpecProjectRef;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema DataprocClusterSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Immutable. Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a [Dataproc-on-GKE cluster](https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.
   *
   * @schema DataprocClusterSpec#virtualClusterConfig
   */
  readonly virtualClusterConfig?: DataprocClusterSpecVirtualClusterConfig;

}

/**
 * Converts an object of type 'DataprocClusterSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpec(obj: DataprocClusterSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'config': toJson_DataprocClusterSpecConfig(obj.config),
    'location': obj.location,
    'projectRef': toJson_DataprocClusterSpecProjectRef(obj.projectRef),
    'resourceID': obj.resourceId,
    'virtualClusterConfig': toJson_DataprocClusterSpecVirtualClusterConfig(obj.virtualClusterConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. The cluster config. Note that Dataproc may set default values, and values may change when clusters are updated.
 *
 * @schema DataprocClusterSpecConfig
 */
export interface DataprocClusterSpecConfig {
  /**
   * Immutable. Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
   *
   * @schema DataprocClusterSpecConfig#autoscalingConfig
   */
  readonly autoscalingConfig?: DataprocClusterSpecConfigAutoscalingConfig;

  /**
   * Immutable. Optional. The config for Dataproc metrics.
   *
   * @schema DataprocClusterSpecConfig#dataprocMetricConfig
   */
  readonly dataprocMetricConfig?: DataprocClusterSpecConfigDataprocMetricConfig;

  /**
   * Immutable. Optional. Encryption settings for the cluster.
   *
   * @schema DataprocClusterSpecConfig#encryptionConfig
   */
  readonly encryptionConfig?: DataprocClusterSpecConfigEncryptionConfig;

  /**
   * Immutable. Optional. Port/endpoint configuration for this cluster
   *
   * @schema DataprocClusterSpecConfig#endpointConfig
   */
  readonly endpointConfig?: DataprocClusterSpecConfigEndpointConfig;

  /**
   * Immutable. Optional. The shared Compute Engine config settings for all instances in a cluster.
   *
   * @schema DataprocClusterSpecConfig#gceClusterConfig
   */
  readonly gceClusterConfig?: DataprocClusterSpecConfigGceClusterConfig;

  /**
   * Immutable. Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's `role` metadata to run an executable on a master or worker node, as shown below using `curl` (you can also use `wget`): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
   *
   * @schema DataprocClusterSpecConfig#initializationActions
   */
  readonly initializationActions?: DataprocClusterSpecConfigInitializationActions[];

  /**
   * Immutable. Optional. Lifecycle setting for the cluster.
   *
   * @schema DataprocClusterSpecConfig#lifecycleConfig
   */
  readonly lifecycleConfig?: DataprocClusterSpecConfigLifecycleConfig;

  /**
   * Immutable. Optional. The Compute Engine config settings for the master instance in a cluster.
   *
   * @schema DataprocClusterSpecConfig#masterConfig
   */
  readonly masterConfig?: DataprocClusterSpecConfigMasterConfig;

  /**
   * Immutable. Optional. Metastore configuration.
   *
   * @schema DataprocClusterSpecConfig#metastoreConfig
   */
  readonly metastoreConfig?: DataprocClusterSpecConfigMetastoreConfig;

  /**
   * Immutable. Optional. The Compute Engine config settings for additional worker instances in a cluster.
   *
   * @schema DataprocClusterSpecConfig#secondaryWorkerConfig
   */
  readonly secondaryWorkerConfig?: DataprocClusterSpecConfigSecondaryWorkerConfig;

  /**
   * Immutable. Optional. Security settings for the cluster.
   *
   * @schema DataprocClusterSpecConfig#securityConfig
   */
  readonly securityConfig?: DataprocClusterSpecConfigSecurityConfig;

  /**
   * Immutable. Optional. The config settings for software inside the cluster.
   *
   * @schema DataprocClusterSpecConfig#softwareConfig
   */
  readonly softwareConfig?: DataprocClusterSpecConfigSoftwareConfig;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfig#stagingBucketRef
   */
  readonly stagingBucketRef?: DataprocClusterSpecConfigStagingBucketRef;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfig#tempBucketRef
   */
  readonly tempBucketRef?: DataprocClusterSpecConfigTempBucketRef;

  /**
   * Immutable. Optional. The Compute Engine config settings for worker instances in a cluster.
   *
   * @schema DataprocClusterSpecConfig#workerConfig
   */
  readonly workerConfig?: DataprocClusterSpecConfigWorkerConfig;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfig(obj: DataprocClusterSpecConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'autoscalingConfig': toJson_DataprocClusterSpecConfigAutoscalingConfig(obj.autoscalingConfig),
    'dataprocMetricConfig': toJson_DataprocClusterSpecConfigDataprocMetricConfig(obj.dataprocMetricConfig),
    'encryptionConfig': toJson_DataprocClusterSpecConfigEncryptionConfig(obj.encryptionConfig),
    'endpointConfig': toJson_DataprocClusterSpecConfigEndpointConfig(obj.endpointConfig),
    'gceClusterConfig': toJson_DataprocClusterSpecConfigGceClusterConfig(obj.gceClusterConfig),
    'initializationActions': obj.initializationActions?.map(y => toJson_DataprocClusterSpecConfigInitializationActions(y)),
    'lifecycleConfig': toJson_DataprocClusterSpecConfigLifecycleConfig(obj.lifecycleConfig),
    'masterConfig': toJson_DataprocClusterSpecConfigMasterConfig(obj.masterConfig),
    'metastoreConfig': toJson_DataprocClusterSpecConfigMetastoreConfig(obj.metastoreConfig),
    'secondaryWorkerConfig': toJson_DataprocClusterSpecConfigSecondaryWorkerConfig(obj.secondaryWorkerConfig),
    'securityConfig': toJson_DataprocClusterSpecConfigSecurityConfig(obj.securityConfig),
    'softwareConfig': toJson_DataprocClusterSpecConfigSoftwareConfig(obj.softwareConfig),
    'stagingBucketRef': toJson_DataprocClusterSpecConfigStagingBucketRef(obj.stagingBucketRef),
    'tempBucketRef': toJson_DataprocClusterSpecConfigTempBucketRef(obj.tempBucketRef),
    'workerConfig': toJson_DataprocClusterSpecConfigWorkerConfig(obj.workerConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. The Project that this resource belongs to.
 *
 * @schema DataprocClusterSpecProjectRef
 */
export interface DataprocClusterSpecProjectRef {
  /**
   * Required. The Google Cloud Platform project ID that the cluster belongs to.
   *
   * Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
   *
   * @schema DataprocClusterSpecProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecProjectRef(obj: DataprocClusterSpecProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a [Dataproc-on-GKE cluster](https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.
 *
 * @schema DataprocClusterSpecVirtualClusterConfig
 */
export interface DataprocClusterSpecVirtualClusterConfig {
  /**
   * Immutable. Optional. Configuration of auxiliary services used by this cluster.
   *
   * @schema DataprocClusterSpecVirtualClusterConfig#auxiliaryServicesConfig
   */
  readonly auxiliaryServicesConfig?: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig;

  /**
   * Immutable. Required. The configuration for running the Dataproc cluster on Kubernetes.
   *
   * @schema DataprocClusterSpecVirtualClusterConfig#kubernetesClusterConfig
   */
  readonly kubernetesClusterConfig: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecVirtualClusterConfig#stagingBucketRef
   */
  readonly stagingBucketRef?: DataprocClusterSpecVirtualClusterConfigStagingBucketRef;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfig(obj: DataprocClusterSpecVirtualClusterConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'auxiliaryServicesConfig': toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig(obj.auxiliaryServicesConfig),
    'kubernetesClusterConfig': toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig(obj.kubernetesClusterConfig),
    'stagingBucketRef': toJson_DataprocClusterSpecVirtualClusterConfigStagingBucketRef(obj.stagingBucketRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
 *
 * @schema DataprocClusterSpecConfigAutoscalingConfig
 */
export interface DataprocClusterSpecConfigAutoscalingConfig {
  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigAutoscalingConfig#policyRef
   */
  readonly policyRef?: DataprocClusterSpecConfigAutoscalingConfigPolicyRef;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigAutoscalingConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigAutoscalingConfig(obj: DataprocClusterSpecConfigAutoscalingConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'policyRef': toJson_DataprocClusterSpecConfigAutoscalingConfigPolicyRef(obj.policyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The config for Dataproc metrics.
 *
 * @schema DataprocClusterSpecConfigDataprocMetricConfig
 */
export interface DataprocClusterSpecConfigDataprocMetricConfig {
  /**
   * Immutable. Required. Metrics sources to enable.
   *
   * @schema DataprocClusterSpecConfigDataprocMetricConfig#metrics
   */
  readonly metrics: DataprocClusterSpecConfigDataprocMetricConfigMetrics[];

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigDataprocMetricConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigDataprocMetricConfig(obj: DataprocClusterSpecConfigDataprocMetricConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metrics': obj.metrics?.map(y => toJson_DataprocClusterSpecConfigDataprocMetricConfigMetrics(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Encryption settings for the cluster.
 *
 * @schema DataprocClusterSpecConfigEncryptionConfig
 */
export interface DataprocClusterSpecConfigEncryptionConfig {
  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigEncryptionConfig#gcePdKmsKeyRef
   */
  readonly gcePdKmsKeyRef?: DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigEncryptionConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigEncryptionConfig(obj: DataprocClusterSpecConfigEncryptionConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gcePdKmsKeyRef': toJson_DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef(obj.gcePdKmsKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Port/endpoint configuration for this cluster
 *
 * @schema DataprocClusterSpecConfigEndpointConfig
 */
export interface DataprocClusterSpecConfigEndpointConfig {
  /**
   * Immutable. Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
   *
   * @default false.
   * @schema DataprocClusterSpecConfigEndpointConfig#enableHttpPortAccess
   */
  readonly enableHttpPortAccess?: boolean;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigEndpointConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigEndpointConfig(obj: DataprocClusterSpecConfigEndpointConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableHttpPortAccess': obj.enableHttpPortAccess,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The shared Compute Engine config settings for all instances in a cluster.
 *
 * @schema DataprocClusterSpecConfigGceClusterConfig
 */
export interface DataprocClusterSpecConfigGceClusterConfig {
  /**
   * Immutable. Optional. Confidential Instance Config for clusters using [Confidential VMs](https://cloud.google.com/compute/confidential-vm/docs).
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#confidentialInstanceConfig
   */
  readonly confidentialInstanceConfig?: DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig;

  /**
   * Immutable. Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#internalIPOnly
   */
  readonly internalIpOnly?: boolean;

  /**
   * Immutable. The Compute Engine metadata entries to add to all instances (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#metadata
   */
  readonly metadata?: { [key: string]: string };

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#networkRef
   */
  readonly networkRef?: DataprocClusterSpecConfigGceClusterConfigNetworkRef;

  /**
   * Immutable. Optional. Node Group Affinity for sole-tenant clusters.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#nodeGroupAffinity
   */
  readonly nodeGroupAffinity?: DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity;

  /**
   * Immutable. Optional. The type of IPv6 access for a cluster. Possible values: PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED, INHERIT_FROM_SUBNETWORK, OUTBOUND, BIDIRECTIONAL
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#privateIPv6GoogleAccess
   */
  readonly privateIPv6GoogleAccess?: string;

  /**
   * Immutable. Optional. Reservation Affinity for consuming Zonal reservation.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#reservationAffinity
   */
  readonly reservationAffinity?: DataprocClusterSpecConfigGceClusterConfigReservationAffinity;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#serviceAccountRef
   */
  readonly serviceAccountRef?: DataprocClusterSpecConfigGceClusterConfigServiceAccountRef;

  /**
   * Immutable. Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: * https://www.googleapis.com/auth/cloud.useraccounts.readonly * https://www.googleapis.com/auth/devstorage.read_write * https://www.googleapis.com/auth/logging.write If no scopes are specified, the following defaults are also provided: * https://www.googleapis.com/auth/bigquery * https://www.googleapis.com/auth/bigtable.admin.table * https://www.googleapis.com/auth/bigtable.data * https://www.googleapis.com/auth/devstorage.full_control
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#serviceAccountScopes
   */
  readonly serviceAccountScopes?: string[];

  /**
   * Immutable. Optional. Shielded Instance Config for clusters using [Compute Engine Shielded VMs](https://cloud.google.com/security/shielded-cloud/shielded-vm).
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#shieldedInstanceConfig
   */
  readonly shieldedInstanceConfig?: DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#subnetworkRef
   */
  readonly subnetworkRef?: DataprocClusterSpecConfigGceClusterConfigSubnetworkRef;

  /**
   * Immutable. The Compute Engine tags to add to all instances (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#tags
   */
  readonly tags?: string[];

  /**
   * Immutable. Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]` * `projects/[project_id]/zones/[zone]` * `us-central1-f`
   *
   * @schema DataprocClusterSpecConfigGceClusterConfig#zone
   */
  readonly zone?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigGceClusterConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigGceClusterConfig(obj: DataprocClusterSpecConfigGceClusterConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'confidentialInstanceConfig': toJson_DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig(obj.confidentialInstanceConfig),
    'internalIPOnly': obj.internalIpOnly,
    'metadata': ((obj.metadata) === undefined) ? undefined : (Object.entries(obj.metadata).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'networkRef': toJson_DataprocClusterSpecConfigGceClusterConfigNetworkRef(obj.networkRef),
    'nodeGroupAffinity': toJson_DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity(obj.nodeGroupAffinity),
    'privateIPv6GoogleAccess': obj.privateIPv6GoogleAccess,
    'reservationAffinity': toJson_DataprocClusterSpecConfigGceClusterConfigReservationAffinity(obj.reservationAffinity),
    'serviceAccountRef': toJson_DataprocClusterSpecConfigGceClusterConfigServiceAccountRef(obj.serviceAccountRef),
    'serviceAccountScopes': obj.serviceAccountScopes?.map(y => y),
    'shieldedInstanceConfig': toJson_DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig(obj.shieldedInstanceConfig),
    'subnetworkRef': toJson_DataprocClusterSpecConfigGceClusterConfigSubnetworkRef(obj.subnetworkRef),
    'tags': obj.tags?.map(y => y),
    'zone': obj.zone,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocClusterSpecConfigInitializationActions
 */
export interface DataprocClusterSpecConfigInitializationActions {
  /**
   * Immutable. Required. Cloud Storage URI of executable file.
   *
   * @schema DataprocClusterSpecConfigInitializationActions#executableFile
   */
  readonly executableFile: string;

  /**
   * Immutable. Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
   *
   * @default 10 minutes (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
   * @schema DataprocClusterSpecConfigInitializationActions#executionTimeout
   */
  readonly executionTimeout?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigInitializationActions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigInitializationActions(obj: DataprocClusterSpecConfigInitializationActions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'executableFile': obj.executableFile,
    'executionTimeout': obj.executionTimeout,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Lifecycle setting for the cluster.
 *
 * @schema DataprocClusterSpecConfigLifecycleConfig
 */
export interface DataprocClusterSpecConfigLifecycleConfig {
  /**
   * Immutable. Optional. The time when cluster will be auto-deleted (see JSON representation of [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)).
   *
   * @schema DataprocClusterSpecConfigLifecycleConfig#autoDeleteTime
   */
  readonly autoDeleteTime?: Date;

  /**
   * Immutable. Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
   *
   * @schema DataprocClusterSpecConfigLifecycleConfig#autoDeleteTtl
   */
  readonly autoDeleteTtl?: string;

  /**
   * Immutable. Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
   *
   * @schema DataprocClusterSpecConfigLifecycleConfig#idleDeleteTtl
   */
  readonly idleDeleteTtl?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigLifecycleConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigLifecycleConfig(obj: DataprocClusterSpecConfigLifecycleConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'autoDeleteTime': obj.autoDeleteTime?.toISOString(),
    'autoDeleteTtl': obj.autoDeleteTtl,
    'idleDeleteTtl': obj.idleDeleteTtl,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The Compute Engine config settings for the master instance in a cluster.
 *
 * @schema DataprocClusterSpecConfigMasterConfig
 */
export interface DataprocClusterSpecConfigMasterConfig {
  /**
   * Immutable. Optional. The Compute Engine accelerator configuration for these instances.
   *
   * @schema DataprocClusterSpecConfigMasterConfig#accelerators
   */
  readonly accelerators?: DataprocClusterSpecConfigMasterConfigAccelerators[];

  /**
   * Immutable. Optional. Disk option config settings.
   *
   * @schema DataprocClusterSpecConfigMasterConfig#diskConfig
   */
  readonly diskConfig?: DataprocClusterSpecConfigMasterConfigDiskConfig;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigMasterConfig#imageRef
   */
  readonly imageRef?: DataprocClusterSpecConfigMasterConfigImageRef;

  /**
   * Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`.
   *
   * @schema DataprocClusterSpecConfigMasterConfig#machineType
   */
  readonly machineType?: string;

  /**
   * Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
   *
   * @schema DataprocClusterSpecConfigMasterConfig#minCpuPlatform
   */
  readonly minCpuPlatform?: string;

  /**
   * Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.
   *
   * @schema DataprocClusterSpecConfigMasterConfig#numInstances
   */
  readonly numInstances?: number;

  /**
   * Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE
   *
   * @schema DataprocClusterSpecConfigMasterConfig#preemptibility
   */
  readonly preemptibility?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigMasterConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigMasterConfig(obj: DataprocClusterSpecConfigMasterConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accelerators': obj.accelerators?.map(y => toJson_DataprocClusterSpecConfigMasterConfigAccelerators(y)),
    'diskConfig': toJson_DataprocClusterSpecConfigMasterConfigDiskConfig(obj.diskConfig),
    'imageRef': toJson_DataprocClusterSpecConfigMasterConfigImageRef(obj.imageRef),
    'machineType': obj.machineType,
    'minCpuPlatform': obj.minCpuPlatform,
    'numInstances': obj.numInstances,
    'preemptibility': obj.preemptibility,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Metastore configuration.
 *
 * @schema DataprocClusterSpecConfigMetastoreConfig
 */
export interface DataprocClusterSpecConfigMetastoreConfig {
  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigMetastoreConfig#dataprocMetastoreServiceRef
   */
  readonly dataprocMetastoreServiceRef: DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigMetastoreConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigMetastoreConfig(obj: DataprocClusterSpecConfigMetastoreConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'dataprocMetastoreServiceRef': toJson_DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef(obj.dataprocMetastoreServiceRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The Compute Engine config settings for additional worker instances in a cluster.
 *
 * @schema DataprocClusterSpecConfigSecondaryWorkerConfig
 */
export interface DataprocClusterSpecConfigSecondaryWorkerConfig {
  /**
   * Immutable. Optional. The Compute Engine accelerator configuration for these instances.
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfig#accelerators
   */
  readonly accelerators?: DataprocClusterSpecConfigSecondaryWorkerConfigAccelerators[];

  /**
   * Immutable. Optional. Disk option config settings.
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfig#diskConfig
   */
  readonly diskConfig?: DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfig#imageRef
   */
  readonly imageRef?: DataprocClusterSpecConfigSecondaryWorkerConfigImageRef;

  /**
   * Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`.
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfig#machineType
   */
  readonly machineType?: string;

  /**
   * Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfig#minCpuPlatform
   */
  readonly minCpuPlatform?: string;

  /**
   * Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfig#numInstances
   */
  readonly numInstances?: number;

  /**
   * Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfig#preemptibility
   */
  readonly preemptibility?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigSecondaryWorkerConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigSecondaryWorkerConfig(obj: DataprocClusterSpecConfigSecondaryWorkerConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accelerators': obj.accelerators?.map(y => toJson_DataprocClusterSpecConfigSecondaryWorkerConfigAccelerators(y)),
    'diskConfig': toJson_DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig(obj.diskConfig),
    'imageRef': toJson_DataprocClusterSpecConfigSecondaryWorkerConfigImageRef(obj.imageRef),
    'machineType': obj.machineType,
    'minCpuPlatform': obj.minCpuPlatform,
    'numInstances': obj.numInstances,
    'preemptibility': obj.preemptibility,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Security settings for the cluster.
 *
 * @schema DataprocClusterSpecConfigSecurityConfig
 */
export interface DataprocClusterSpecConfigSecurityConfig {
  /**
   * Immutable. Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
   *
   * @schema DataprocClusterSpecConfigSecurityConfig#identityConfig
   */
  readonly identityConfig?: DataprocClusterSpecConfigSecurityConfigIdentityConfig;

  /**
   * Immutable. Optional. Kerberos related configuration.
   *
   * @schema DataprocClusterSpecConfigSecurityConfig#kerberosConfig
   */
  readonly kerberosConfig?: DataprocClusterSpecConfigSecurityConfigKerberosConfig;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigSecurityConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigSecurityConfig(obj: DataprocClusterSpecConfigSecurityConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'identityConfig': toJson_DataprocClusterSpecConfigSecurityConfigIdentityConfig(obj.identityConfig),
    'kerberosConfig': toJson_DataprocClusterSpecConfigSecurityConfigKerberosConfig(obj.kerberosConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The config settings for software inside the cluster.
 *
 * @schema DataprocClusterSpecConfigSoftwareConfig
 */
export interface DataprocClusterSpecConfigSoftwareConfig {
  /**
   * Immutable. Optional. The version of software inside the cluster. It must be one of the supported [Dataproc Versions](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the ["preview" version](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
   *
   * @schema DataprocClusterSpecConfigSoftwareConfig#imageVersion
   */
  readonly imageVersion?: string;

  /**
   * Immutable. Optional. The set of components to activate on the cluster.
   *
   * @schema DataprocClusterSpecConfigSoftwareConfig#optionalComponents
   */
  readonly optionalComponents?: string[];

  /**
   * Immutable. Optional. The properties to set on daemon config files. Property keys are specified in `prefix:property` format, for example `core:hadoop.tmp.dir`. The following are supported prefixes and their mappings: * capacity-scheduler: `capacity-scheduler.xml` * core: `core-site.xml` * distcp: `distcp-default.xml` * hdfs: `hdfs-site.xml` * hive: `hive-site.xml` * mapred: `mapred-site.xml` * pig: `pig.properties` * spark: `spark-defaults.conf` * yarn: `yarn-site.xml` For more information, see [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
   *
   * @schema DataprocClusterSpecConfigSoftwareConfig#properties
   */
  readonly properties?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigSoftwareConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigSoftwareConfig(obj: DataprocClusterSpecConfigSoftwareConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'imageVersion': obj.imageVersion,
    'optionalComponents': obj.optionalComponents?.map(y => y),
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigStagingBucketRef
 */
export interface DataprocClusterSpecConfigStagingBucketRef {
  /**
   * Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see [Dataproc staging bucket](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). **This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.**
   *
   * Allowed value: The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
   *
   * @schema DataprocClusterSpecConfigStagingBucketRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigStagingBucketRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigStagingBucketRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigStagingBucketRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigStagingBucketRef(obj: DataprocClusterSpecConfigStagingBucketRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigTempBucketRef
 */
export interface DataprocClusterSpecConfigTempBucketRef {
  /**
   * Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. **This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.**
   *
   * Allowed value: The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
   *
   * @schema DataprocClusterSpecConfigTempBucketRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigTempBucketRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigTempBucketRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigTempBucketRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigTempBucketRef(obj: DataprocClusterSpecConfigTempBucketRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The Compute Engine config settings for worker instances in a cluster.
 *
 * @schema DataprocClusterSpecConfigWorkerConfig
 */
export interface DataprocClusterSpecConfigWorkerConfig {
  /**
   * Immutable. Optional. The Compute Engine accelerator configuration for these instances.
   *
   * @schema DataprocClusterSpecConfigWorkerConfig#accelerators
   */
  readonly accelerators?: DataprocClusterSpecConfigWorkerConfigAccelerators[];

  /**
   * Immutable. Optional. Disk option config settings.
   *
   * @schema DataprocClusterSpecConfigWorkerConfig#diskConfig
   */
  readonly diskConfig?: DataprocClusterSpecConfigWorkerConfigDiskConfig;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigWorkerConfig#imageRef
   */
  readonly imageRef?: DataprocClusterSpecConfigWorkerConfigImageRef;

  /**
   * Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`.
   *
   * @schema DataprocClusterSpecConfigWorkerConfig#machineType
   */
  readonly machineType?: string;

  /**
   * Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
   *
   * @schema DataprocClusterSpecConfigWorkerConfig#minCpuPlatform
   */
  readonly minCpuPlatform?: string;

  /**
   * Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.
   *
   * @schema DataprocClusterSpecConfigWorkerConfig#numInstances
   */
  readonly numInstances?: number;

  /**
   * Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE
   *
   * @schema DataprocClusterSpecConfigWorkerConfig#preemptibility
   */
  readonly preemptibility?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigWorkerConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigWorkerConfig(obj: DataprocClusterSpecConfigWorkerConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accelerators': obj.accelerators?.map(y => toJson_DataprocClusterSpecConfigWorkerConfigAccelerators(y)),
    'diskConfig': toJson_DataprocClusterSpecConfigWorkerConfigDiskConfig(obj.diskConfig),
    'imageRef': toJson_DataprocClusterSpecConfigWorkerConfigImageRef(obj.imageRef),
    'machineType': obj.machineType,
    'minCpuPlatform': obj.minCpuPlatform,
    'numInstances': obj.numInstances,
    'preemptibility': obj.preemptibility,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Configuration of auxiliary services used by this cluster.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig
 */
export interface DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig {
  /**
   * Immutable. Optional. The Hive Metastore configuration for this workload.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig#metastoreConfig
   */
  readonly metastoreConfig?: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig;

  /**
   * Immutable. Optional. The Spark History Server configuration for the workload.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig#sparkHistoryServerConfig
   */
  readonly sparkHistoryServerConfig?: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig(obj: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metastoreConfig': toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig(obj.metastoreConfig),
    'sparkHistoryServerConfig': toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig(obj.sparkHistoryServerConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Required. The configuration for running the Dataproc cluster on Kubernetes.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig {
  /**
   * Immutable. Required. The configuration for running the Dataproc cluster on GKE.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig#gkeClusterConfig
   */
  readonly gkeClusterConfig: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig;

  /**
   * Immutable. Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig#kubernetesNamespace
   */
  readonly kubernetesNamespace?: string;

  /**
   * Immutable. Optional. The software configuration for this Dataproc cluster running on Kubernetes.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig#kubernetesSoftwareConfig
   */
  readonly kubernetesSoftwareConfig?: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gkeClusterConfig': toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig(obj.gkeClusterConfig),
    'kubernetesNamespace': obj.kubernetesNamespace,
    'kubernetesSoftwareConfig': toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig(obj.kubernetesSoftwareConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigStagingBucketRef
 */
export interface DataprocClusterSpecVirtualClusterConfigStagingBucketRef {
  /**
   * Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see [Dataproc staging and temp buckets](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). **This field requires a Cloud Storage bucket name, not a `gs://...` URI to a Cloud Storage bucket.**
   *
   * Allowed value: The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
   *
   * @schema DataprocClusterSpecVirtualClusterConfigStagingBucketRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecVirtualClusterConfigStagingBucketRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecVirtualClusterConfigStagingBucketRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigStagingBucketRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigStagingBucketRef(obj: DataprocClusterSpecVirtualClusterConfigStagingBucketRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigAutoscalingConfigPolicyRef
 */
export interface DataprocClusterSpecConfigAutoscalingConfigPolicyRef {
  /**
   * Optional. The autoscaling policy used by the cluster. Only resource names including projectid and location (region) are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]` * `projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]` Note that the policy must be in the same project and Dataproc region.
   *
   * Allowed value: The Google Cloud resource name of a `DataprocAutoscalingPolicy` resource (format: `projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{name}}`).
   *
   * @schema DataprocClusterSpecConfigAutoscalingConfigPolicyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigAutoscalingConfigPolicyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigAutoscalingConfigPolicyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigAutoscalingConfigPolicyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigAutoscalingConfigPolicyRef(obj: DataprocClusterSpecConfigAutoscalingConfigPolicyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocClusterSpecConfigDataprocMetricConfigMetrics
 */
export interface DataprocClusterSpecConfigDataprocMetricConfigMetrics {
  /**
   * Immutable. Optional. Specify one or more [available OSS metrics] (https://cloud.google.com/dataproc/docs/guides/monitoring#available_oss_metrics) to collect for the metric course (for the `SPARK` metric source, any [Spark metric] (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified). Provide metrics in the following format: `METRIC_SOURCE:INSTANCE:GROUP:METRIC` Use camelcase as appropriate. Examples: ``` yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used ``` Notes: * Only the specified overridden metrics will be collected for the metric source. For example, if one or more `spark:executive` metrics are listed as metric overrides, other `SPARK` metrics will not be collected. The collection of the default metrics for other OSS metric sources is unaffected. For example, if both `SPARK` andd `YARN` metric sources are enabled, and overrides are provided for Spark metrics only, all default YARN metrics will be collected.
   *
   * @schema DataprocClusterSpecConfigDataprocMetricConfigMetrics#metricOverrides
   */
  readonly metricOverrides?: string[];

  /**
   * Immutable. Required. Default metrics are collected unless `metricOverrides` are specified for the metric source (see [Available OSS metrics] (https://cloud.google.com/dataproc/docs/guides/monitoring#available_oss_metrics) for more information). Possible values: METRIC_SOURCE_UNSPECIFIED, MONITORING_AGENT_DEFAULTS, HDFS, SPARK, YARN, SPARK_HISTORY_SERVER, HIVESERVER2
   *
   * @schema DataprocClusterSpecConfigDataprocMetricConfigMetrics#metricSource
   */
  readonly metricSource: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigDataprocMetricConfigMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigDataprocMetricConfigMetrics(obj: DataprocClusterSpecConfigDataprocMetricConfigMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metricOverrides': obj.metricOverrides?.map(y => y),
    'metricSource': obj.metricSource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef
 */
export interface DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef {
  /**
   * Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
   *
   * Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
   *
   * @schema DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef(obj: DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Confidential Instance Config for clusters using [Confidential VMs](https://cloud.google.com/compute/confidential-vm/docs).
 *
 * @schema DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig
 */
export interface DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig {
  /**
   * Immutable. Optional. Defines whether the instance should have confidential compute enabled.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig#enableConfidentialCompute
   */
  readonly enableConfidentialCompute?: boolean;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig(obj: DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableConfidentialCompute': obj.enableConfidentialCompute,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigGceClusterConfigNetworkRef
 */
export interface DataprocClusterSpecConfigGceClusterConfigNetworkRef {
  /**
   * Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither `network_uri` nor `subnetwork_uri` is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see [Using Subnetworks](https://cloud.google.com/compute/docs/subnetworks) for more information). A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default` * `projects/[project_id]/regions/global/default` * `default`
   *
   * Allowed value: The `selfLink` field of a `ComputeNetwork` resource.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigNetworkRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigNetworkRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigNetworkRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigGceClusterConfigNetworkRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigGceClusterConfigNetworkRef(obj: DataprocClusterSpecConfigGceClusterConfigNetworkRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Node Group Affinity for sole-tenant clusters.
 *
 * @schema DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity
 */
export interface DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity {
  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity#nodeGroupRef
   */
  readonly nodeGroupRef: DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity(obj: DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeGroupRef': toJson_DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef(obj.nodeGroupRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Reservation Affinity for consuming Zonal reservation.
 *
 * @schema DataprocClusterSpecConfigGceClusterConfigReservationAffinity
 */
export interface DataprocClusterSpecConfigGceClusterConfigReservationAffinity {
  /**
   * Immutable. Optional. Type of reservation to consume Possible values: TYPE_UNSPECIFIED, NO_RESERVATION, ANY_RESERVATION, SPECIFIC_RESERVATION
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigReservationAffinity#consumeReservationType
   */
  readonly consumeReservationType?: string;

  /**
   * Immutable. Optional. Corresponds to the label key of reservation resource.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigReservationAffinity#key
   */
  readonly key?: string;

  /**
   * Immutable. Optional. Corresponds to the label values of reservation resource.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigReservationAffinity#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigGceClusterConfigReservationAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigGceClusterConfigReservationAffinity(obj: DataprocClusterSpecConfigGceClusterConfigReservationAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'consumeReservationType': obj.consumeReservationType,
    'key': obj.key,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigGceClusterConfigServiceAccountRef
 */
export interface DataprocClusterSpecConfigGceClusterConfigServiceAccountRef {
  /**
   * Optional. The [Dataproc service account](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see [VM Data Plane identity](https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
   *
   * Allowed value: The `email` field of an `IAMServiceAccount` resource.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigGceClusterConfigServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigGceClusterConfigServiceAccountRef(obj: DataprocClusterSpecConfigGceClusterConfigServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Shielded Instance Config for clusters using [Compute Engine Shielded VMs](https://cloud.google.com/security/shielded-cloud/shielded-vm).
 *
 * @schema DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig
 */
export interface DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig {
  /**
   * Immutable. Optional. Defines whether instances have integrity monitoring enabled.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig#enableIntegrityMonitoring
   */
  readonly enableIntegrityMonitoring?: boolean;

  /**
   * Immutable. Optional. Defines whether instances have Secure Boot enabled.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig#enableSecureBoot
   */
  readonly enableSecureBoot?: boolean;

  /**
   * Immutable. Optional. Defines whether instances have the vTPM enabled.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig#enableVtpm
   */
  readonly enableVtpm?: boolean;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig(obj: DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableIntegrityMonitoring': obj.enableIntegrityMonitoring,
    'enableSecureBoot': obj.enableSecureBoot,
    'enableVtpm': obj.enableVtpm,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigGceClusterConfigSubnetworkRef
 */
export interface DataprocClusterSpecConfigGceClusterConfigSubnetworkRef {
  /**
   * Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0` * `sub0`
   *
   * Allowed value: The `selfLink` field of a `ComputeSubnetwork` resource.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigSubnetworkRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigSubnetworkRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigSubnetworkRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigGceClusterConfigSubnetworkRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigGceClusterConfigSubnetworkRef(obj: DataprocClusterSpecConfigGceClusterConfigSubnetworkRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocClusterSpecConfigMasterConfigAccelerators
 */
export interface DataprocClusterSpecConfigMasterConfigAccelerators {
  /**
   * Immutable. The number of the accelerator cards of this type exposed to this instance.
   *
   * @schema DataprocClusterSpecConfigMasterConfigAccelerators#acceleratorCount
   */
  readonly acceleratorCount?: number;

  /**
   * Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`.
   *
   * @schema DataprocClusterSpecConfigMasterConfigAccelerators#acceleratorType
   */
  readonly acceleratorType?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigMasterConfigAccelerators' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigMasterConfigAccelerators(obj: DataprocClusterSpecConfigMasterConfigAccelerators | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'acceleratorCount': obj.acceleratorCount,
    'acceleratorType': obj.acceleratorType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Disk option config settings.
 *
 * @schema DataprocClusterSpecConfigMasterConfigDiskConfig
 */
export interface DataprocClusterSpecConfigMasterConfigDiskConfig {
  /**
   * Immutable. Optional. Size in GB of the boot disk (default is 500GB).
   *
   * @schema DataprocClusterSpecConfigMasterConfigDiskConfig#bootDiskSizeGb
   */
  readonly bootDiskSizeGb?: number;

  /**
   * Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
   *
   * @schema DataprocClusterSpecConfigMasterConfigDiskConfig#bootDiskType
   */
  readonly bootDiskType?: string;

  /**
   * Immutable. Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See [local SSD performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
   *
   * @schema DataprocClusterSpecConfigMasterConfigDiskConfig#localSsdInterface
   */
  readonly localSsdInterface?: string;

  /**
   * Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
   *
   * @schema DataprocClusterSpecConfigMasterConfigDiskConfig#numLocalSsds
   */
  readonly numLocalSsds?: number;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigMasterConfigDiskConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigMasterConfigDiskConfig(obj: DataprocClusterSpecConfigMasterConfigDiskConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bootDiskSizeGb': obj.bootDiskSizeGb,
    'bootDiskType': obj.bootDiskType,
    'localSsdInterface': obj.localSsdInterface,
    'numLocalSsds': obj.numLocalSsds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigMasterConfigImageRef
 */
export interface DataprocClusterSpecConfigMasterConfigImageRef {
  /**
   * Optional. The Compute Engine image resource used for cluster instances. The URI can represent an image or image family. Image examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]` * `projects/[project_id]/global/images/[image-id]` * `image-id` Image family examples. Dataproc will use the most recent image from the family: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]` * `projects/[project_id]/global/images/family/[custom-image-family-name]` If the URI is unspecified, it will be inferred from `SoftwareConfig.image_version` or the system default.
   *
   * Allowed value: The `selfLink` field of a `ComputeImage` resource.
   *
   * @schema DataprocClusterSpecConfigMasterConfigImageRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigMasterConfigImageRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigMasterConfigImageRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigMasterConfigImageRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigMasterConfigImageRef(obj: DataprocClusterSpecConfigMasterConfigImageRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef
 */
export interface DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef {
  /**
   * Required. Resource name of an existing Dataproc Metastore service. Example: * `projects/[project_id]/locations/[dataproc_region]/services/[service-name]`
   *
   * @schema DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef#external
   */
  readonly external?: string;

  /**
   * [WARNING] DataprocMetastoreService not yet supported in Config Connector, use 'external' field to reference existing resources.
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef(obj: DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocClusterSpecConfigSecondaryWorkerConfigAccelerators
 */
export interface DataprocClusterSpecConfigSecondaryWorkerConfigAccelerators {
  /**
   * Immutable. The number of the accelerator cards of this type exposed to this instance.
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfigAccelerators#acceleratorCount
   */
  readonly acceleratorCount?: number;

  /**
   * Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`.
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfigAccelerators#acceleratorType
   */
  readonly acceleratorType?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigSecondaryWorkerConfigAccelerators' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigSecondaryWorkerConfigAccelerators(obj: DataprocClusterSpecConfigSecondaryWorkerConfigAccelerators | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'acceleratorCount': obj.acceleratorCount,
    'acceleratorType': obj.acceleratorType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Disk option config settings.
 *
 * @schema DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig
 */
export interface DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig {
  /**
   * Immutable. Optional. Size in GB of the boot disk (default is 500GB).
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig#bootDiskSizeGb
   */
  readonly bootDiskSizeGb?: number;

  /**
   * Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig#bootDiskType
   */
  readonly bootDiskType?: string;

  /**
   * Immutable. Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See [local SSD performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig#localSsdInterface
   */
  readonly localSsdInterface?: string;

  /**
   * Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig#numLocalSsds
   */
  readonly numLocalSsds?: number;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig(obj: DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bootDiskSizeGb': obj.bootDiskSizeGb,
    'bootDiskType': obj.bootDiskType,
    'localSsdInterface': obj.localSsdInterface,
    'numLocalSsds': obj.numLocalSsds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigSecondaryWorkerConfigImageRef
 */
export interface DataprocClusterSpecConfigSecondaryWorkerConfigImageRef {
  /**
   * Optional. The Compute Engine image resource used for cluster instances. The URI can represent an image or image family. Image examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]` * `projects/[project_id]/global/images/[image-id]` * `image-id` Image family examples. Dataproc will use the most recent image from the family: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]` * `projects/[project_id]/global/images/family/[custom-image-family-name]` If the URI is unspecified, it will be inferred from `SoftwareConfig.image_version` or the system default.
   *
   * Allowed value: The `selfLink` field of a `ComputeImage` resource.
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfigImageRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfigImageRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigSecondaryWorkerConfigImageRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigSecondaryWorkerConfigImageRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigSecondaryWorkerConfigImageRef(obj: DataprocClusterSpecConfigSecondaryWorkerConfigImageRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
 *
 * @schema DataprocClusterSpecConfigSecurityConfigIdentityConfig
 */
export interface DataprocClusterSpecConfigSecurityConfigIdentityConfig {
  /**
   * Immutable. Required. Map of user to service account.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigIdentityConfig#userServiceAccountMapping
   */
  readonly userServiceAccountMapping: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigSecurityConfigIdentityConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigSecurityConfigIdentityConfig(obj: DataprocClusterSpecConfigSecurityConfigIdentityConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'userServiceAccountMapping': ((obj.userServiceAccountMapping) === undefined) ? undefined : (Object.entries(obj.userServiceAccountMapping).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Kerberos related configuration.
 *
 * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig
 */
export interface DataprocClusterSpecConfigSecurityConfigKerberosConfig {
  /**
   * Immutable. Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#crossRealmTrustAdminServer
   */
  readonly crossRealmTrustAdminServer?: string;

  /**
   * Immutable. Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#crossRealmTrustKdc
   */
  readonly crossRealmTrustKdc?: string;

  /**
   * Immutable. Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#crossRealmTrustRealm
   */
  readonly crossRealmTrustRealm?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#crossRealmTrustSharedPassword
   */
  readonly crossRealmTrustSharedPassword?: string;

  /**
   * Immutable. Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#enableKerberos
   */
  readonly enableKerberos?: boolean;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#kdcDbKey
   */
  readonly kdcDbKey?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#keyPassword
   */
  readonly keyPassword?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#keystore
   */
  readonly keystore?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#keystorePassword
   */
  readonly keystorePassword?: string;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#kmsKeyRef
   */
  readonly kmsKeyRef?: DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef;

  /**
   * Immutable. Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#realm
   */
  readonly realm?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#rootPrincipalPassword
   */
  readonly rootPrincipalPassword?: string;

  /**
   * Immutable. Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#tgtLifetimeHours
   */
  readonly tgtLifetimeHours?: number;

  /**
   * Immutable. Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#truststore
   */
  readonly truststore?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfig#truststorePassword
   */
  readonly truststorePassword?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigSecurityConfigKerberosConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigSecurityConfigKerberosConfig(obj: DataprocClusterSpecConfigSecurityConfigKerberosConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'crossRealmTrustAdminServer': obj.crossRealmTrustAdminServer,
    'crossRealmTrustKdc': obj.crossRealmTrustKdc,
    'crossRealmTrustRealm': obj.crossRealmTrustRealm,
    'crossRealmTrustSharedPassword': obj.crossRealmTrustSharedPassword,
    'enableKerberos': obj.enableKerberos,
    'kdcDbKey': obj.kdcDbKey,
    'keyPassword': obj.keyPassword,
    'keystore': obj.keystore,
    'keystorePassword': obj.keystorePassword,
    'kmsKeyRef': toJson_DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef(obj.kmsKeyRef),
    'realm': obj.realm,
    'rootPrincipalPassword': obj.rootPrincipalPassword,
    'tgtLifetimeHours': obj.tgtLifetimeHours,
    'truststore': obj.truststore,
    'truststorePassword': obj.truststorePassword,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocClusterSpecConfigWorkerConfigAccelerators
 */
export interface DataprocClusterSpecConfigWorkerConfigAccelerators {
  /**
   * Immutable. The number of the accelerator cards of this type exposed to this instance.
   *
   * @schema DataprocClusterSpecConfigWorkerConfigAccelerators#acceleratorCount
   */
  readonly acceleratorCount?: number;

  /**
   * Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`.
   *
   * @schema DataprocClusterSpecConfigWorkerConfigAccelerators#acceleratorType
   */
  readonly acceleratorType?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigWorkerConfigAccelerators' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigWorkerConfigAccelerators(obj: DataprocClusterSpecConfigWorkerConfigAccelerators | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'acceleratorCount': obj.acceleratorCount,
    'acceleratorType': obj.acceleratorType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Disk option config settings.
 *
 * @schema DataprocClusterSpecConfigWorkerConfigDiskConfig
 */
export interface DataprocClusterSpecConfigWorkerConfigDiskConfig {
  /**
   * Immutable. Optional. Size in GB of the boot disk (default is 500GB).
   *
   * @schema DataprocClusterSpecConfigWorkerConfigDiskConfig#bootDiskSizeGb
   */
  readonly bootDiskSizeGb?: number;

  /**
   * Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
   *
   * @schema DataprocClusterSpecConfigWorkerConfigDiskConfig#bootDiskType
   */
  readonly bootDiskType?: string;

  /**
   * Immutable. Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See [local SSD performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
   *
   * @schema DataprocClusterSpecConfigWorkerConfigDiskConfig#localSsdInterface
   */
  readonly localSsdInterface?: string;

  /**
   * Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
   *
   * @schema DataprocClusterSpecConfigWorkerConfigDiskConfig#numLocalSsds
   */
  readonly numLocalSsds?: number;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigWorkerConfigDiskConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigWorkerConfigDiskConfig(obj: DataprocClusterSpecConfigWorkerConfigDiskConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bootDiskSizeGb': obj.bootDiskSizeGb,
    'bootDiskType': obj.bootDiskType,
    'localSsdInterface': obj.localSsdInterface,
    'numLocalSsds': obj.numLocalSsds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigWorkerConfigImageRef
 */
export interface DataprocClusterSpecConfigWorkerConfigImageRef {
  /**
   * Optional. The Compute Engine image resource used for cluster instances. The URI can represent an image or image family. Image examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]` * `projects/[project_id]/global/images/[image-id]` * `image-id` Image family examples. Dataproc will use the most recent image from the family: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]` * `projects/[project_id]/global/images/family/[custom-image-family-name]` If the URI is unspecified, it will be inferred from `SoftwareConfig.image_version` or the system default.
   *
   * Allowed value: The `selfLink` field of a `ComputeImage` resource.
   *
   * @schema DataprocClusterSpecConfigWorkerConfigImageRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigWorkerConfigImageRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigWorkerConfigImageRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigWorkerConfigImageRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigWorkerConfigImageRef(obj: DataprocClusterSpecConfigWorkerConfigImageRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The Hive Metastore configuration for this workload.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig
 */
export interface DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig {
  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig#dataprocMetastoreServiceRef
   */
  readonly dataprocMetastoreServiceRef: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig(obj: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'dataprocMetastoreServiceRef': toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef(obj.dataprocMetastoreServiceRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The Spark History Server configuration for the workload.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig
 */
export interface DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig {
  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig#dataprocClusterRef
   */
  readonly dataprocClusterRef?: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig(obj: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'dataprocClusterRef': toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef(obj.dataprocClusterRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Required. The configuration for running the Dataproc cluster on GKE.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig {
  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig#gkeClusterTargetRef
   */
  readonly gkeClusterTargetRef?: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef;

  /**
   * Immutable. Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the `DEFAULT` GkeNodePoolTarget.Role. If a `GkeNodePoolTarget` is not specified, Dataproc constructs a `DEFAULT` `GkeNodePoolTarget`. Each role can be given to only one `GkeNodePoolTarget`. All node pools must have the same location settings.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig#nodePoolTarget
   */
  readonly nodePoolTarget?: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget[];

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gkeClusterTargetRef': toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef(obj.gkeClusterTargetRef),
    'nodePoolTarget': obj.nodePoolTarget?.map(y => toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The software configuration for this Dataproc cluster running on Kubernetes.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig {
  /**
   * Immutable. The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig#componentVersion
   */
  readonly componentVersion?: { [key: string]: string };

  /**
   * Immutable. The properties to set on daemon config files. Property keys are specified in `prefix:property` format, for example `spark:spark.kubernetes.container.image`. The following are supported prefixes and their mappings: * spark: `spark-defaults.conf` For more information, see [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig#properties
   */
  readonly properties?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'componentVersion': ((obj.componentVersion) === undefined) ? undefined : (Object.entries(obj.componentVersion).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef
 */
export interface DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef {
  /**
   * Required. The URI of a sole-tenant [node group resource](https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on. A full URL, partial URI, or node group name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1` * `projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1` * `node-group-1`
   *
   * Allowed value: The `selfLink` field of a `ComputeNodeGroup` resource.
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef(obj: DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef
 */
export interface DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef {
  /**
   * Optional. The uri of the KMS key used to encrypt various sensitive files.
   *
   * Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef(obj: DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef
 */
export interface DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef {
  /**
   * Required. Resource name of an existing Dataproc Metastore service. Example: * `projects/[project_id]/locations/[dataproc_region]/services/[service-name]`
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef#external
   */
  readonly external?: string;

  /**
   * [WARNING] DataprocMetastoreService not yet supported in Config Connector, use 'external' field to reference existing resources.
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef(obj: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef
 */
export interface DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef {
  /**
   * Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload. Example: * `projects/[project_id]/regions/[region]/clusters/[cluster_name]`
   *
   * Allowed value: The `selfLink` field of a `DataprocCluster` resource.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef(obj: DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef {
  /**
   * Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
   *
   * Allowed value: The `selfLink` field of a `ContainerCluster` resource.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget {
  /**
   * Immutable. Input only. The configuration for the GKE node pool. If specified, Dataproc attempts to create a node pool with the specified shape. If one with the same name already exists, it is verified against all specified fields. If a field differs, the virtual cluster creation will fail. If omitted, any node pool with the specified name is used. If a node pool with the specified name does not exist, Dataproc create a node pool with default values. This is an input only field. It will not be returned by the API.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget#nodePoolConfig
   */
  readonly nodePoolConfig?: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig;

  /**
   * Immutable.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget#nodePoolRef
   */
  readonly nodePoolRef: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef;

  /**
   * Immutable. Required. The roles associated with the GKE node pool.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget#roles
   */
  readonly roles: string[];

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodePoolConfig': toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig(obj.nodePoolConfig),
    'nodePoolRef': toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef(obj.nodePoolRef),
    'roles': obj.roles?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Input only. The configuration for the GKE node pool. If specified, Dataproc attempts to create a node pool with the specified shape. If one with the same name already exists, it is verified against all specified fields. If a field differs, the virtual cluster creation will fail. If omitted, any node pool with the specified name is used. If a node pool with the specified name does not exist, Dataproc create a node pool with default values. This is an input only field. It will not be returned by the API.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig {
  /**
   * Immutable. Optional. The autoscaler configuration for this node pool. The autoscaler is enabled only when a valid configuration is present.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig#autoscaling
   */
  readonly autoscaling?: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigAutoscaling;

  /**
   * Immutable. Optional. The node pool configuration.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig#config
   */
  readonly config?: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig;

  /**
   * Immutable. Optional. The list of Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located. **Note:** All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region. If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig#locations
   */
  readonly locations?: string[];

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'autoscaling': toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigAutoscaling(obj.autoscaling),
    'config': toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig(obj.config),
    'locations': obj.locations?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef {
  /**
   * Required. The target GKE node pool. Format: 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'
   *
   * Allowed value: The `selfLink` field of a `ContainerNodePool` resource.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The autoscaler configuration for this node pool. The autoscaler is enabled only when a valid configuration is present.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigAutoscaling
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigAutoscaling {
  /**
   * Immutable. The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. **Note:** Quota must be sufficient to scale up the cluster.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigAutoscaling#maxNodeCount
   */
  readonly maxNodeCount?: number;

  /**
   * Immutable. The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigAutoscaling#minNodeCount
   */
  readonly minNodeCount?: number;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigAutoscaling' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigAutoscaling(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigAutoscaling | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxNodeCount': obj.maxNodeCount,
    'minNodeCount': obj.minNodeCount,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The node pool configuration.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig {
  /**
   * Immutable. Optional. A list of [hardware accelerators](https://cloud.google.com/compute/docs/gpus) to attach to each node.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig#accelerators
   */
  readonly accelerators?: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators[];

  /**
   * Immutable. Optional. The [Customer Managed Encryption Key (CMEK)] (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: `projects/KEY_PROJECT_ID/locations/LOCATION/keyRings/RING_NAME/cryptoKeys/KEY_NAME`.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig#bootDiskKmsKey
   */
  readonly bootDiskKmsKey?: string;

  /**
   * Immutable. Optional. Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig#ephemeralStorageConfig
   */
  readonly ephemeralStorageConfig?: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigEphemeralStorageConfig;

  /**
   * Immutable. Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see [Adding Local SSDs](https://cloud.google.com/compute/docs/disks/local-ssd)).
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig#localSsdCount
   */
  readonly localSsdCount?: number;

  /**
   * Immutable. Optional. The name of a Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types).
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig#machineType
   */
  readonly machineType?: string;

  /**
   * Immutable. Optional. [Minimum CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig#minCpuPlatform
   */
  readonly minCpuPlatform?: string;

  /**
   * Immutable. Optional. Whether the nodes are created as legacy [preemptible VM instances] (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the `CONTROLLER` [role] (/dataproc/docs/reference/rest/v1/projects.regions.clusters#role) or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig#preemptible
   */
  readonly preemptible?: boolean;

  /**
   * Immutable. Optional. Whether the nodes are created as [Spot VM instances] (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the `CONTROLLER` [role](/dataproc/docs/reference/rest/v1/projects.regions.clusters#role) or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig#spot
   */
  readonly spot?: boolean;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accelerators': obj.accelerators?.map(y => toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators(y)),
    'bootDiskKmsKey': obj.bootDiskKmsKey,
    'ephemeralStorageConfig': toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigEphemeralStorageConfig(obj.ephemeralStorageConfig),
    'localSsdCount': obj.localSsdCount,
    'machineType': obj.machineType,
    'minCpuPlatform': obj.minCpuPlatform,
    'preemptible': obj.preemptible,
    'spot': obj.spot,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators {
  /**
   * Immutable. The number of accelerator cards exposed to an instance.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators#acceleratorCount
   */
  readonly acceleratorCount?: number;

  /**
   * Immutable. The accelerator type resource namename (see GPUs on Compute Engine).
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators#acceleratorType
   */
  readonly acceleratorType?: string;

  /**
   * Immutable. Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators#gpuPartitionSize
   */
  readonly gpuPartitionSize?: string;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigAccelerators | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'acceleratorCount': obj.acceleratorCount,
    'acceleratorType': obj.acceleratorType,
    'gpuPartitionSize': obj.gpuPartitionSize,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
 *
 * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigEphemeralStorageConfig
 */
export interface DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigEphemeralStorageConfig {
  /**
   * Immutable. Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
   *
   * @schema DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigEphemeralStorageConfig#localSsdCount
   */
  readonly localSsdCount?: number;

}

/**
 * Converts an object of type 'DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigEphemeralStorageConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigEphemeralStorageConfig(obj: DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetNodePoolConfigConfigEphemeralStorageConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localSsdCount': obj.localSsdCount,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema DataprocWorkflowTemplate
 */
export class DataprocWorkflowTemplate extends ApiObject {
  /**
   * Returns the apiVersion and kind for "DataprocWorkflowTemplate"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'dataproc.cnrm.cloud.google.com/v1beta1',
    kind: 'DataprocWorkflowTemplate',
  }

  /**
   * Renders a Kubernetes manifest for "DataprocWorkflowTemplate".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: DataprocWorkflowTemplateProps): any {
    return {
      ...DataprocWorkflowTemplate.GVK,
      ...toJson_DataprocWorkflowTemplateProps(props),
    };
  }

  /**
   * Defines a "DataprocWorkflowTemplate" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: DataprocWorkflowTemplateProps) {
    super(scope, id, {
      ...DataprocWorkflowTemplate.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...DataprocWorkflowTemplate.GVK,
      ...toJson_DataprocWorkflowTemplateProps(resolved),
    };
  }
}

/**
 * @schema DataprocWorkflowTemplate
 */
export interface DataprocWorkflowTemplateProps {
  /**
   * @schema DataprocWorkflowTemplate#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema DataprocWorkflowTemplate#spec
   */
  readonly spec: DataprocWorkflowTemplateSpec;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateProps(obj: DataprocWorkflowTemplateProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_DataprocWorkflowTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocWorkflowTemplateSpec
 */
export interface DataprocWorkflowTemplateSpec {
  /**
   * Immutable. Optional. Timeout duration for the DAG of jobs, expressed in seconds (see [JSON representation of duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a [managed cluster](/dataproc/docs/concepts/workflows/using-workflows#configuring_or_selecting_a_cluster), the cluster is deleted.
   *
   * @schema DataprocWorkflowTemplateSpec#dagTimeout
   */
  readonly dagTimeout?: string;

  /**
   * Immutable. Required. The Directed Acyclic Graph of Jobs to submit.
   *
   * @schema DataprocWorkflowTemplateSpec#jobs
   */
  readonly jobs: DataprocWorkflowTemplateSpecJobs[];

  /**
   * Immutable. The location for the resource
   *
   * @schema DataprocWorkflowTemplateSpec#location
   */
  readonly location: string;

  /**
   * Immutable. Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
   *
   * @schema DataprocWorkflowTemplateSpec#parameters
   */
  readonly parameters?: DataprocWorkflowTemplateSpecParameters[];

  /**
   * Immutable. Required. WorkflowTemplate scheduling information.
   *
   * @schema DataprocWorkflowTemplateSpec#placement
   */
  readonly placement: DataprocWorkflowTemplateSpecPlacement;

  /**
   * Immutable. The Project that this resource belongs to.
   *
   * @schema DataprocWorkflowTemplateSpec#projectRef
   */
  readonly projectRef?: DataprocWorkflowTemplateSpecProjectRef;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema DataprocWorkflowTemplateSpec#resourceID
   */
  readonly resourceId?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpec(obj: DataprocWorkflowTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'dagTimeout': obj.dagTimeout,
    'jobs': obj.jobs?.map(y => toJson_DataprocWorkflowTemplateSpecJobs(y)),
    'location': obj.location,
    'parameters': obj.parameters?.map(y => toJson_DataprocWorkflowTemplateSpecParameters(y)),
    'placement': toJson_DataprocWorkflowTemplateSpecPlacement(obj.placement),
    'projectRef': toJson_DataprocWorkflowTemplateSpecProjectRef(obj.projectRef),
    'resourceID': obj.resourceId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocWorkflowTemplateSpecJobs
 */
export interface DataprocWorkflowTemplateSpecJobs {
  /**
   * Immutable. Optional. Job is a Hadoop job.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#hadoopJob
   */
  readonly hadoopJob?: DataprocWorkflowTemplateSpecJobsHadoopJob;

  /**
   * Immutable. Optional. Job is a Hive job.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#hiveJob
   */
  readonly hiveJob?: DataprocWorkflowTemplateSpecJobsHiveJob;

  /**
   * Immutable. Optional. The labels to associate with this job. Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: p{Ll}p{Lo}{0,62} Label values must be between 1 and 63 characters long, and must conform to the following regular expression: [p{Ll}p{Lo}p{N}_-]{0,63} No more than 32 labels can be associated with a given job.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * Immutable. Optional. Job is a Pig job.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#pigJob
   */
  readonly pigJob?: DataprocWorkflowTemplateSpecJobsPigJob;

  /**
   * Immutable. Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#prerequisiteStepIds
   */
  readonly prerequisiteStepIds?: string[];

  /**
   * Immutable. Optional. Job is a Presto job.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#prestoJob
   */
  readonly prestoJob?: DataprocWorkflowTemplateSpecJobsPrestoJob;

  /**
   * Immutable. Optional. Job is a PySpark job.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#pysparkJob
   */
  readonly pysparkJob?: DataprocWorkflowTemplateSpecJobsPysparkJob;

  /**
   * Immutable. Optional. Job scheduling configuration.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#scheduling
   */
  readonly scheduling?: DataprocWorkflowTemplateSpecJobsScheduling;

  /**
   * Immutable. Optional. Job is a Spark job.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#sparkJob
   */
  readonly sparkJob?: DataprocWorkflowTemplateSpecJobsSparkJob;

  /**
   * Immutable. Optional. Job is a SparkR job.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#sparkRJob
   */
  readonly sparkRJob?: DataprocWorkflowTemplateSpecJobsSparkRJob;

  /**
   * Immutable. Optional. Job is a SparkSql job.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#sparkSqlJob
   */
  readonly sparkSqlJob?: DataprocWorkflowTemplateSpecJobsSparkSqlJob;

  /**
   * Immutable. Required. The step id. The id must be unique among all jobs within the template. The step id is used as prefix for job id, as job `goog-dataproc-workflow-step-id` label, and in prerequisiteStepIds field from other steps. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
   *
   * @schema DataprocWorkflowTemplateSpecJobs#stepId
   */
  readonly stepId: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobs(obj: DataprocWorkflowTemplateSpecJobs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'hadoopJob': toJson_DataprocWorkflowTemplateSpecJobsHadoopJob(obj.hadoopJob),
    'hiveJob': toJson_DataprocWorkflowTemplateSpecJobsHiveJob(obj.hiveJob),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'pigJob': toJson_DataprocWorkflowTemplateSpecJobsPigJob(obj.pigJob),
    'prerequisiteStepIds': obj.prerequisiteStepIds?.map(y => y),
    'prestoJob': toJson_DataprocWorkflowTemplateSpecJobsPrestoJob(obj.prestoJob),
    'pysparkJob': toJson_DataprocWorkflowTemplateSpecJobsPysparkJob(obj.pysparkJob),
    'scheduling': toJson_DataprocWorkflowTemplateSpecJobsScheduling(obj.scheduling),
    'sparkJob': toJson_DataprocWorkflowTemplateSpecJobsSparkJob(obj.sparkJob),
    'sparkRJob': toJson_DataprocWorkflowTemplateSpecJobsSparkRJob(obj.sparkRJob),
    'sparkSqlJob': toJson_DataprocWorkflowTemplateSpecJobsSparkSqlJob(obj.sparkSqlJob),
    'stepId': obj.stepId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocWorkflowTemplateSpecParameters
 */
export interface DataprocWorkflowTemplateSpecParameters {
  /**
   * Immutable. Optional. Brief description of the parameter. Must not exceed 1024 characters.
   *
   * @schema DataprocWorkflowTemplateSpecParameters#description
   */
  readonly description?: string;

  /**
   * Immutable. Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths. A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as `placement.clusterSelector.zone`. Also, field paths can reference fields using the following syntax: * Values in maps can be referenced by key: * labels['key'] * placement.clusterSelector.clusterLabels['key'] * placement.managedCluster.labels['key'] * placement.clusterSelector.clusterLabels['key'] * jobs['step-id'].labels['key'] * Jobs in the jobs list can be referenced by step-id: * jobs['step-id'].hadoopJob.mainJarFileUri * jobs['step-id'].hiveJob.queryFileUri * jobs['step-id'].pySparkJob.mainPythonFileUri * jobs['step-id'].hadoopJob.jarFileUris[0] * jobs['step-id'].hadoopJob.archiveUris[0] * jobs['step-id'].hadoopJob.fileUris[0] * jobs['step-id'].pySparkJob.pythonFileUris[0] * Items in repeated fields can be referenced by a zero-based index: * jobs['step-id'].sparkJob.args[0] * Other examples: * jobs['step-id'].hadoopJob.properties['key'] * jobs['step-id'].hadoopJob.args[0] * jobs['step-id'].hiveJob.scriptVariables['key'] * jobs['step-id'].hadoopJob.mainJarFileUri * placement.clusterSelector.zone It may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: - placement.clusterSelector.clusterLabels - jobs['step-id'].sparkJob.args
   *
   * @schema DataprocWorkflowTemplateSpecParameters#fields
   */
  readonly fields: string[];

  /**
   * Immutable. Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
   *
   * @schema DataprocWorkflowTemplateSpecParameters#name
   */
  readonly name: string;

  /**
   * Immutable. Optional. Validation rules to be applied to this parameter's value.
   *
   * @schema DataprocWorkflowTemplateSpecParameters#validation
   */
  readonly validation?: DataprocWorkflowTemplateSpecParametersValidation;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecParameters(obj: DataprocWorkflowTemplateSpecParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'description': obj.description,
    'fields': obj.fields?.map(y => y),
    'name': obj.name,
    'validation': toJson_DataprocWorkflowTemplateSpecParametersValidation(obj.validation),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Required. WorkflowTemplate scheduling information.
 *
 * @schema DataprocWorkflowTemplateSpecPlacement
 */
export interface DataprocWorkflowTemplateSpecPlacement {
  /**
   * Immutable. Optional. A selector that chooses target cluster for jobs based on metadata. The selector is evaluated at the time each job is submitted.
   *
   * @schema DataprocWorkflowTemplateSpecPlacement#clusterSelector
   */
  readonly clusterSelector?: DataprocWorkflowTemplateSpecPlacementClusterSelector;

  /**
   * Immutable. A cluster that is managed by the workflow.
   *
   * @schema DataprocWorkflowTemplateSpecPlacement#managedCluster
   */
  readonly managedCluster?: DataprocWorkflowTemplateSpecPlacementManagedCluster;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacement' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacement(obj: DataprocWorkflowTemplateSpecPlacement | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterSelector': toJson_DataprocWorkflowTemplateSpecPlacementClusterSelector(obj.clusterSelector),
    'managedCluster': toJson_DataprocWorkflowTemplateSpecPlacementManagedCluster(obj.managedCluster),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. The Project that this resource belongs to.
 *
 * @schema DataprocWorkflowTemplateSpecProjectRef
 */
export interface DataprocWorkflowTemplateSpecProjectRef {
  /**
   * The project for the resource
   *
   * Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
   *
   * @schema DataprocWorkflowTemplateSpecProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecProjectRef(obj: DataprocWorkflowTemplateSpecProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Job is a Hadoop job.
 *
 * @schema DataprocWorkflowTemplateSpecJobsHadoopJob
 */
export interface DataprocWorkflowTemplateSpecJobsHadoopJob {
  /**
   * Immutable. Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHadoopJob#archiveUris
   */
  readonly archiveUris?: string[];

  /**
   * Immutable. Optional. The arguments to pass to the driver. Do not include arguments, such as `-libjars` or `-Dfoo=bar`, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHadoopJob#args
   */
  readonly args?: string[];

  /**
   * Immutable. Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHadoopJob#fileUris
   */
  readonly fileUris?: string[];

  /**
   * Immutable. Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHadoopJob#jarFileUris
   */
  readonly jarFileUris?: string[];

  /**
   * Immutable. Optional. The runtime log config for job execution.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHadoopJob#loggingConfig
   */
  readonly loggingConfig?: DataprocWorkflowTemplateSpecJobsHadoopJobLoggingConfig;

  /**
   * Immutable. The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in `jar_file_uris`.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHadoopJob#mainClass
   */
  readonly mainClass?: string;

  /**
   * Immutable. The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
   *
   * @schema DataprocWorkflowTemplateSpecJobsHadoopJob#mainJarFileUri
   */
  readonly mainJarFileUri?: string;

  /**
   * Immutable. Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHadoopJob#properties
   */
  readonly properties?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsHadoopJob' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsHadoopJob(obj: DataprocWorkflowTemplateSpecJobsHadoopJob | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveUris': obj.archiveUris?.map(y => y),
    'args': obj.args?.map(y => y),
    'fileUris': obj.fileUris?.map(y => y),
    'jarFileUris': obj.jarFileUris?.map(y => y),
    'loggingConfig': toJson_DataprocWorkflowTemplateSpecJobsHadoopJobLoggingConfig(obj.loggingConfig),
    'mainClass': obj.mainClass,
    'mainJarFileUri': obj.mainJarFileUri,
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Job is a Hive job.
 *
 * @schema DataprocWorkflowTemplateSpecJobsHiveJob
 */
export interface DataprocWorkflowTemplateSpecJobsHiveJob {
  /**
   * Immutable. Optional. Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHiveJob#continueOnFailure
   */
  readonly continueOnFailure?: boolean;

  /**
   * Immutable. Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHiveJob#jarFileUris
   */
  readonly jarFileUris?: string[];

  /**
   * Immutable. Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHiveJob#properties
   */
  readonly properties?: { [key: string]: string };

  /**
   * Immutable. The HCFS URI of the script that contains Hive queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHiveJob#queryFileUri
   */
  readonly queryFileUri?: string;

  /**
   * Immutable. A list of queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsHiveJob#queryList
   */
  readonly queryList?: DataprocWorkflowTemplateSpecJobsHiveJobQueryList;

  /**
   * Immutable. Optional. Mapping of query variable names to values (equivalent to the Hive command: `SET name="value";`).
   *
   * @schema DataprocWorkflowTemplateSpecJobsHiveJob#scriptVariables
   */
  readonly scriptVariables?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsHiveJob' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsHiveJob(obj: DataprocWorkflowTemplateSpecJobsHiveJob | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'continueOnFailure': obj.continueOnFailure,
    'jarFileUris': obj.jarFileUris?.map(y => y),
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'queryFileUri': obj.queryFileUri,
    'queryList': toJson_DataprocWorkflowTemplateSpecJobsHiveJobQueryList(obj.queryList),
    'scriptVariables': ((obj.scriptVariables) === undefined) ? undefined : (Object.entries(obj.scriptVariables).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Job is a Pig job.
 *
 * @schema DataprocWorkflowTemplateSpecJobsPigJob
 */
export interface DataprocWorkflowTemplateSpecJobsPigJob {
  /**
   * Immutable. Optional. Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPigJob#continueOnFailure
   */
  readonly continueOnFailure?: boolean;

  /**
   * Immutable. Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPigJob#jarFileUris
   */
  readonly jarFileUris?: string[];

  /**
   * Immutable. Optional. The runtime log config for job execution.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPigJob#loggingConfig
   */
  readonly loggingConfig?: DataprocWorkflowTemplateSpecJobsPigJobLoggingConfig;

  /**
   * Immutable. Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPigJob#properties
   */
  readonly properties?: { [key: string]: string };

  /**
   * Immutable. The HCFS URI of the script that contains the Pig queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPigJob#queryFileUri
   */
  readonly queryFileUri?: string;

  /**
   * Immutable. A list of queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPigJob#queryList
   */
  readonly queryList?: DataprocWorkflowTemplateSpecJobsPigJobQueryList;

  /**
   * Immutable. Optional. Mapping of query variable names to values (equivalent to the Pig command: `name=[value]`).
   *
   * @schema DataprocWorkflowTemplateSpecJobsPigJob#scriptVariables
   */
  readonly scriptVariables?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsPigJob' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsPigJob(obj: DataprocWorkflowTemplateSpecJobsPigJob | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'continueOnFailure': obj.continueOnFailure,
    'jarFileUris': obj.jarFileUris?.map(y => y),
    'loggingConfig': toJson_DataprocWorkflowTemplateSpecJobsPigJobLoggingConfig(obj.loggingConfig),
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'queryFileUri': obj.queryFileUri,
    'queryList': toJson_DataprocWorkflowTemplateSpecJobsPigJobQueryList(obj.queryList),
    'scriptVariables': ((obj.scriptVariables) === undefined) ? undefined : (Object.entries(obj.scriptVariables).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Job is a Presto job.
 *
 * @schema DataprocWorkflowTemplateSpecJobsPrestoJob
 */
export interface DataprocWorkflowTemplateSpecJobsPrestoJob {
  /**
   * Immutable. Optional. Presto client tags to attach to this query
   *
   * @schema DataprocWorkflowTemplateSpecJobsPrestoJob#clientTags
   */
  readonly clientTags?: string[];

  /**
   * Immutable. Optional. Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPrestoJob#continueOnFailure
   */
  readonly continueOnFailure?: boolean;

  /**
   * Immutable. Optional. The runtime log config for job execution.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPrestoJob#loggingConfig
   */
  readonly loggingConfig?: DataprocWorkflowTemplateSpecJobsPrestoJobLoggingConfig;

  /**
   * Immutable. Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
   *
   * @schema DataprocWorkflowTemplateSpecJobsPrestoJob#outputFormat
   */
  readonly outputFormat?: string;

  /**
   * Immutable. Optional. A mapping of property names to values. Used to set Presto [session properties](https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
   *
   * @schema DataprocWorkflowTemplateSpecJobsPrestoJob#properties
   */
  readonly properties?: { [key: string]: string };

  /**
   * Immutable. The HCFS URI of the script that contains SQL queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPrestoJob#queryFileUri
   */
  readonly queryFileUri?: string;

  /**
   * Immutable. A list of queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPrestoJob#queryList
   */
  readonly queryList?: DataprocWorkflowTemplateSpecJobsPrestoJobQueryList;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsPrestoJob' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsPrestoJob(obj: DataprocWorkflowTemplateSpecJobsPrestoJob | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clientTags': obj.clientTags?.map(y => y),
    'continueOnFailure': obj.continueOnFailure,
    'loggingConfig': toJson_DataprocWorkflowTemplateSpecJobsPrestoJobLoggingConfig(obj.loggingConfig),
    'outputFormat': obj.outputFormat,
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'queryFileUri': obj.queryFileUri,
    'queryList': toJson_DataprocWorkflowTemplateSpecJobsPrestoJobQueryList(obj.queryList),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Job is a PySpark job.
 *
 * @schema DataprocWorkflowTemplateSpecJobsPysparkJob
 */
export interface DataprocWorkflowTemplateSpecJobsPysparkJob {
  /**
   * Immutable. Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPysparkJob#archiveUris
   */
  readonly archiveUris?: string[];

  /**
   * Immutable. Optional. The arguments to pass to the driver. Do not include arguments, such as `--conf`, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPysparkJob#args
   */
  readonly args?: string[];

  /**
   * Immutable. Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPysparkJob#fileUris
   */
  readonly fileUris?: string[];

  /**
   * Immutable. Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPysparkJob#jarFileUris
   */
  readonly jarFileUris?: string[];

  /**
   * Immutable. Optional. The runtime log config for job execution.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPysparkJob#loggingConfig
   */
  readonly loggingConfig?: DataprocWorkflowTemplateSpecJobsPysparkJobLoggingConfig;

  /**
   * Immutable. Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPysparkJob#mainPythonFileUri
   */
  readonly mainPythonFileUri: string;

  /**
   * Immutable. Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPysparkJob#properties
   */
  readonly properties?: { [key: string]: string };

  /**
   * Immutable. Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
   *
   * @schema DataprocWorkflowTemplateSpecJobsPysparkJob#pythonFileUris
   */
  readonly pythonFileUris?: string[];

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsPysparkJob' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsPysparkJob(obj: DataprocWorkflowTemplateSpecJobsPysparkJob | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveUris': obj.archiveUris?.map(y => y),
    'args': obj.args?.map(y => y),
    'fileUris': obj.fileUris?.map(y => y),
    'jarFileUris': obj.jarFileUris?.map(y => y),
    'loggingConfig': toJson_DataprocWorkflowTemplateSpecJobsPysparkJobLoggingConfig(obj.loggingConfig),
    'mainPythonFileUri': obj.mainPythonFileUri,
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'pythonFileUris': obj.pythonFileUris?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Job scheduling configuration.
 *
 * @schema DataprocWorkflowTemplateSpecJobsScheduling
 */
export interface DataprocWorkflowTemplateSpecJobsScheduling {
  /**
   * Immutable. Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window. Maximum value is 10.
   *
   * @schema DataprocWorkflowTemplateSpecJobsScheduling#maxFailuresPerHour
   */
  readonly maxFailuresPerHour?: number;

  /**
   * Immutable. Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.
   *
   * @schema DataprocWorkflowTemplateSpecJobsScheduling#maxFailuresTotal
   */
  readonly maxFailuresTotal?: number;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsScheduling' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsScheduling(obj: DataprocWorkflowTemplateSpecJobsScheduling | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxFailuresPerHour': obj.maxFailuresPerHour,
    'maxFailuresTotal': obj.maxFailuresTotal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Job is a Spark job.
 *
 * @schema DataprocWorkflowTemplateSpecJobsSparkJob
 */
export interface DataprocWorkflowTemplateSpecJobsSparkJob {
  /**
   * Immutable. Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkJob#archiveUris
   */
  readonly archiveUris?: string[];

  /**
   * Immutable. Optional. The arguments to pass to the driver. Do not include arguments, such as `--conf`, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkJob#args
   */
  readonly args?: string[];

  /**
   * Immutable. Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkJob#fileUris
   */
  readonly fileUris?: string[];

  /**
   * Immutable. Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkJob#jarFileUris
   */
  readonly jarFileUris?: string[];

  /**
   * Immutable. Optional. The runtime log config for job execution.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkJob#loggingConfig
   */
  readonly loggingConfig?: DataprocWorkflowTemplateSpecJobsSparkJobLoggingConfig;

  /**
   * Immutable. The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in `jar_file_uris`.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkJob#mainClass
   */
  readonly mainClass?: string;

  /**
   * Immutable. The HCFS URI of the jar file that contains the main class.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkJob#mainJarFileUri
   */
  readonly mainJarFileUri?: string;

  /**
   * Immutable. Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkJob#properties
   */
  readonly properties?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsSparkJob' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsSparkJob(obj: DataprocWorkflowTemplateSpecJobsSparkJob | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveUris': obj.archiveUris?.map(y => y),
    'args': obj.args?.map(y => y),
    'fileUris': obj.fileUris?.map(y => y),
    'jarFileUris': obj.jarFileUris?.map(y => y),
    'loggingConfig': toJson_DataprocWorkflowTemplateSpecJobsSparkJobLoggingConfig(obj.loggingConfig),
    'mainClass': obj.mainClass,
    'mainJarFileUri': obj.mainJarFileUri,
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Job is a SparkR job.
 *
 * @schema DataprocWorkflowTemplateSpecJobsSparkRJob
 */
export interface DataprocWorkflowTemplateSpecJobsSparkRJob {
  /**
   * Immutable. Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkRJob#archiveUris
   */
  readonly archiveUris?: string[];

  /**
   * Immutable. Optional. The arguments to pass to the driver. Do not include arguments, such as `--conf`, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkRJob#args
   */
  readonly args?: string[];

  /**
   * Immutable. Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkRJob#fileUris
   */
  readonly fileUris?: string[];

  /**
   * Immutable. Optional. The runtime log config for job execution.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkRJob#loggingConfig
   */
  readonly loggingConfig?: DataprocWorkflowTemplateSpecJobsSparkRJobLoggingConfig;

  /**
   * Immutable. Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkRJob#mainRFileUri
   */
  readonly mainRFileUri: string;

  /**
   * Immutable. Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkRJob#properties
   */
  readonly properties?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsSparkRJob' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsSparkRJob(obj: DataprocWorkflowTemplateSpecJobsSparkRJob | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveUris': obj.archiveUris?.map(y => y),
    'args': obj.args?.map(y => y),
    'fileUris': obj.fileUris?.map(y => y),
    'loggingConfig': toJson_DataprocWorkflowTemplateSpecJobsSparkRJobLoggingConfig(obj.loggingConfig),
    'mainRFileUri': obj.mainRFileUri,
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Job is a SparkSql job.
 *
 * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJob
 */
export interface DataprocWorkflowTemplateSpecJobsSparkSqlJob {
  /**
   * Immutable. Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJob#jarFileUris
   */
  readonly jarFileUris?: string[];

  /**
   * Immutable. Optional. The runtime log config for job execution.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJob#loggingConfig
   */
  readonly loggingConfig?: DataprocWorkflowTemplateSpecJobsSparkSqlJobLoggingConfig;

  /**
   * Immutable. Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJob#properties
   */
  readonly properties?: { [key: string]: string };

  /**
   * Immutable. The HCFS URI of the script that contains SQL queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJob#queryFileUri
   */
  readonly queryFileUri?: string;

  /**
   * Immutable. A list of queries.
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJob#queryList
   */
  readonly queryList?: DataprocWorkflowTemplateSpecJobsSparkSqlJobQueryList;

  /**
   * Immutable. Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET `name="value";`).
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJob#scriptVariables
   */
  readonly scriptVariables?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsSparkSqlJob' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsSparkSqlJob(obj: DataprocWorkflowTemplateSpecJobsSparkSqlJob | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'jarFileUris': obj.jarFileUris?.map(y => y),
    'loggingConfig': toJson_DataprocWorkflowTemplateSpecJobsSparkSqlJobLoggingConfig(obj.loggingConfig),
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'queryFileUri': obj.queryFileUri,
    'queryList': toJson_DataprocWorkflowTemplateSpecJobsSparkSqlJobQueryList(obj.queryList),
    'scriptVariables': ((obj.scriptVariables) === undefined) ? undefined : (Object.entries(obj.scriptVariables).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Validation rules to be applied to this parameter's value.
 *
 * @schema DataprocWorkflowTemplateSpecParametersValidation
 */
export interface DataprocWorkflowTemplateSpecParametersValidation {
  /**
   * Immutable. Validation based on regular expressions.
   *
   * @schema DataprocWorkflowTemplateSpecParametersValidation#regex
   */
  readonly regex?: DataprocWorkflowTemplateSpecParametersValidationRegex;

  /**
   * Immutable. Validation based on a list of allowed values.
   *
   * @schema DataprocWorkflowTemplateSpecParametersValidation#values
   */
  readonly values?: DataprocWorkflowTemplateSpecParametersValidationValues;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecParametersValidation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecParametersValidation(obj: DataprocWorkflowTemplateSpecParametersValidation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'regex': toJson_DataprocWorkflowTemplateSpecParametersValidationRegex(obj.regex),
    'values': toJson_DataprocWorkflowTemplateSpecParametersValidationValues(obj.values),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. A selector that chooses target cluster for jobs based on metadata. The selector is evaluated at the time each job is submitted.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementClusterSelector
 */
export interface DataprocWorkflowTemplateSpecPlacementClusterSelector {
  /**
   * Immutable. Required. The cluster labels. Cluster must have all labels to match.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementClusterSelector#clusterLabels
   */
  readonly clusterLabels: { [key: string]: string };

  /**
   * Immutable. Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster. If unspecified, the zone of the first cluster matching the selector is used.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementClusterSelector#zone
   */
  readonly zone?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementClusterSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementClusterSelector(obj: DataprocWorkflowTemplateSpecPlacementClusterSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterLabels': ((obj.clusterLabels) === undefined) ? undefined : (Object.entries(obj.clusterLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'zone': obj.zone,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. A cluster that is managed by the workflow.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedCluster
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedCluster {
  /**
   * Immutable. Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix. The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedCluster#clusterName
   */
  readonly clusterName: string;

  /**
   * Immutable. Required. The cluster configuration.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedCluster#config
   */
  readonly config: DataprocWorkflowTemplateSpecPlacementManagedClusterConfig;

  /**
   * Immutable. Optional. The labels to associate with this cluster. Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: p{Ll}p{Lo}{0,62} Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: [p{Ll}p{Lo}p{N}_-]{0,63} No more than 32 labels can be associated with a given cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedCluster#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedCluster' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedCluster(obj: DataprocWorkflowTemplateSpecPlacementManagedCluster | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'clusterName': obj.clusterName,
    'config': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfig(obj.config),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The runtime log config for job execution.
 *
 * @schema DataprocWorkflowTemplateSpecJobsHadoopJobLoggingConfig
 */
export interface DataprocWorkflowTemplateSpecJobsHadoopJobLoggingConfig {
  /**
   * Immutable. The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
   *
   * @schema DataprocWorkflowTemplateSpecJobsHadoopJobLoggingConfig#driverLogLevels
   */
  readonly driverLogLevels?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsHadoopJobLoggingConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsHadoopJobLoggingConfig(obj: DataprocWorkflowTemplateSpecJobsHadoopJobLoggingConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driverLogLevels': ((obj.driverLogLevels) === undefined) ? undefined : (Object.entries(obj.driverLogLevels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. A list of queries.
 *
 * @schema DataprocWorkflowTemplateSpecJobsHiveJobQueryList
 */
export interface DataprocWorkflowTemplateSpecJobsHiveJobQueryList {
  /**
   * Immutable. Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
   *
   * @schema DataprocWorkflowTemplateSpecJobsHiveJobQueryList#queries
   */
  readonly queries: string[];

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsHiveJobQueryList' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsHiveJobQueryList(obj: DataprocWorkflowTemplateSpecJobsHiveJobQueryList | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'queries': obj.queries?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The runtime log config for job execution.
 *
 * @schema DataprocWorkflowTemplateSpecJobsPigJobLoggingConfig
 */
export interface DataprocWorkflowTemplateSpecJobsPigJobLoggingConfig {
  /**
   * Immutable. The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
   *
   * @schema DataprocWorkflowTemplateSpecJobsPigJobLoggingConfig#driverLogLevels
   */
  readonly driverLogLevels?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsPigJobLoggingConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsPigJobLoggingConfig(obj: DataprocWorkflowTemplateSpecJobsPigJobLoggingConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driverLogLevels': ((obj.driverLogLevels) === undefined) ? undefined : (Object.entries(obj.driverLogLevels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. A list of queries.
 *
 * @schema DataprocWorkflowTemplateSpecJobsPigJobQueryList
 */
export interface DataprocWorkflowTemplateSpecJobsPigJobQueryList {
  /**
   * Immutable. Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
   *
   * @schema DataprocWorkflowTemplateSpecJobsPigJobQueryList#queries
   */
  readonly queries: string[];

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsPigJobQueryList' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsPigJobQueryList(obj: DataprocWorkflowTemplateSpecJobsPigJobQueryList | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'queries': obj.queries?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The runtime log config for job execution.
 *
 * @schema DataprocWorkflowTemplateSpecJobsPrestoJobLoggingConfig
 */
export interface DataprocWorkflowTemplateSpecJobsPrestoJobLoggingConfig {
  /**
   * Immutable. The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
   *
   * @schema DataprocWorkflowTemplateSpecJobsPrestoJobLoggingConfig#driverLogLevels
   */
  readonly driverLogLevels?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsPrestoJobLoggingConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsPrestoJobLoggingConfig(obj: DataprocWorkflowTemplateSpecJobsPrestoJobLoggingConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driverLogLevels': ((obj.driverLogLevels) === undefined) ? undefined : (Object.entries(obj.driverLogLevels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. A list of queries.
 *
 * @schema DataprocWorkflowTemplateSpecJobsPrestoJobQueryList
 */
export interface DataprocWorkflowTemplateSpecJobsPrestoJobQueryList {
  /**
   * Immutable. Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
   *
   * @schema DataprocWorkflowTemplateSpecJobsPrestoJobQueryList#queries
   */
  readonly queries: string[];

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsPrestoJobQueryList' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsPrestoJobQueryList(obj: DataprocWorkflowTemplateSpecJobsPrestoJobQueryList | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'queries': obj.queries?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The runtime log config for job execution.
 *
 * @schema DataprocWorkflowTemplateSpecJobsPysparkJobLoggingConfig
 */
export interface DataprocWorkflowTemplateSpecJobsPysparkJobLoggingConfig {
  /**
   * Immutable. The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
   *
   * @schema DataprocWorkflowTemplateSpecJobsPysparkJobLoggingConfig#driverLogLevels
   */
  readonly driverLogLevels?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsPysparkJobLoggingConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsPysparkJobLoggingConfig(obj: DataprocWorkflowTemplateSpecJobsPysparkJobLoggingConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driverLogLevels': ((obj.driverLogLevels) === undefined) ? undefined : (Object.entries(obj.driverLogLevels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The runtime log config for job execution.
 *
 * @schema DataprocWorkflowTemplateSpecJobsSparkJobLoggingConfig
 */
export interface DataprocWorkflowTemplateSpecJobsSparkJobLoggingConfig {
  /**
   * Immutable. The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkJobLoggingConfig#driverLogLevels
   */
  readonly driverLogLevels?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsSparkJobLoggingConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsSparkJobLoggingConfig(obj: DataprocWorkflowTemplateSpecJobsSparkJobLoggingConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driverLogLevels': ((obj.driverLogLevels) === undefined) ? undefined : (Object.entries(obj.driverLogLevels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The runtime log config for job execution.
 *
 * @schema DataprocWorkflowTemplateSpecJobsSparkRJobLoggingConfig
 */
export interface DataprocWorkflowTemplateSpecJobsSparkRJobLoggingConfig {
  /**
   * Immutable. The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkRJobLoggingConfig#driverLogLevels
   */
  readonly driverLogLevels?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsSparkRJobLoggingConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsSparkRJobLoggingConfig(obj: DataprocWorkflowTemplateSpecJobsSparkRJobLoggingConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driverLogLevels': ((obj.driverLogLevels) === undefined) ? undefined : (Object.entries(obj.driverLogLevels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The runtime log config for job execution.
 *
 * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJobLoggingConfig
 */
export interface DataprocWorkflowTemplateSpecJobsSparkSqlJobLoggingConfig {
  /**
   * Immutable. The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJobLoggingConfig#driverLogLevels
   */
  readonly driverLogLevels?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsSparkSqlJobLoggingConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsSparkSqlJobLoggingConfig(obj: DataprocWorkflowTemplateSpecJobsSparkSqlJobLoggingConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driverLogLevels': ((obj.driverLogLevels) === undefined) ? undefined : (Object.entries(obj.driverLogLevels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. A list of queries.
 *
 * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJobQueryList
 */
export interface DataprocWorkflowTemplateSpecJobsSparkSqlJobQueryList {
  /**
   * Immutable. Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
   *
   * @schema DataprocWorkflowTemplateSpecJobsSparkSqlJobQueryList#queries
   */
  readonly queries: string[];

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecJobsSparkSqlJobQueryList' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecJobsSparkSqlJobQueryList(obj: DataprocWorkflowTemplateSpecJobsSparkSqlJobQueryList | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'queries': obj.queries?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Validation based on regular expressions.
 *
 * @schema DataprocWorkflowTemplateSpecParametersValidationRegex
 */
export interface DataprocWorkflowTemplateSpecParametersValidationRegex {
  /**
   * Immutable. Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
   *
   * @schema DataprocWorkflowTemplateSpecParametersValidationRegex#regexes
   */
  readonly regexes: string[];

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecParametersValidationRegex' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecParametersValidationRegex(obj: DataprocWorkflowTemplateSpecParametersValidationRegex | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'regexes': obj.regexes?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Validation based on a list of allowed values.
 *
 * @schema DataprocWorkflowTemplateSpecParametersValidationValues
 */
export interface DataprocWorkflowTemplateSpecParametersValidationValues {
  /**
   * Immutable. Required. List of allowed values for the parameter.
   *
   * @schema DataprocWorkflowTemplateSpecParametersValidationValues#values
   */
  readonly values: string[];

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecParametersValidationValues' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecParametersValidationValues(obj: DataprocWorkflowTemplateSpecParametersValidationValues | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Required. The cluster configuration.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfig {
  /**
   * Immutable. Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#autoscalingConfig
   */
  readonly autoscalingConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfig;

  /**
   * Immutable. Optional. Encryption settings for the cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#encryptionConfig
   */
  readonly encryptionConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfig;

  /**
   * Immutable. Optional. Port/endpoint configuration for this cluster
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#endpointConfig
   */
  readonly endpointConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEndpointConfig;

  /**
   * Immutable. Optional. The shared Compute Engine config settings for all instances in a cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#gceClusterConfig
   */
  readonly gceClusterConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig;

  /**
   * Immutable. Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's `role` metadata to run an executable on a master or worker node, as shown below using `curl` (you can also use `wget`): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#initializationActions
   */
  readonly initializationActions?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigInitializationActions[];

  /**
   * Immutable. Optional. Lifecycle setting for the cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#lifecycleConfig
   */
  readonly lifecycleConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig;

  /**
   * Immutable. Optional. The Compute Engine config settings for the master instance in a cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#masterConfig
   */
  readonly masterConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig;

  /**
   * Immutable. Optional. The Compute Engine config settings for additional worker instances in a cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#secondaryWorkerConfig
   */
  readonly secondaryWorkerConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig;

  /**
   * Immutable. Optional. Security settings for the cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#securityConfig
   */
  readonly securityConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfig;

  /**
   * Immutable. Optional. The config settings for software inside the cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#softwareConfig
   */
  readonly softwareConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig;

  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#stagingBucketRef
   */
  readonly stagingBucketRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef;

  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#tempBucketRef
   */
  readonly tempBucketRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef;

  /**
   * Immutable. Optional. The Compute Engine config settings for worker instances in a cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfig#workerConfig
   */
  readonly workerConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'autoscalingConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfig(obj.autoscalingConfig),
    'encryptionConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfig(obj.encryptionConfig),
    'endpointConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEndpointConfig(obj.endpointConfig),
    'gceClusterConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig(obj.gceClusterConfig),
    'initializationActions': obj.initializationActions?.map(y => toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigInitializationActions(y)),
    'lifecycleConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig(obj.lifecycleConfig),
    'masterConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig(obj.masterConfig),
    'secondaryWorkerConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig(obj.secondaryWorkerConfig),
    'securityConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfig(obj.securityConfig),
    'softwareConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig(obj.softwareConfig),
    'stagingBucketRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef(obj.stagingBucketRef),
    'tempBucketRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef(obj.tempBucketRef),
    'workerConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig(obj.workerConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfig {
  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfig#policyRef
   */
  readonly policyRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'policyRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef(obj.policyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Encryption settings for the cluster.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfig {
  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfig#gcePdKmsKeyRef
   */
  readonly gcePdKmsKeyRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gcePdKmsKeyRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef(obj.gcePdKmsKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Port/endpoint configuration for this cluster
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEndpointConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEndpointConfig {
  /**
   * Immutable. Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
   *
   * @default false.
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEndpointConfig#enableHttpPortAccess
   */
  readonly enableHttpPortAccess?: boolean;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEndpointConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEndpointConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEndpointConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableHttpPortAccess': obj.enableHttpPortAccess,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The shared Compute Engine config settings for all instances in a cluster.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig {
  /**
   * Immutable. Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#internalIPOnly
   */
  readonly internalIpOnly?: boolean;

  /**
   * Immutable. The Compute Engine metadata entries to add to all instances (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#metadata
   */
  readonly metadata?: { [key: string]: string };

  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#networkRef
   */
  readonly networkRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef;

  /**
   * Immutable. Optional. Node Group Affinity for sole-tenant clusters.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#nodeGroupAffinity
   */
  readonly nodeGroupAffinity?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity;

  /**
   * Immutable. Optional. The type of IPv6 access for a cluster. Possible values: PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED, INHERIT_FROM_SUBNETWORK, OUTBOUND, BIDIRECTIONAL
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#privateIPv6GoogleAccess
   */
  readonly privateIPv6GoogleAccess?: string;

  /**
   * Immutable. Optional. Reservation Affinity for consuming Zonal reservation.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#reservationAffinity
   */
  readonly reservationAffinity?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity;

  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#serviceAccountRef
   */
  readonly serviceAccountRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef;

  /**
   * Immutable. Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: * https://www.googleapis.com/auth/cloud.useraccounts.readonly * https://www.googleapis.com/auth/devstorage.read_write * https://www.googleapis.com/auth/logging.write If no scopes are specified, the following defaults are also provided: * https://www.googleapis.com/auth/bigquery * https://www.googleapis.com/auth/bigtable.admin.table * https://www.googleapis.com/auth/bigtable.data * https://www.googleapis.com/auth/devstorage.full_control
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#serviceAccountScopes
   */
  readonly serviceAccountScopes?: string[];

  /**
   * Immutable. Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#shieldedInstanceConfig
   */
  readonly shieldedInstanceConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig;

  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#subnetworkRef
   */
  readonly subnetworkRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef;

  /**
   * Immutable. The Compute Engine tags to add to all instances (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#tags
   */
  readonly tags?: string[];

  /**
   * Immutable. Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]` * `projects/[project_id]/zones/[zone]` * `us-central1-f`
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig#zone
   */
  readonly zone?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'internalIPOnly': obj.internalIpOnly,
    'metadata': ((obj.metadata) === undefined) ? undefined : (Object.entries(obj.metadata).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'networkRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef(obj.networkRef),
    'nodeGroupAffinity': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity(obj.nodeGroupAffinity),
    'privateIPv6GoogleAccess': obj.privateIPv6GoogleAccess,
    'reservationAffinity': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity(obj.reservationAffinity),
    'serviceAccountRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef(obj.serviceAccountRef),
    'serviceAccountScopes': obj.serviceAccountScopes?.map(y => y),
    'shieldedInstanceConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig(obj.shieldedInstanceConfig),
    'subnetworkRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef(obj.subnetworkRef),
    'tags': obj.tags?.map(y => y),
    'zone': obj.zone,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigInitializationActions
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigInitializationActions {
  /**
   * Immutable. Required. Cloud Storage URI of executable file.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigInitializationActions#executableFile
   */
  readonly executableFile?: string;

  /**
   * Immutable. Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
   *
   * @default 10 minutes (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigInitializationActions#executionTimeout
   */
  readonly executionTimeout?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigInitializationActions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigInitializationActions(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigInitializationActions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'executableFile': obj.executableFile,
    'executionTimeout': obj.executionTimeout,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Lifecycle setting for the cluster.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig {
  /**
   * Immutable. Optional. The time when cluster will be auto-deleted (see JSON representation of [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig#autoDeleteTime
   */
  readonly autoDeleteTime?: Date;

  /**
   * Immutable. Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig#autoDeleteTtl
   */
  readonly autoDeleteTtl?: string;

  /**
   * Immutable. Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig#idleDeleteTtl
   */
  readonly idleDeleteTtl?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigLifecycleConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'autoDeleteTime': obj.autoDeleteTime?.toISOString(),
    'autoDeleteTtl': obj.autoDeleteTtl,
    'idleDeleteTtl': obj.idleDeleteTtl,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The Compute Engine config settings for the master instance in a cluster.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig {
  /**
   * Immutable. Optional. The Compute Engine accelerator configuration for these instances.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig#accelerators
   */
  readonly accelerators?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigAccelerators[];

  /**
   * Immutable. Optional. Disk option config settings.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig#diskConfig
   */
  readonly diskConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig;

  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig#imageRef
   */
  readonly imageRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef;

  /**
   * Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig#machineType
   */
  readonly machineType?: string;

  /**
   * Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig#minCpuPlatform
   */
  readonly minCpuPlatform?: string;

  /**
   * Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig#numInstances
   */
  readonly numInstances?: number;

  /**
   * Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig#preemptibility
   */
  readonly preemptibility?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accelerators': obj.accelerators?.map(y => toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigAccelerators(y)),
    'diskConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig(obj.diskConfig),
    'imageRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef(obj.imageRef),
    'machineType': obj.machineType,
    'minCpuPlatform': obj.minCpuPlatform,
    'numInstances': obj.numInstances,
    'preemptibility': obj.preemptibility,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The Compute Engine config settings for additional worker instances in a cluster.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig {
  /**
   * Immutable. Optional. The Compute Engine accelerator configuration for these instances.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig#accelerators
   */
  readonly accelerators?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigAccelerators[];

  /**
   * Immutable. Optional. Disk option config settings.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig#diskConfig
   */
  readonly diskConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig;

  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig#imageRef
   */
  readonly imageRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef;

  /**
   * Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig#machineType
   */
  readonly machineType?: string;

  /**
   * Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig#minCpuPlatform
   */
  readonly minCpuPlatform?: string;

  /**
   * Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig#numInstances
   */
  readonly numInstances?: number;

  /**
   * Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig#preemptibility
   */
  readonly preemptibility?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accelerators': obj.accelerators?.map(y => toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigAccelerators(y)),
    'diskConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig(obj.diskConfig),
    'imageRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef(obj.imageRef),
    'machineType': obj.machineType,
    'minCpuPlatform': obj.minCpuPlatform,
    'numInstances': obj.numInstances,
    'preemptibility': obj.preemptibility,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Security settings for the cluster.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfig {
  /**
   * Immutable. Optional. Kerberos related configuration.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfig#kerberosConfig
   */
  readonly kerberosConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'kerberosConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig(obj.kerberosConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The config settings for software inside the cluster.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig {
  /**
   * Immutable. Optional. The version of software inside the cluster. It must be one of the supported [Dataproc Versions](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the ["preview" version](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig#imageVersion
   */
  readonly imageVersion?: string;

  /**
   * Immutable. Optional. The set of components to activate on the cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig#optionalComponents
   */
  readonly optionalComponents?: string[];

  /**
   * Immutable. Optional. The properties to set on daemon config files. Property keys are specified in `prefix:property` format, for example `core:hadoop.tmp.dir`. The following are supported prefixes and their mappings: * capacity-scheduler: `capacity-scheduler.xml` * core: `core-site.xml` * distcp: `distcp-default.xml` * hdfs: `hdfs-site.xml` * hive: `hive-site.xml` * mapred: `mapred-site.xml` * pig: `pig.properties` * spark: `spark-defaults.conf` * yarn: `yarn-site.xml` For more information, see [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig#properties
   */
  readonly properties?: { [key: string]: string };

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSoftwareConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'imageVersion': obj.imageVersion,
    'optionalComponents': obj.optionalComponents?.map(y => y),
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef {
  /**
   * Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see [Dataproc staging bucket](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). **This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.**
   *
   * Allowed value: The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigStagingBucketRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef {
  /**
   * Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. **This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.**
   *
   * Allowed value: The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigTempBucketRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. The Compute Engine config settings for worker instances in a cluster.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig {
  /**
   * Immutable. Optional. The Compute Engine accelerator configuration for these instances.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig#accelerators
   */
  readonly accelerators?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigAccelerators[];

  /**
   * Immutable. Optional. Disk option config settings.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig#diskConfig
   */
  readonly diskConfig?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig;

  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig#imageRef
   */
  readonly imageRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef;

  /**
   * Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig#machineType
   */
  readonly machineType?: string;

  /**
   * Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig#minCpuPlatform
   */
  readonly minCpuPlatform?: string;

  /**
   * Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig#numInstances
   */
  readonly numInstances?: number;

  /**
   * Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig#preemptibility
   */
  readonly preemptibility?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accelerators': obj.accelerators?.map(y => toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigAccelerators(y)),
    'diskConfig': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig(obj.diskConfig),
    'imageRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef(obj.imageRef),
    'machineType': obj.machineType,
    'minCpuPlatform': obj.minCpuPlatform,
    'numInstances': obj.numInstances,
    'preemptibility': obj.preemptibility,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef {
  /**
   * Optional. The autoscaling policy used by the cluster. Only resource names including projectid and location (region) are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]` * `projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]` Note that the policy must be in the same project and Dataproc region.
   *
   * Allowed value: The Google Cloud resource name of a `DataprocAutoscalingPolicy` resource (format: `projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{name}}`).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigAutoscalingConfigPolicyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef {
  /**
   * Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
   *
   * Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigEncryptionConfigGcePdKmsKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef {
  /**
   * Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither `network_uri` nor `subnetwork_uri` is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see [Using Subnetworks](https://cloud.google.com/compute/docs/subnetworks) for more information). A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default` * `projects/[project_id]/regions/global/default` * `default`
   *
   * Allowed value: The `selfLink` field of a `ComputeNetwork` resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNetworkRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Node Group Affinity for sole-tenant clusters.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity {
  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity#nodeGroupRef
   */
  readonly nodeGroupRef: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeGroupRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef(obj.nodeGroupRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Reservation Affinity for consuming Zonal reservation.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity {
  /**
   * Immutable. Optional. Type of reservation to consume Possible values: TYPE_UNSPECIFIED, NO_RESERVATION, ANY_RESERVATION, SPECIFIC_RESERVATION
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity#consumeReservationType
   */
  readonly consumeReservationType?: string;

  /**
   * Immutable. Optional. Corresponds to the label key of reservation resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity#key
   */
  readonly key?: string;

  /**
   * Immutable. Optional. Corresponds to the label values of reservation resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigReservationAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'consumeReservationType': obj.consumeReservationType,
    'key': obj.key,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef {
  /**
   * Optional. The [Dataproc service account](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see [VM Data Plane identity](https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
   *
   * Allowed value: The `email` field of an `IAMServiceAccount` resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig {
  /**
   * Immutable. Optional. Defines whether instances have integrity monitoring enabled. Integrity monitoring compares the most recent boot measurements to the integrity policy baseline and returns a pair of pass/fail results depending on whether they match or not.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig#enableIntegrityMonitoring
   */
  readonly enableIntegrityMonitoring?: boolean;

  /**
   * Immutable. Optional. Defines whether the instances have Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig#enableSecureBoot
   */
  readonly enableSecureBoot?: boolean;

  /**
   * Immutable. Optional. Defines whether the instance have the vTPM enabled. Virtual Trusted Platform Module protects objects like keys, certificates and enables Measured Boot by performing the measurements needed to create a known good boot baseline, called the integrity policy baseline.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig#enableVtpm
   */
  readonly enableVtpm?: boolean;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigShieldedInstanceConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enableIntegrityMonitoring': obj.enableIntegrityMonitoring,
    'enableSecureBoot': obj.enableSecureBoot,
    'enableVtpm': obj.enableVtpm,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef {
  /**
   * Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0` * `sub0`
   *
   * Allowed value: The `selfLink` field of a `ComputeSubnetwork` resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigSubnetworkRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigAccelerators
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigAccelerators {
  /**
   * Immutable. The number of the accelerator cards of this type exposed to this instance.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigAccelerators#acceleratorCount
   */
  readonly acceleratorCount?: number;

  /**
   * Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigAccelerators#acceleratorType
   */
  readonly acceleratorType?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigAccelerators' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigAccelerators(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigAccelerators | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'acceleratorCount': obj.acceleratorCount,
    'acceleratorType': obj.acceleratorType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Disk option config settings.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig {
  /**
   * Immutable. Optional. Size in GB of the boot disk (default is 500GB).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig#bootDiskSizeGb
   */
  readonly bootDiskSizeGb?: number;

  /**
   * Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig#bootDiskType
   */
  readonly bootDiskType?: string;

  /**
   * Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig#numLocalSsds
   */
  readonly numLocalSsds?: number;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigDiskConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bootDiskSizeGb': obj.bootDiskSizeGb,
    'bootDiskType': obj.bootDiskType,
    'numLocalSsds': obj.numLocalSsds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef {
  /**
   * Optional. The Compute Engine image resource used for cluster instances. The URI can represent an image or image family. Image examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]` * `projects/[project_id]/global/images/[image-id]` * `image-id` Image family examples. Dataproc will use the most recent image from the family: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]` * `projects/[project_id]/global/images/family/[custom-image-family-name]` If the URI is unspecified, it will be inferred from `SoftwareConfig.image_version` or the system default.
   *
   * Allowed value: The `selfLink` field of a `ComputeImage` resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigMasterConfigImageRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigAccelerators
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigAccelerators {
  /**
   * Immutable. The number of the accelerator cards of this type exposed to this instance.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigAccelerators#acceleratorCount
   */
  readonly acceleratorCount?: number;

  /**
   * Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigAccelerators#acceleratorType
   */
  readonly acceleratorType?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigAccelerators' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigAccelerators(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigAccelerators | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'acceleratorCount': obj.acceleratorCount,
    'acceleratorType': obj.acceleratorType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Disk option config settings.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig {
  /**
   * Immutable. Optional. Size in GB of the boot disk (default is 500GB).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig#bootDiskSizeGb
   */
  readonly bootDiskSizeGb?: number;

  /**
   * Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig#bootDiskType
   */
  readonly bootDiskType?: string;

  /**
   * Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig#numLocalSsds
   */
  readonly numLocalSsds?: number;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigDiskConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bootDiskSizeGb': obj.bootDiskSizeGb,
    'bootDiskType': obj.bootDiskType,
    'numLocalSsds': obj.numLocalSsds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef {
  /**
   * Optional. The Compute Engine image resource used for cluster instances. The URI can represent an image or image family. Image examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]` * `projects/[project_id]/global/images/[image-id]` * `image-id` Image family examples. Dataproc will use the most recent image from the family: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]` * `projects/[project_id]/global/images/family/[custom-image-family-name]` If the URI is unspecified, it will be inferred from `SoftwareConfig.image_version` or the system default.
   *
   * Allowed value: The `selfLink` field of a `ComputeImage` resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecondaryWorkerConfigImageRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Kerberos related configuration.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig {
  /**
   * Immutable. Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#crossRealmTrustAdminServer
   */
  readonly crossRealmTrustAdminServer?: string;

  /**
   * Immutable. Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#crossRealmTrustKdc
   */
  readonly crossRealmTrustKdc?: string;

  /**
   * Immutable. Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#crossRealmTrustRealm
   */
  readonly crossRealmTrustRealm?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#crossRealmTrustSharedPassword
   */
  readonly crossRealmTrustSharedPassword?: string;

  /**
   * Immutable. Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#enableKerberos
   */
  readonly enableKerberos?: boolean;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#kdcDbKey
   */
  readonly kdcDbKey?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#keyPassword
   */
  readonly keyPassword?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#keystore
   */
  readonly keystore?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#keystorePassword
   */
  readonly keystorePassword?: string;

  /**
   * Immutable.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#kmsKeyRef
   */
  readonly kmsKeyRef?: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef;

  /**
   * Immutable. Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#realm
   */
  readonly realm?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#rootPrincipalPassword
   */
  readonly rootPrincipalPassword?: string;

  /**
   * Immutable. Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#tgtLifetimeHours
   */
  readonly tgtLifetimeHours?: number;

  /**
   * Immutable. Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#truststore
   */
  readonly truststore?: string;

  /**
   * Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig#truststorePassword
   */
  readonly truststorePassword?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'crossRealmTrustAdminServer': obj.crossRealmTrustAdminServer,
    'crossRealmTrustKdc': obj.crossRealmTrustKdc,
    'crossRealmTrustRealm': obj.crossRealmTrustRealm,
    'crossRealmTrustSharedPassword': obj.crossRealmTrustSharedPassword,
    'enableKerberos': obj.enableKerberos,
    'kdcDbKey': obj.kdcDbKey,
    'keyPassword': obj.keyPassword,
    'keystore': obj.keystore,
    'keystorePassword': obj.keystorePassword,
    'kmsKeyRef': toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef(obj.kmsKeyRef),
    'realm': obj.realm,
    'rootPrincipalPassword': obj.rootPrincipalPassword,
    'tgtLifetimeHours': obj.tgtLifetimeHours,
    'truststore': obj.truststore,
    'truststorePassword': obj.truststorePassword,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigAccelerators
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigAccelerators {
  /**
   * Immutable. The number of the accelerator cards of this type exposed to this instance.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigAccelerators#acceleratorCount
   */
  readonly acceleratorCount?: number;

  /**
   * Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigAccelerators#acceleratorType
   */
  readonly acceleratorType?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigAccelerators' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigAccelerators(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigAccelerators | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'acceleratorCount': obj.acceleratorCount,
    'acceleratorType': obj.acceleratorType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Optional. Disk option config settings.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig {
  /**
   * Immutable. Optional. Size in GB of the boot disk (default is 500GB).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig#bootDiskSizeGb
   */
  readonly bootDiskSizeGb?: number;

  /**
   * Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig#bootDiskType
   */
  readonly bootDiskType?: string;

  /**
   * Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig#numLocalSsds
   */
  readonly numLocalSsds?: number;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigDiskConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bootDiskSizeGb': obj.bootDiskSizeGb,
    'bootDiskType': obj.bootDiskType,
    'numLocalSsds': obj.numLocalSsds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef {
  /**
   * Optional. The Compute Engine image resource used for cluster instances. The URI can represent an image or image family. Image examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]` * `projects/[project_id]/global/images/[image-id]` * `image-id` Image family examples. Dataproc will use the most recent image from the family: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]` * `projects/[project_id]/global/images/family/[custom-image-family-name]` If the URI is unspecified, it will be inferred from `SoftwareConfig.image_version` or the system default.
   *
   * Allowed value: The `selfLink` field of a `ComputeImage` resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigWorkerConfigImageRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef {
  /**
   * Required. The URI of a sole-tenant [node group resource](https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on. A full URL, partial URI, or node group name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1` * `projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1` * `node-group-1`
   *
   * Allowed value: The `selfLink` field of a `ComputeNodeGroup` resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigGceClusterConfigNodeGroupAffinityNodeGroupRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef
 */
export interface DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef {
  /**
   * Optional. The uri of the KMS key used to encrypt various sensitive files.
   *
   * Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef(obj: DataprocWorkflowTemplateSpecPlacementManagedClusterConfigSecurityConfigKerberosConfigKmsKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

