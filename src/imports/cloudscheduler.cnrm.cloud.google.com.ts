// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema CloudSchedulerJob
 */
export class CloudSchedulerJob extends ApiObject {
  /**
   * Returns the apiVersion and kind for "CloudSchedulerJob"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'cloudscheduler.cnrm.cloud.google.com/v1beta1',
    kind: 'CloudSchedulerJob',
  }

  /**
   * Renders a Kubernetes manifest for "CloudSchedulerJob".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: CloudSchedulerJobProps): any {
    return {
      ...CloudSchedulerJob.GVK,
      ...toJson_CloudSchedulerJobProps(props),
    };
  }

  /**
   * Defines a "CloudSchedulerJob" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: CloudSchedulerJobProps) {
    super(scope, id, {
      ...CloudSchedulerJob.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...CloudSchedulerJob.GVK,
      ...toJson_CloudSchedulerJobProps(resolved),
    };
  }
}

/**
 * @schema CloudSchedulerJob
 */
export interface CloudSchedulerJobProps {
  /**
   * @schema CloudSchedulerJob#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema CloudSchedulerJob#spec
   */
  readonly spec: CloudSchedulerJobSpec;

}

/**
 * Converts an object of type 'CloudSchedulerJobProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobProps(obj: CloudSchedulerJobProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_CloudSchedulerJobSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CloudSchedulerJobSpec
 */
export interface CloudSchedulerJobSpec {
  /**
   * App Engine HTTP target.
   *
   * @schema CloudSchedulerJobSpec#appEngineHttpTarget
   */
  readonly appEngineHttpTarget?: CloudSchedulerJobSpecAppEngineHttpTarget;

  /**
   * The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled and the attempt is marked as a `DEADLINE_EXCEEDED` failure. The failed attempt can be viewed in execution logs. Cloud Scheduler will retry the job according to the RetryConfig. The allowed duration for this deadline is: * For HTTP targets, between 15 seconds and 30 minutes. * For App Engine HTTP targets, between 15 seconds and 24 hours.
   *
   * @schema CloudSchedulerJobSpec#attemptDeadline
   */
  readonly attemptDeadline?: string;

  /**
   * Optionally caller-specified in CreateJob or UpdateJob. A human-readable description for the job. This string must not contain more than 500 characters.
   *
   * @schema CloudSchedulerJobSpec#description
   */
  readonly description?: string;

  /**
   * HTTP target.
   *
   * @schema CloudSchedulerJobSpec#httpTarget
   */
  readonly httpTarget?: CloudSchedulerJobSpecHttpTarget;

  /**
   * Immutable. The location for the resource
   *
   * @schema CloudSchedulerJobSpec#location
   */
  readonly location: string;

  /**
   * Pub/Sub target.
   *
   * @schema CloudSchedulerJobSpec#pubsubTarget
   */
  readonly pubsubTarget?: CloudSchedulerJobSpecPubsubTarget;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema CloudSchedulerJobSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Settings that determine the retry behavior.
   *
   * @schema CloudSchedulerJobSpec#retryConfig
   */
  readonly retryConfig?: CloudSchedulerJobSpecRetryConfig;

  /**
   * Required, except when used with UpdateJob. Describes the schedule on which the job will be executed. The schedule can be either of the following types: * [Crontab](http://en.wikipedia.org/wiki/Cron#Overview) * English-like [schedule](https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules) As a general rule, execution `n + 1` of a job will not begin until execution `n` has finished. Cloud Scheduler will never allow two simultaneously outstanding executions. For example, this implies that if the `n+1`th execution is scheduled to run at 16:00 but the `n`th execution takes until 16:15, the `n+1`th execution will not start until `16:15`. A scheduled start time will be delayed if the previous execution has not ended when its scheduled time occurs. If retry_count > 0 and a job attempt fails, the job will be tried a total of retry_count times, with exponential backoff, until the next scheduled start time.
   *
   * @schema CloudSchedulerJobSpec#schedule
   */
  readonly schedule?: string;

  /**
   * Specifies the time zone to be used in interpreting schedule. The value of this field must be a time zone name from the [tz database](http://en.wikipedia.org/wiki/Tz_database). Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string "utc". If a time zone is not specified, the default will be in UTC (also known as GMT).
   *
   * @schema CloudSchedulerJobSpec#timeZone
   */
  readonly timeZone?: string;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpec(obj: CloudSchedulerJobSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appEngineHttpTarget': toJson_CloudSchedulerJobSpecAppEngineHttpTarget(obj.appEngineHttpTarget),
    'attemptDeadline': obj.attemptDeadline,
    'description': obj.description,
    'httpTarget': toJson_CloudSchedulerJobSpecHttpTarget(obj.httpTarget),
    'location': obj.location,
    'pubsubTarget': toJson_CloudSchedulerJobSpecPubsubTarget(obj.pubsubTarget),
    'resourceID': obj.resourceId,
    'retryConfig': toJson_CloudSchedulerJobSpecRetryConfig(obj.retryConfig),
    'schedule': obj.schedule,
    'timeZone': obj.timeZone,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * App Engine HTTP target.
 *
 * @schema CloudSchedulerJobSpecAppEngineHttpTarget
 */
export interface CloudSchedulerJobSpecAppEngineHttpTarget {
  /**
   * App Engine Routing setting for the job.
   *
   * @schema CloudSchedulerJobSpecAppEngineHttpTarget#appEngineRouting
   */
  readonly appEngineRouting?: CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting;

  /**
   * Body. HTTP request body. A request body is allowed only if the HTTP method is POST or PUT. It will result in invalid argument error to set a body on a job with an incompatible HttpMethod.
   *
   * @schema CloudSchedulerJobSpecAppEngineHttpTarget#body
   */
  readonly body?: string;

  /**
   * HTTP request headers. This map contains the header field names and values. Headers can be set when the job is created. Cloud Scheduler sets some headers to default values: * `User-Agent`: By default, this header is `"App Engine-Google; (+http://code.google.com/appengine)"`. This header can be modified, but Cloud Scheduler will append `"App Engine-Google; (+http://code.google.com/appengine)"` to the modified `User-Agent`. * `X-CloudScheduler`: This header will be set to true. The headers below are output only. They cannot be set or overridden: * `X-Google-*`: For Google internal use only. * `X-App Engine-*`: For Google internal use only. In addition, some App Engine headers, which contain job-specific information, are also be sent to the job handler.
   *
   * @schema CloudSchedulerJobSpecAppEngineHttpTarget#headers
   */
  readonly headers?: { [key: string]: string };

  /**
   * The HTTP method to use for the request. PATCH and OPTIONS are not permitted. Possible values: HTTP_METHOD_UNSPECIFIED, POST, GET, HEAD, PUT, DELETE, PATCH, OPTIONS
   *
   * @schema CloudSchedulerJobSpecAppEngineHttpTarget#httpMethod
   */
  readonly httpMethod?: string;

  /**
   * The relative URI. The relative URL must begin with "/" and must be a valid HTTP relative URL. It can contain a path, query string arguments, and `#` fragments. If the relative URL is empty, then the root path "/" will be used. No spaces are allowed, and the maximum length allowed is 2083 characters.
   *
   * @schema CloudSchedulerJobSpecAppEngineHttpTarget#relativeUri
   */
  readonly relativeUri?: string;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecAppEngineHttpTarget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecAppEngineHttpTarget(obj: CloudSchedulerJobSpecAppEngineHttpTarget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'appEngineRouting': toJson_CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting(obj.appEngineRouting),
    'body': obj.body,
    'headers': ((obj.headers) === undefined) ? undefined : (Object.entries(obj.headers).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'httpMethod': obj.httpMethod,
    'relativeUri': obj.relativeUri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTP target.
 *
 * @schema CloudSchedulerJobSpecHttpTarget
 */
export interface CloudSchedulerJobSpecHttpTarget {
  /**
   * HTTP request body. A request body is allowed only if the HTTP method is POST, PUT, or PATCH. It is an error to set body on a job with an incompatible HttpMethod.
   *
   * @schema CloudSchedulerJobSpecHttpTarget#body
   */
  readonly body?: string;

  /**
   * The user can specify HTTP request headers to send with the job's HTTP request. This map contains the header field names and values. Repeated headers are not supported, but a header value can contain commas. These headers represent a subset of the headers that will accompany the job's HTTP request. Some HTTP request headers will be ignored or replaced. A partial list of headers that will be ignored or replaced is below: - Host: This will be computed by Cloud Scheduler and derived from uri. * `Content-Length`: This will be computed by Cloud Scheduler. * `User-Agent`: This will be set to `"Google-Cloud-Scheduler"`. * `X-Google-*`: Google internal use only. * `X-appengine-*`: Google internal use only. The total size of headers must be less than 80KB.
   *
   * @schema CloudSchedulerJobSpecHttpTarget#headers
   */
  readonly headers?: { [key: string]: string };

  /**
   * Which HTTP method to use for the request. Possible values: HTTP_METHOD_UNSPECIFIED, POST, GET, HEAD, PUT, DELETE, PATCH, OPTIONS
   *
   * @schema CloudSchedulerJobSpecHttpTarget#httpMethod
   */
  readonly httpMethod?: string;

  /**
   * If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2) will be generated and attached as an `Authorization` header in the HTTP request. This type of authorization should generally only be used when calling Google APIs hosted on *.googleapis.com.
   *
   * @schema CloudSchedulerJobSpecHttpTarget#oauthToken
   */
  readonly oauthToken?: CloudSchedulerJobSpecHttpTargetOauthToken;

  /**
   * If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect) token will be generated and attached as an `Authorization` header in the HTTP request. This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
   *
   * @schema CloudSchedulerJobSpecHttpTarget#oidcToken
   */
  readonly oidcToken?: CloudSchedulerJobSpecHttpTargetOidcToken;

  /**
   * Required. The full URI path that the request will be sent to. This string must begin with either "http://" or "https://". Some examples of valid values for uri are: `http://acme.com` and `https://acme.com/sales:8080`. Cloud Scheduler will encode some characters for safety and compatibility. The maximum allowed URL length is 2083 characters after encoding.
   *
   * @schema CloudSchedulerJobSpecHttpTarget#uri
   */
  readonly uri: string;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecHttpTarget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecHttpTarget(obj: CloudSchedulerJobSpecHttpTarget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'body': obj.body,
    'headers': ((obj.headers) === undefined) ? undefined : (Object.entries(obj.headers).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'httpMethod': obj.httpMethod,
    'oauthToken': toJson_CloudSchedulerJobSpecHttpTargetOauthToken(obj.oauthToken),
    'oidcToken': toJson_CloudSchedulerJobSpecHttpTargetOidcToken(obj.oidcToken),
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Pub/Sub target.
 *
 * @schema CloudSchedulerJobSpecPubsubTarget
 */
export interface CloudSchedulerJobSpecPubsubTarget {
  /**
   * Attributes for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute.
   *
   * @schema CloudSchedulerJobSpecPubsubTarget#attributes
   */
  readonly attributes?: { [key: string]: string };

  /**
   * The message payload for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute.
   *
   * @schema CloudSchedulerJobSpecPubsubTarget#data
   */
  readonly data?: string;

  /**
   * @schema CloudSchedulerJobSpecPubsubTarget#topicRef
   */
  readonly topicRef: CloudSchedulerJobSpecPubsubTargetTopicRef;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecPubsubTarget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecPubsubTarget(obj: CloudSchedulerJobSpecPubsubTarget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'attributes': ((obj.attributes) === undefined) ? undefined : (Object.entries(obj.attributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'data': obj.data,
    'topicRef': toJson_CloudSchedulerJobSpecPubsubTargetTopicRef(obj.topicRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Settings that determine the retry behavior.
 *
 * @schema CloudSchedulerJobSpecRetryConfig
 */
export interface CloudSchedulerJobSpecRetryConfig {
  /**
   * The maximum amount of time to wait before retrying a job after it fails. The default value of this field is 1 hour.
   *
   * @schema CloudSchedulerJobSpecRetryConfig#maxBackoffDuration
   */
  readonly maxBackoffDuration?: string;

  /**
   * The time between retries will double `max_doublings` times. A job's retry interval starts at min_backoff_duration, then doubles `max_doublings` times, then increases linearly, and finally retries at intervals of max_backoff_duration up to retry_count times. For example, if min_backoff_duration is 10s, max_backoff_duration is 300s, and `max_doublings` is 3, then the a job will first be retried in 10s. The retry interval will double three times, and then increase linearly by 2^3 * 10s. Finally, the job will retry at intervals of max_backoff_duration until the job has been attempted retry_count times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s, 300s, .... The default value of this field is 5.
   *
   * @schema CloudSchedulerJobSpecRetryConfig#maxDoublings
   */
  readonly maxDoublings?: number;

  /**
   * The time limit for retrying a failed job, measured from time when an execution was first attempted. If specified with retry_count, the job will be retried until both limits are reached. The default value for max_retry_duration is zero, which means retry duration is unlimited.
   *
   * @schema CloudSchedulerJobSpecRetryConfig#maxRetryDuration
   */
  readonly maxRetryDuration?: string;

  /**
   * The minimum amount of time to wait before retrying a job after it fails. The default value of this field is 5 seconds.
   *
   * @schema CloudSchedulerJobSpecRetryConfig#minBackoffDuration
   */
  readonly minBackoffDuration?: string;

  /**
   * The number of attempts that the system will make to run a job using the exponential backoff procedure described by max_doublings. The default value of retry_count is zero. If retry_count is zero, a job attempt will *not* be retried if it fails. Instead the Cloud Scheduler system will wait for the next scheduled execution time. If retry_count is set to a non-zero number then Cloud Scheduler will retry failed attempts, using exponential backoff, retry_count times, or until the next scheduled execution time, whichever comes first. Values greater than 5 and negative values are not allowed.
   *
   * @schema CloudSchedulerJobSpecRetryConfig#retryCount
   */
  readonly retryCount?: number;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecRetryConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecRetryConfig(obj: CloudSchedulerJobSpecRetryConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxBackoffDuration': obj.maxBackoffDuration,
    'maxDoublings': obj.maxDoublings,
    'maxRetryDuration': obj.maxRetryDuration,
    'minBackoffDuration': obj.minBackoffDuration,
    'retryCount': obj.retryCount,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * App Engine Routing setting for the job.
 *
 * @schema CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting
 */
export interface CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting {
  /**
   * App instance. By default, the job is sent to an instance which is available when the job is attempted. Requests can only be sent to a specific instance if [manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes). App Engine Flex does not support instances. For more information, see [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed) and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed).
   *
   * @schema CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting#instance
   */
  readonly instance?: string;

  /**
   * App service. By default, the job is sent to the service which is the default service when the job is attempted.
   *
   * @schema CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting#service
   */
  readonly service?: string;

  /**
   * App version. By default, the job is sent to the version which is the default version when the job is attempted.
   *
   * @schema CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting#version
   */
  readonly version?: string;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting(obj: CloudSchedulerJobSpecAppEngineHttpTargetAppEngineRouting | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'instance': obj.instance,
    'service': obj.service,
    'version': obj.version,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2) will be generated and attached as an `Authorization` header in the HTTP request. This type of authorization should generally only be used when calling Google APIs hosted on *.googleapis.com.
 *
 * @schema CloudSchedulerJobSpecHttpTargetOauthToken
 */
export interface CloudSchedulerJobSpecHttpTargetOauthToken {
  /**
   * OAuth scope to be used for generating OAuth access token. If not specified, "https://www.googleapis.com/auth/cloud-platform" will be used.
   *
   * @schema CloudSchedulerJobSpecHttpTargetOauthToken#scope
   */
  readonly scope?: string;

  /**
   * @schema CloudSchedulerJobSpecHttpTargetOauthToken#serviceAccountRef
   */
  readonly serviceAccountRef?: CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecHttpTargetOauthToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecHttpTargetOauthToken(obj: CloudSchedulerJobSpecHttpTargetOauthToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'scope': obj.scope,
    'serviceAccountRef': toJson_CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef(obj.serviceAccountRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect) token will be generated and attached as an `Authorization` header in the HTTP request. This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
 *
 * @schema CloudSchedulerJobSpecHttpTargetOidcToken
 */
export interface CloudSchedulerJobSpecHttpTargetOidcToken {
  /**
   * Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.
   *
   * @schema CloudSchedulerJobSpecHttpTargetOidcToken#audience
   */
  readonly audience?: string;

  /**
   * @schema CloudSchedulerJobSpecHttpTargetOidcToken#serviceAccountRef
   */
  readonly serviceAccountRef?: CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecHttpTargetOidcToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecHttpTargetOidcToken(obj: CloudSchedulerJobSpecHttpTargetOidcToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'serviceAccountRef': toJson_CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef(obj.serviceAccountRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CloudSchedulerJobSpecPubsubTargetTopicRef
 */
export interface CloudSchedulerJobSpecPubsubTargetTopicRef {
  /**
   * Required. The name of the Cloud Pub/Sub topic to which messages will be published when a job is delivered. The topic name must be in the same format as required by Pub/Sub's [PublishRequest.name](https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#publishrequest), for example `projects/PROJECT_ID/topics/TOPIC_ID`. The topic must be in the same project as the Cloud Scheduler job.
   *
   * Allowed value: The Google Cloud resource name of a `PubSubTopic` resource (format: `projects/{{project}}/topics/{{name}}`).
   *
   * @schema CloudSchedulerJobSpecPubsubTargetTopicRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CloudSchedulerJobSpecPubsubTargetTopicRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema CloudSchedulerJobSpecPubsubTargetTopicRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecPubsubTargetTopicRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecPubsubTargetTopicRef(obj: CloudSchedulerJobSpecPubsubTargetTopicRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef
 */
export interface CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef {
  /**
   * [Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OAuth token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account.
   *
   * Allowed value: The `email` field of an `IAMServiceAccount` resource.
   *
   * @schema CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef(obj: CloudSchedulerJobSpecHttpTargetOauthTokenServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef
 */
export interface CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef {
  /**
   * [Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OIDC token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account.
   *
   * Allowed value: The `email` field of an `IAMServiceAccount` resource.
   *
   * @schema CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef(obj: CloudSchedulerJobSpecHttpTargetOidcTokenServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

