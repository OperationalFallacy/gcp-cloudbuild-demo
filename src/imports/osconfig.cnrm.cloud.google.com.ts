// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema OSConfigGuestPolicy
 */
export class OsConfigGuestPolicy extends ApiObject {
  /**
   * Returns the apiVersion and kind for "OSConfigGuestPolicy"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'osconfig.cnrm.cloud.google.com/v1beta1',
    kind: 'OSConfigGuestPolicy',
  }

  /**
   * Renders a Kubernetes manifest for "OSConfigGuestPolicy".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: OsConfigGuestPolicyProps = {}): any {
    return {
      ...OsConfigGuestPolicy.GVK,
      ...toJson_OsConfigGuestPolicyProps(props),
    };
  }

  /**
   * Defines a "OSConfigGuestPolicy" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: OsConfigGuestPolicyProps = {}) {
    super(scope, id, {
      ...OsConfigGuestPolicy.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...OsConfigGuestPolicy.GVK,
      ...toJson_OsConfigGuestPolicyProps(resolved),
    };
  }
}

/**
 * @schema OSConfigGuestPolicy
 */
export interface OsConfigGuestPolicyProps {
  /**
   * @schema OSConfigGuestPolicy#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema OSConfigGuestPolicy#spec
   */
  readonly spec?: OsConfigGuestPolicySpec;

}

/**
 * Converts an object of type 'OsConfigGuestPolicyProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicyProps(obj: OsConfigGuestPolicyProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_OsConfigGuestPolicySpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpec
 */
export interface OsConfigGuestPolicySpec {
  /**
   * Specifies the VMs that are assigned this policy. This allows you to target sets or groups of VMs by different parameters such as labels, names, OS, or zones. Empty assignments will target ALL VMs underneath this policy. Conflict Management Policies that exist higher up in the resource hierarchy (closer to the Org) will override those lower down if there is a conflict. At the same level in the resource hierarchy (ie. within a project), the service will prevent the creation of multiple policies that conflict with each other. If there are multiple policies that specify the same config (eg. package, software recipe, repository, etc.), the service will ensure that no VM could potentially receive instructions from both policies. To create multiple policies that specify different versions of a package or different configs for different Operating Systems, each policy must be mutually exclusive in their targeting according to labels, OS, or other criteria. Different configs are identified for conflicts in different ways. Packages are identified by their name and the package manager(s) they target. Package repositories are identified by their unique id where applicable. Some package managers don't have a unique identifier for repositories and where that's the case, no uniqueness is validated by the service. Note that if OS Inventory is disabled, a VM will not be assigned a policy that targets by OS because the service will see this VM's OS as unknown.
   *
   * @schema OsConfigGuestPolicySpec#assignment
   */
  readonly assignment?: OsConfigGuestPolicySpecAssignment;

  /**
   * Description of the GuestPolicy. Length of the description is limited to 1024 characters.
   *
   * @schema OsConfigGuestPolicySpec#description
   */
  readonly description?: string;

  /**
   * List of package repository configurations assigned to the VM instance.
   *
   * @schema OsConfigGuestPolicySpec#packageRepositories
   */
  readonly packageRepositories?: OsConfigGuestPolicySpecPackageRepositories[];

  /**
   * List of package configurations assigned to the VM instance.
   *
   * @schema OsConfigGuestPolicySpec#packages
   */
  readonly packages?: OsConfigGuestPolicySpecPackages[];

  /**
   * Optional. A list of Recipes to install on the VM.
   *
   * @schema OsConfigGuestPolicySpec#recipes
   */
  readonly recipes?: OsConfigGuestPolicySpecRecipes[];

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema OsConfigGuestPolicySpec#resourceID
   */
  readonly resourceId?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpec(obj: OsConfigGuestPolicySpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'assignment': toJson_OsConfigGuestPolicySpecAssignment(obj.assignment),
    'description': obj.description,
    'packageRepositories': obj.packageRepositories?.map(y => toJson_OsConfigGuestPolicySpecPackageRepositories(y)),
    'packages': obj.packages?.map(y => toJson_OsConfigGuestPolicySpecPackages(y)),
    'recipes': obj.recipes?.map(y => toJson_OsConfigGuestPolicySpecRecipes(y)),
    'resourceID': obj.resourceId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the VMs that are assigned this policy. This allows you to target sets or groups of VMs by different parameters such as labels, names, OS, or zones. Empty assignments will target ALL VMs underneath this policy. Conflict Management Policies that exist higher up in the resource hierarchy (closer to the Org) will override those lower down if there is a conflict. At the same level in the resource hierarchy (ie. within a project), the service will prevent the creation of multiple policies that conflict with each other. If there are multiple policies that specify the same config (eg. package, software recipe, repository, etc.), the service will ensure that no VM could potentially receive instructions from both policies. To create multiple policies that specify different versions of a package or different configs for different Operating Systems, each policy must be mutually exclusive in their targeting according to labels, OS, or other criteria. Different configs are identified for conflicts in different ways. Packages are identified by their name and the package manager(s) they target. Package repositories are identified by their unique id where applicable. Some package managers don't have a unique identifier for repositories and where that's the case, no uniqueness is validated by the service. Note that if OS Inventory is disabled, a VM will not be assigned a policy that targets by OS because the service will see this VM's OS as unknown.
 *
 * @schema OsConfigGuestPolicySpecAssignment
 */
export interface OsConfigGuestPolicySpecAssignment {
  /**
   * Targets instances matching at least one of these label sets. This allows an assignment to target disparate groups, for example "env=prod or env=staging".
   *
   * @schema OsConfigGuestPolicySpecAssignment#groupLabels
   */
  readonly groupLabels?: OsConfigGuestPolicySpecAssignmentGroupLabels[];

  /**
   * Targets VM instances whose name starts with one of these prefixes. Like labels, this is another way to group VM instances when targeting configs, for example prefix="prod-". Only supported for project-level policies.
   *
   * @schema OsConfigGuestPolicySpecAssignment#instanceNamePrefixes
   */
  readonly instanceNamePrefixes?: string[];

  /**
   * @schema OsConfigGuestPolicySpecAssignment#instances
   */
  readonly instances?: OsConfigGuestPolicySpecAssignmentInstances[];

  /**
   * Targets VM instances matching at least one of the following OS types. VM instances must match all supplied criteria for a given OsType to be included.
   *
   * @schema OsConfigGuestPolicySpecAssignment#osTypes
   */
  readonly osTypes?: OsConfigGuestPolicySpecAssignmentOsTypes[];

  /**
   * Targets instances in any of these zones. Leave empty to target instances in any zone. Zonal targeting is uncommon and is supported to facilitate the management of changes by zone.
   *
   * @schema OsConfigGuestPolicySpecAssignment#zones
   */
  readonly zones?: string[];

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecAssignment' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecAssignment(obj: OsConfigGuestPolicySpecAssignment | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'groupLabels': obj.groupLabels?.map(y => toJson_OsConfigGuestPolicySpecAssignmentGroupLabels(y)),
    'instanceNamePrefixes': obj.instanceNamePrefixes?.map(y => y),
    'instances': obj.instances?.map(y => toJson_OsConfigGuestPolicySpecAssignmentInstances(y)),
    'osTypes': obj.osTypes?.map(y => toJson_OsConfigGuestPolicySpecAssignmentOsTypes(y)),
    'zones': obj.zones?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecPackageRepositories
 */
export interface OsConfigGuestPolicySpecPackageRepositories {
  /**
   * An Apt Repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositories#apt
   */
  readonly apt?: OsConfigGuestPolicySpecPackageRepositoriesApt;

  /**
   * A Goo Repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositories#goo
   */
  readonly goo?: OsConfigGuestPolicySpecPackageRepositoriesGoo;

  /**
   * A Yum Repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositories#yum
   */
  readonly yum?: OsConfigGuestPolicySpecPackageRepositoriesYum;

  /**
   * A Zypper Repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositories#zypper
   */
  readonly zypper?: OsConfigGuestPolicySpecPackageRepositoriesZypper;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecPackageRepositories' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecPackageRepositories(obj: OsConfigGuestPolicySpecPackageRepositories | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apt': toJson_OsConfigGuestPolicySpecPackageRepositoriesApt(obj.apt),
    'goo': toJson_OsConfigGuestPolicySpecPackageRepositoriesGoo(obj.goo),
    'yum': toJson_OsConfigGuestPolicySpecPackageRepositoriesYum(obj.yum),
    'zypper': toJson_OsConfigGuestPolicySpecPackageRepositoriesZypper(obj.zypper),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecPackages
 */
export interface OsConfigGuestPolicySpecPackages {
  /**
   * The desired_state the agent should maintain for this package. The default is to ensure the package is installed. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
   *
   * @schema OsConfigGuestPolicySpecPackages#desiredState
   */
  readonly desiredState?: string;

  /**
   * Type of package manager that can be used to install this package. If a system does not have the package manager, the package is not installed or removed no error message is returned. By default, or if you specify `ANY`, the agent attempts to install and remove this package using the default package manager. This is useful when creating a policy that applies to different types of systems. The default behavior is ANY. Possible values: MANAGER_UNSPECIFIED, ANY, APT, YUM, ZYPPER, GOO
   *
   * @schema OsConfigGuestPolicySpecPackages#manager
   */
  readonly manager?: string;

  /**
   * Required. The name of the package. A package is uniquely identified for conflict validation by checking the package name and the manager(s) that the package targets.
   *
   * @schema OsConfigGuestPolicySpecPackages#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecPackages' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecPackages(obj: OsConfigGuestPolicySpecPackages | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'desiredState': obj.desiredState,
    'manager': obj.manager,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecRecipes
 */
export interface OsConfigGuestPolicySpecRecipes {
  /**
   * Resources available to be used in the steps in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipes#artifacts
   */
  readonly artifacts?: OsConfigGuestPolicySpecRecipesArtifacts[];

  /**
   * Default is INSTALLED. The desired state the agent should maintain for this recipe. INSTALLED: The software recipe is installed on the instance but won't be updated to new versions. UPDATED: The software recipe is installed on the instance. The recipe is updated to a higher version, if a higher version of the recipe is assigned to this instance. REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state is rejected. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
   *
   * @default INSTALLED. The desired state the agent should maintain for this recipe. INSTALLED: The software recipe is installed on the instance but won't be updated to new versions. UPDATED: The software recipe is installed on the instance. The recipe is updated to a higher version, if a higher version of the recipe is assigned to this instance. REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state is rejected. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
   * @schema OsConfigGuestPolicySpecRecipes#desiredState
   */
  readonly desiredState?: string;

  /**
   * Actions to be taken for installing this recipe. On failure it stops executing steps and does not attempt another installation. Any steps taken (including partially completed steps) are not rolled back.
   *
   * @schema OsConfigGuestPolicySpecRecipes#installSteps
   */
  readonly installSteps?: OsConfigGuestPolicySpecRecipesInstallSteps[];

  /**
   * Required. Unique identifier for the recipe. Only one recipe with a given name is installed on an instance. Names are also used to identify resources which helps to determine whether guest policies have conflicts. This means that requests to create multiple recipes with the same name and version are rejected since they could potentially have conflicting assignments.
   *
   * @schema OsConfigGuestPolicySpecRecipes#name
   */
  readonly name?: string;

  /**
   * Actions to be taken for updating this recipe. On failure it stops executing steps and does not attempt another update for this recipe. Any steps taken (including partially completed steps) are not rolled back.
   *
   * @schema OsConfigGuestPolicySpecRecipes#updateSteps
   */
  readonly updateSteps?: OsConfigGuestPolicySpecRecipesUpdateSteps[];

  /**
   * The version of this software recipe. Version can be up to 4 period separated numbers (e.g. 12.34.56.78).
   *
   * @schema OsConfigGuestPolicySpecRecipes#version
   */
  readonly version?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipes(obj: OsConfigGuestPolicySpecRecipes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifacts': obj.artifacts?.map(y => toJson_OsConfigGuestPolicySpecRecipesArtifacts(y)),
    'desiredState': obj.desiredState,
    'installSteps': obj.installSteps?.map(y => toJson_OsConfigGuestPolicySpecRecipesInstallSteps(y)),
    'name': obj.name,
    'updateSteps': obj.updateSteps?.map(y => toJson_OsConfigGuestPolicySpecRecipesUpdateSteps(y)),
    'version': obj.version,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecAssignmentGroupLabels
 */
export interface OsConfigGuestPolicySpecAssignmentGroupLabels {
  /**
   * Google Compute Engine instance labels that must be present for an instance to be included in this assignment group.
   *
   * @schema OsConfigGuestPolicySpecAssignmentGroupLabels#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecAssignmentGroupLabels' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecAssignmentGroupLabels(obj: OsConfigGuestPolicySpecAssignmentGroupLabels | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecAssignmentInstances
 */
export interface OsConfigGuestPolicySpecAssignmentInstances {
  /**
   * Allowed value: The `selfLink` field of a `ComputeInstance` resource.
   *
   * @schema OsConfigGuestPolicySpecAssignmentInstances#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema OsConfigGuestPolicySpecAssignmentInstances#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema OsConfigGuestPolicySpecAssignmentInstances#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecAssignmentInstances' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecAssignmentInstances(obj: OsConfigGuestPolicySpecAssignmentInstances | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecAssignmentOsTypes
 */
export interface OsConfigGuestPolicySpecAssignmentOsTypes {
  /**
   * Targets VM instances with OS Inventory enabled and having the following OS architecture.
   *
   * @schema OsConfigGuestPolicySpecAssignmentOsTypes#osArchitecture
   */
  readonly osArchitecture?: string;

  /**
   * Targets VM instances with OS Inventory enabled and having the following OS short name, for example "debian" or "windows".
   *
   * @schema OsConfigGuestPolicySpecAssignmentOsTypes#osShortName
   */
  readonly osShortName?: string;

  /**
   * Targets VM instances with OS Inventory enabled and having the following following OS version.
   *
   * @schema OsConfigGuestPolicySpecAssignmentOsTypes#osVersion
   */
  readonly osVersion?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecAssignmentOsTypes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecAssignmentOsTypes(obj: OsConfigGuestPolicySpecAssignmentOsTypes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'osArchitecture': obj.osArchitecture,
    'osShortName': obj.osShortName,
    'osVersion': obj.osVersion,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An Apt Repository.
 *
 * @schema OsConfigGuestPolicySpecPackageRepositoriesApt
 */
export interface OsConfigGuestPolicySpecPackageRepositoriesApt {
  /**
   * Type of archive files in this repository. The default behavior is DEB. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesApt#archiveType
   */
  readonly archiveType?: string;

  /**
   * Required. List of components for this repository. Must contain at least one item.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesApt#components
   */
  readonly components?: string[];

  /**
   * Required. Distribution of this repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesApt#distribution
   */
  readonly distribution: string;

  /**
   * URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg` containing all the keys in any applied guest policy.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesApt#gpgKey
   */
  readonly gpgKey?: string;

  /**
   * Required. URI for this repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesApt#uri
   */
  readonly uri: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecPackageRepositoriesApt' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecPackageRepositoriesApt(obj: OsConfigGuestPolicySpecPackageRepositoriesApt | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveType': obj.archiveType,
    'components': obj.components?.map(y => y),
    'distribution': obj.distribution,
    'gpgKey': obj.gpgKey,
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Goo Repository.
 *
 * @schema OsConfigGuestPolicySpecPackageRepositoriesGoo
 */
export interface OsConfigGuestPolicySpecPackageRepositoriesGoo {
  /**
   * Required. The name of the repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesGoo#name
   */
  readonly name: string;

  /**
   * Required. The url of the repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesGoo#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecPackageRepositoriesGoo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecPackageRepositoriesGoo(obj: OsConfigGuestPolicySpecPackageRepositoriesGoo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Yum Repository.
 *
 * @schema OsConfigGuestPolicySpecPackageRepositoriesYum
 */
export interface OsConfigGuestPolicySpecPackageRepositoriesYum {
  /**
   * Required. The location of the repository directory.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesYum#baseUrl
   */
  readonly baseUrl: string;

  /**
   * The display name of the repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesYum#displayName
   */
  readonly displayName?: string;

  /**
   * URIs of GPG keys.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesYum#gpgKeys
   */
  readonly gpgKeys?: string[];

  /**
   * Required. A one word, unique name for this repository. This is the `repo id` in the Yum config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for guest policy conflicts.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesYum#id
   */
  readonly id: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecPackageRepositoriesYum' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecPackageRepositoriesYum(obj: OsConfigGuestPolicySpecPackageRepositoriesYum | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'baseUrl': obj.baseUrl,
    'displayName': obj.displayName,
    'gpgKeys': obj.gpgKeys?.map(y => y),
    'id': obj.id,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Zypper Repository.
 *
 * @schema OsConfigGuestPolicySpecPackageRepositoriesZypper
 */
export interface OsConfigGuestPolicySpecPackageRepositoriesZypper {
  /**
   * Required. The location of the repository directory.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesZypper#baseUrl
   */
  readonly baseUrl: string;

  /**
   * The display name of the repository.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesZypper#displayName
   */
  readonly displayName?: string;

  /**
   * URIs of GPG keys.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesZypper#gpgKeys
   */
  readonly gpgKeys?: string[];

  /**
   * Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for guest policy conflicts.
   *
   * @schema OsConfigGuestPolicySpecPackageRepositoriesZypper#id
   */
  readonly id: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecPackageRepositoriesZypper' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecPackageRepositoriesZypper(obj: OsConfigGuestPolicySpecPackageRepositoriesZypper | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'baseUrl': obj.baseUrl,
    'displayName': obj.displayName,
    'gpgKeys': obj.gpgKeys?.map(y => y),
    'id': obj.id,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecRecipesArtifacts
 */
export interface OsConfigGuestPolicySpecRecipesArtifacts {
  /**
   * Defaults to false. When false, recipes are subject to validations based on the artifact type: Remote: A checksum must be specified, and only protocols with transport-layer security are permitted. GCS: An object generation number must be specified.
   *
   * @default false. When false, recipes are subject to validations based on the artifact type: Remote: A checksum must be specified, and only protocols with transport-layer security are permitted. GCS: An object generation number must be specified.
   * @schema OsConfigGuestPolicySpecRecipesArtifacts#allowInsecure
   */
  readonly allowInsecure?: boolean;

  /**
   * A Google Cloud Storage artifact.
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifacts#gcs
   */
  readonly gcs?: OsConfigGuestPolicySpecRecipesArtifactsGcs;

  /**
   * Required. Id of the artifact, which the installation and update steps of this recipe can reference. Artifacts in a recipe cannot have the same id.
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifacts#id
   */
  readonly id?: string;

  /**
   * A generic remote artifact.
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifacts#remote
   */
  readonly remote?: OsConfigGuestPolicySpecRecipesArtifactsRemote;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesArtifacts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesArtifacts(obj: OsConfigGuestPolicySpecRecipesArtifacts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowInsecure': obj.allowInsecure,
    'gcs': toJson_OsConfigGuestPolicySpecRecipesArtifactsGcs(obj.gcs),
    'id': obj.id,
    'remote': toJson_OsConfigGuestPolicySpecRecipesArtifactsRemote(obj.remote),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecRecipesInstallSteps
 */
export interface OsConfigGuestPolicySpecRecipesInstallSteps {
  /**
   * Extracts an archive into the specified directory.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallSteps#archiveExtraction
   */
  readonly archiveExtraction?: OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction;

  /**
   * Installs a deb file via dpkg.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallSteps#dpkgInstallation
   */
  readonly dpkgInstallation?: OsConfigGuestPolicySpecRecipesInstallStepsDpkgInstallation;

  /**
   * Copies a file onto the instance.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallSteps#fileCopy
   */
  readonly fileCopy?: OsConfigGuestPolicySpecRecipesInstallStepsFileCopy;

  /**
   * Executes an artifact or local file.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallSteps#fileExec
   */
  readonly fileExec?: OsConfigGuestPolicySpecRecipesInstallStepsFileExec;

  /**
   * Installs an MSI file.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallSteps#msiInstallation
   */
  readonly msiInstallation?: OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation;

  /**
   * Installs an rpm file via the rpm utility.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallSteps#rpmInstallation
   */
  readonly rpmInstallation?: OsConfigGuestPolicySpecRecipesInstallStepsRpmInstallation;

  /**
   * Runs commands in a shell.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallSteps#scriptRun
   */
  readonly scriptRun?: OsConfigGuestPolicySpecRecipesInstallStepsScriptRun;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesInstallSteps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesInstallSteps(obj: OsConfigGuestPolicySpecRecipesInstallSteps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveExtraction': toJson_OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction(obj.archiveExtraction),
    'dpkgInstallation': toJson_OsConfigGuestPolicySpecRecipesInstallStepsDpkgInstallation(obj.dpkgInstallation),
    'fileCopy': toJson_OsConfigGuestPolicySpecRecipesInstallStepsFileCopy(obj.fileCopy),
    'fileExec': toJson_OsConfigGuestPolicySpecRecipesInstallStepsFileExec(obj.fileExec),
    'msiInstallation': toJson_OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation(obj.msiInstallation),
    'rpmInstallation': toJson_OsConfigGuestPolicySpecRecipesInstallStepsRpmInstallation(obj.rpmInstallation),
    'scriptRun': toJson_OsConfigGuestPolicySpecRecipesInstallStepsScriptRun(obj.scriptRun),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecRecipesUpdateSteps
 */
export interface OsConfigGuestPolicySpecRecipesUpdateSteps {
  /**
   * Extracts an archive into the specified directory.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateSteps#archiveExtraction
   */
  readonly archiveExtraction?: OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction;

  /**
   * Installs a deb file via dpkg.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateSteps#dpkgInstallation
   */
  readonly dpkgInstallation?: OsConfigGuestPolicySpecRecipesUpdateStepsDpkgInstallation;

  /**
   * Copies a file onto the instance.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateSteps#fileCopy
   */
  readonly fileCopy?: OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy;

  /**
   * Executes an artifact or local file.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateSteps#fileExec
   */
  readonly fileExec?: OsConfigGuestPolicySpecRecipesUpdateStepsFileExec;

  /**
   * Installs an MSI file.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateSteps#msiInstallation
   */
  readonly msiInstallation?: OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation;

  /**
   * Installs an rpm file via the rpm utility.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateSteps#rpmInstallation
   */
  readonly rpmInstallation?: OsConfigGuestPolicySpecRecipesUpdateStepsRpmInstallation;

  /**
   * Runs commands in a shell.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateSteps#scriptRun
   */
  readonly scriptRun?: OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesUpdateSteps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesUpdateSteps(obj: OsConfigGuestPolicySpecRecipesUpdateSteps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveExtraction': toJson_OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction(obj.archiveExtraction),
    'dpkgInstallation': toJson_OsConfigGuestPolicySpecRecipesUpdateStepsDpkgInstallation(obj.dpkgInstallation),
    'fileCopy': toJson_OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy(obj.fileCopy),
    'fileExec': toJson_OsConfigGuestPolicySpecRecipesUpdateStepsFileExec(obj.fileExec),
    'msiInstallation': toJson_OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation(obj.msiInstallation),
    'rpmInstallation': toJson_OsConfigGuestPolicySpecRecipesUpdateStepsRpmInstallation(obj.rpmInstallation),
    'scriptRun': toJson_OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun(obj.scriptRun),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Google Cloud Storage artifact.
 *
 * @schema OsConfigGuestPolicySpecRecipesArtifactsGcs
 */
export interface OsConfigGuestPolicySpecRecipesArtifactsGcs {
  /**
   * @schema OsConfigGuestPolicySpecRecipesArtifactsGcs#bucketRef
   */
  readonly bucketRef?: OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef;

  /**
   * Must be provided if allow_insecure is false. Generation number of the Google Cloud Storage object. `https://storage.googleapis.com/my-bucket/foo/bar#1234567` this value would be `1234567`.
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifactsGcs#generation
   */
  readonly generation?: number;

  /**
   * Name of the Google Cloud Storage object. As specified [here] (https://cloud.google.com/storage/docs/naming#objectnames) Given an example URL: `https://storage.googleapis.com/my-bucket/foo/bar#1234567` this value would be `foo/bar`.
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifactsGcs#object
   */
  readonly object?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesArtifactsGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesArtifactsGcs(obj: OsConfigGuestPolicySpecRecipesArtifactsGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucketRef': toJson_OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef(obj.bucketRef),
    'generation': obj.generation,
    'object': obj.object,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A generic remote artifact.
 *
 * @schema OsConfigGuestPolicySpecRecipesArtifactsRemote
 */
export interface OsConfigGuestPolicySpecRecipesArtifactsRemote {
  /**
   * Must be provided if `allow_insecure` is `false`. SHA256 checksum in hex format, to compare to the checksum of the artifact. If the checksum is not empty and it doesn't match the artifact then the recipe installation fails before running any of the steps.
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifactsRemote#checksum
   */
  readonly checksum?: string;

  /**
   * URI from which to fetch the object. It should contain both the protocol and path following the format: {protocol}://{location}.
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifactsRemote#uri
   */
  readonly uri?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesArtifactsRemote' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesArtifactsRemote(obj: OsConfigGuestPolicySpecRecipesArtifactsRemote | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'checksum': obj.checksum,
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Extracts an archive into the specified directory.
 *
 * @schema OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction
 */
export interface OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction {
  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction#artifactId
   */
  readonly artifactId?: string;

  /**
   * Directory to extract archive to. Defaults to `/` on Linux or `C:` on Windows.
   *
   * @default on Linux or `C:` on Windows.
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction#destination
   */
  readonly destination?: string;

  /**
   * Required. The type of the archive to extract. Possible values: TYPE_UNSPECIFIED, VALIDATION, DESIRED_STATE_CHECK, DESIRED_STATE_ENFORCEMENT, DESIRED_STATE_CHECK_POST_ENFORCEMENT
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction(obj: OsConfigGuestPolicySpecRecipesInstallStepsArchiveExtraction | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactId': obj.artifactId,
    'destination': obj.destination,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Installs a deb file via dpkg.
 *
 * @schema OsConfigGuestPolicySpecRecipesInstallStepsDpkgInstallation
 */
export interface OsConfigGuestPolicySpecRecipesInstallStepsDpkgInstallation {
  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsDpkgInstallation#artifactId
   */
  readonly artifactId?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesInstallStepsDpkgInstallation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesInstallStepsDpkgInstallation(obj: OsConfigGuestPolicySpecRecipesInstallStepsDpkgInstallation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactId': obj.artifactId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Copies a file onto the instance.
 *
 * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileCopy
 */
export interface OsConfigGuestPolicySpecRecipesInstallStepsFileCopy {
  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileCopy#artifactId
   */
  readonly artifactId?: string;

  /**
   * Required. The absolute path on the instance to put the file.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileCopy#destination
   */
  readonly destination?: string;

  /**
   * Whether to allow this step to overwrite existing files. If this is false and the file already exists the file is not overwritten and the step is considered a success. Defaults to false.
   *
   * @default false.
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileCopy#overwrite
   */
  readonly overwrite?: boolean;

  /**
   * Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileCopy#permissions
   */
  readonly permissions?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesInstallStepsFileCopy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesInstallStepsFileCopy(obj: OsConfigGuestPolicySpecRecipesInstallStepsFileCopy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactId': obj.artifactId,
    'destination': obj.destination,
    'overwrite': obj.overwrite,
    'permissions': obj.permissions,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Executes an artifact or local file.
 *
 * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileExec
 */
export interface OsConfigGuestPolicySpecRecipesInstallStepsFileExec {
  /**
   * Defaults to [0]. A list of possible return values that the program can return to indicate a success.
   *
   * @default 0]. A list of possible return values that the program can return to indicate a success.
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileExec#allowedExitCodes
   */
  readonly allowedExitCodes?: number[];

  /**
   * Arguments to be passed to the provided executable.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileExec#args
   */
  readonly args?: string[];

  /**
   * The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileExec#artifactId
   */
  readonly artifactId?: string;

  /**
   * The absolute path of the file on the local filesystem.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsFileExec#localPath
   */
  readonly localPath?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesInstallStepsFileExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesInstallStepsFileExec(obj: OsConfigGuestPolicySpecRecipesInstallStepsFileExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedExitCodes': obj.allowedExitCodes?.map(y => y),
    'args': obj.args?.map(y => y),
    'artifactId': obj.artifactId,
    'localPath': obj.localPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Installs an MSI file.
 *
 * @schema OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation
 */
export interface OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation {
  /**
   * Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation#allowedExitCodes
   */
  readonly allowedExitCodes?: number[];

  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation#artifactId
   */
  readonly artifactId?: string;

  /**
   * The flags to use when installing the MSI defaults to ["/i"] (i.e. the install flag).
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation#flags
   */
  readonly flags?: string[];

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation(obj: OsConfigGuestPolicySpecRecipesInstallStepsMsiInstallation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedExitCodes': obj.allowedExitCodes?.map(y => y),
    'artifactId': obj.artifactId,
    'flags': obj.flags?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Installs an rpm file via the rpm utility.
 *
 * @schema OsConfigGuestPolicySpecRecipesInstallStepsRpmInstallation
 */
export interface OsConfigGuestPolicySpecRecipesInstallStepsRpmInstallation {
  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsRpmInstallation#artifactId
   */
  readonly artifactId?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesInstallStepsRpmInstallation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesInstallStepsRpmInstallation(obj: OsConfigGuestPolicySpecRecipesInstallStepsRpmInstallation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactId': obj.artifactId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Runs commands in a shell.
 *
 * @schema OsConfigGuestPolicySpecRecipesInstallStepsScriptRun
 */
export interface OsConfigGuestPolicySpecRecipesInstallStepsScriptRun {
  /**
   * Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsScriptRun#allowedExitCodes
   */
  readonly allowedExitCodes?: number[];

  /**
   * The script interpreter to use to run the script. If no interpreter is specified the script is executed directly, which likely only succeed for scripts with [shebang lines](https://en.wikipedia.org/wiki/Shebang_(Unix)). Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsScriptRun#interpreter
   */
  readonly interpreter?: string;

  /**
   * Required. The shell script to be executed.
   *
   * @schema OsConfigGuestPolicySpecRecipesInstallStepsScriptRun#script
   */
  readonly script?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesInstallStepsScriptRun' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesInstallStepsScriptRun(obj: OsConfigGuestPolicySpecRecipesInstallStepsScriptRun | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedExitCodes': obj.allowedExitCodes?.map(y => y),
    'interpreter': obj.interpreter,
    'script': obj.script,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Extracts an archive into the specified directory.
 *
 * @schema OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction
 */
export interface OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction {
  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction#artifactId
   */
  readonly artifactId?: string;

  /**
   * Directory to extract archive to. Defaults to `/` on Linux or `C:` on Windows.
   *
   * @default on Linux or `C:` on Windows.
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction#destination
   */
  readonly destination?: string;

  /**
   * Required. The type of the archive to extract. Possible values: TYPE_UNSPECIFIED, VALIDATION, DESIRED_STATE_CHECK, DESIRED_STATE_ENFORCEMENT, DESIRED_STATE_CHECK_POST_ENFORCEMENT
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction(obj: OsConfigGuestPolicySpecRecipesUpdateStepsArchiveExtraction | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactId': obj.artifactId,
    'destination': obj.destination,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Installs a deb file via dpkg.
 *
 * @schema OsConfigGuestPolicySpecRecipesUpdateStepsDpkgInstallation
 */
export interface OsConfigGuestPolicySpecRecipesUpdateStepsDpkgInstallation {
  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsDpkgInstallation#artifactId
   */
  readonly artifactId?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesUpdateStepsDpkgInstallation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesUpdateStepsDpkgInstallation(obj: OsConfigGuestPolicySpecRecipesUpdateStepsDpkgInstallation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactId': obj.artifactId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Copies a file onto the instance.
 *
 * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy
 */
export interface OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy {
  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy#artifactId
   */
  readonly artifactId?: string;

  /**
   * Required. The absolute path on the instance to put the file.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy#destination
   */
  readonly destination?: string;

  /**
   * Whether to allow this step to overwrite existing files. If this is false and the file already exists the file is not overwritten and the step is considered a success. Defaults to false.
   *
   * @default false.
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy#overwrite
   */
  readonly overwrite?: boolean;

  /**
   * Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy#permissions
   */
  readonly permissions?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy(obj: OsConfigGuestPolicySpecRecipesUpdateStepsFileCopy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactId': obj.artifactId,
    'destination': obj.destination,
    'overwrite': obj.overwrite,
    'permissions': obj.permissions,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Executes an artifact or local file.
 *
 * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileExec
 */
export interface OsConfigGuestPolicySpecRecipesUpdateStepsFileExec {
  /**
   * Defaults to [0]. A list of possible return values that the program can return to indicate a success.
   *
   * @default 0]. A list of possible return values that the program can return to indicate a success.
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileExec#allowedExitCodes
   */
  readonly allowedExitCodes?: number[];

  /**
   * Arguments to be passed to the provided executable.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileExec#args
   */
  readonly args?: string[];

  /**
   * The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileExec#artifactId
   */
  readonly artifactId?: string;

  /**
   * The absolute path of the file on the local filesystem.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsFileExec#localPath
   */
  readonly localPath?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesUpdateStepsFileExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesUpdateStepsFileExec(obj: OsConfigGuestPolicySpecRecipesUpdateStepsFileExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedExitCodes': obj.allowedExitCodes?.map(y => y),
    'args': obj.args?.map(y => y),
    'artifactId': obj.artifactId,
    'localPath': obj.localPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Installs an MSI file.
 *
 * @schema OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation
 */
export interface OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation {
  /**
   * Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation#allowedExitCodes
   */
  readonly allowedExitCodes?: number[];

  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation#artifactId
   */
  readonly artifactId?: string;

  /**
   * The flags to use when installing the MSI defaults to ["/i"] (i.e. the install flag).
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation#flags
   */
  readonly flags?: string[];

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation(obj: OsConfigGuestPolicySpecRecipesUpdateStepsMsiInstallation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedExitCodes': obj.allowedExitCodes?.map(y => y),
    'artifactId': obj.artifactId,
    'flags': obj.flags?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Installs an rpm file via the rpm utility.
 *
 * @schema OsConfigGuestPolicySpecRecipesUpdateStepsRpmInstallation
 */
export interface OsConfigGuestPolicySpecRecipesUpdateStepsRpmInstallation {
  /**
   * Required. The id of the relevant artifact in the recipe.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsRpmInstallation#artifactId
   */
  readonly artifactId?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesUpdateStepsRpmInstallation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesUpdateStepsRpmInstallation(obj: OsConfigGuestPolicySpecRecipesUpdateStepsRpmInstallation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'artifactId': obj.artifactId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Runs commands in a shell.
 *
 * @schema OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun
 */
export interface OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun {
  /**
   * Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun#allowedExitCodes
   */
  readonly allowedExitCodes?: number[];

  /**
   * The script interpreter to use to run the script. If no interpreter is specified the script is executed directly, which likely only succeed for scripts with [shebang lines](https://en.wikipedia.org/wiki/Shebang_(Unix)). Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun#interpreter
   */
  readonly interpreter?: string;

  /**
   * Required. The shell script to be executed.
   *
   * @schema OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun#script
   */
  readonly script?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun(obj: OsConfigGuestPolicySpecRecipesUpdateStepsScriptRun | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedExitCodes': obj.allowedExitCodes?.map(y => y),
    'interpreter': obj.interpreter,
    'script': obj.script,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef
 */
export interface OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef {
  /**
   * Bucket of the Google Cloud Storage object. Given an example URL: `https://storage.googleapis.com/my-bucket/foo/bar#1234567` this value would be `my-bucket`.
   *
   * Allowed value: The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef(obj: OsConfigGuestPolicySpecRecipesArtifactsGcsBucketRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema OSConfigOSPolicyAssignment
 */
export class OsConfigOsPolicyAssignment extends ApiObject {
  /**
   * Returns the apiVersion and kind for "OSConfigOSPolicyAssignment"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'osconfig.cnrm.cloud.google.com/v1beta1',
    kind: 'OSConfigOSPolicyAssignment',
  }

  /**
   * Renders a Kubernetes manifest for "OSConfigOSPolicyAssignment".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: OsConfigOsPolicyAssignmentProps): any {
    return {
      ...OsConfigOsPolicyAssignment.GVK,
      ...toJson_OsConfigOsPolicyAssignmentProps(props),
    };
  }

  /**
   * Defines a "OSConfigOSPolicyAssignment" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: OsConfigOsPolicyAssignmentProps) {
    super(scope, id, {
      ...OsConfigOsPolicyAssignment.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...OsConfigOsPolicyAssignment.GVK,
      ...toJson_OsConfigOsPolicyAssignmentProps(resolved),
    };
  }
}

/**
 * @schema OSConfigOSPolicyAssignment
 */
export interface OsConfigOsPolicyAssignmentProps {
  /**
   * @schema OSConfigOSPolicyAssignment#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema OSConfigOSPolicyAssignment#spec
   */
  readonly spec: OsConfigOsPolicyAssignmentSpec;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentProps(obj: OsConfigOsPolicyAssignmentProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_OsConfigOsPolicyAssignmentSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigOsPolicyAssignmentSpec
 */
export interface OsConfigOsPolicyAssignmentSpec {
  /**
   * OS policy assignment description. Length of the description is limited to 1024 characters.
   *
   * @schema OsConfigOsPolicyAssignmentSpec#description
   */
  readonly description?: string;

  /**
   * Required. Filter to select VMs.
   *
   * @schema OsConfigOsPolicyAssignmentSpec#instanceFilter
   */
  readonly instanceFilter: OsConfigOsPolicyAssignmentSpecInstanceFilter;

  /**
   * Immutable. The location for the resource
   *
   * @schema OsConfigOsPolicyAssignmentSpec#location
   */
  readonly location: string;

  /**
   * Required. List of OS policies to be applied to the VMs.
   *
   * @schema OsConfigOsPolicyAssignmentSpec#osPolicies
   */
  readonly osPolicies: OsConfigOsPolicyAssignmentSpecOsPolicies[];

  /**
   * Immutable. The Project that this resource belongs to.
   *
   * @schema OsConfigOsPolicyAssignmentSpec#projectRef
   */
  readonly projectRef: OsConfigOsPolicyAssignmentSpecProjectRef;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema OsConfigOsPolicyAssignmentSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted.
   *
   * @schema OsConfigOsPolicyAssignmentSpec#rollout
   */
  readonly rollout: OsConfigOsPolicyAssignmentSpecRollout;

  /**
   * Set to true to skip awaiting rollout during resource creation and update.
   *
   * @schema OsConfigOsPolicyAssignmentSpec#skipAwaitRollout
   */
  readonly skipAwaitRollout?: boolean;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpec(obj: OsConfigOsPolicyAssignmentSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'description': obj.description,
    'instanceFilter': toJson_OsConfigOsPolicyAssignmentSpecInstanceFilter(obj.instanceFilter),
    'location': obj.location,
    'osPolicies': obj.osPolicies?.map(y => toJson_OsConfigOsPolicyAssignmentSpecOsPolicies(y)),
    'projectRef': toJson_OsConfigOsPolicyAssignmentSpecProjectRef(obj.projectRef),
    'resourceID': obj.resourceId,
    'rollout': toJson_OsConfigOsPolicyAssignmentSpecRollout(obj.rollout),
    'skipAwaitRollout': obj.skipAwaitRollout,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. Filter to select VMs.
 *
 * @schema OsConfigOsPolicyAssignmentSpecInstanceFilter
 */
export interface OsConfigOsPolicyAssignmentSpecInstanceFilter {
  /**
   * Target all VMs in the project. If true, no other criteria is permitted.
   *
   * @schema OsConfigOsPolicyAssignmentSpecInstanceFilter#all
   */
  readonly all?: boolean;

  /**
   * List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
   *
   * @schema OsConfigOsPolicyAssignmentSpecInstanceFilter#exclusionLabels
   */
  readonly exclusionLabels?: OsConfigOsPolicyAssignmentSpecInstanceFilterExclusionLabels[];

  /**
   * List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
   *
   * @schema OsConfigOsPolicyAssignmentSpecInstanceFilter#inclusionLabels
   */
  readonly inclusionLabels?: OsConfigOsPolicyAssignmentSpecInstanceFilterInclusionLabels[];

  /**
   * List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
   *
   * @schema OsConfigOsPolicyAssignmentSpecInstanceFilter#inventories
   */
  readonly inventories?: OsConfigOsPolicyAssignmentSpecInstanceFilterInventories[];

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecInstanceFilter' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecInstanceFilter(obj: OsConfigOsPolicyAssignmentSpecInstanceFilter | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'all': obj.all,
    'exclusionLabels': obj.exclusionLabels?.map(y => toJson_OsConfigOsPolicyAssignmentSpecInstanceFilterExclusionLabels(y)),
    'inclusionLabels': obj.inclusionLabels?.map(y => toJson_OsConfigOsPolicyAssignmentSpecInstanceFilterInclusionLabels(y)),
    'inventories': obj.inventories?.map(y => toJson_OsConfigOsPolicyAssignmentSpecInstanceFilterInventories(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigOsPolicyAssignmentSpecOsPolicies
 */
export interface OsConfigOsPolicyAssignmentSpecOsPolicies {
  /**
   * This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPolicies#allowNoResourceGroupMatch
   */
  readonly allowNoResourceGroupMatch?: boolean;

  /**
   * Policy description. Length of the description is limited to 1024 characters.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPolicies#description
   */
  readonly description?: string;

  /**
   * Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPolicies#id
   */
  readonly id: string;

  /**
   * Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPolicies#mode
   */
  readonly mode: string;

  /**
   * Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPolicies#resourceGroups
   */
  readonly resourceGroups: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroups[];

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPolicies(obj: OsConfigOsPolicyAssignmentSpecOsPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowNoResourceGroupMatch': obj.allowNoResourceGroupMatch,
    'description': obj.description,
    'id': obj.id,
    'mode': obj.mode,
    'resourceGroups': obj.resourceGroups?.map(y => toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroups(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. The Project that this resource belongs to.
 *
 * @schema OsConfigOsPolicyAssignmentSpecProjectRef
 */
export interface OsConfigOsPolicyAssignmentSpecProjectRef {
  /**
   * The project for the resource
   *
   * Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
   *
   * @schema OsConfigOsPolicyAssignmentSpecProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema OsConfigOsPolicyAssignmentSpecProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema OsConfigOsPolicyAssignmentSpecProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecProjectRef(obj: OsConfigOsPolicyAssignmentSpecProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted.
 *
 * @schema OsConfigOsPolicyAssignmentSpecRollout
 */
export interface OsConfigOsPolicyAssignmentSpecRollout {
  /**
   * Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
   *
   * @schema OsConfigOsPolicyAssignmentSpecRollout#disruptionBudget
   */
  readonly disruptionBudget: OsConfigOsPolicyAssignmentSpecRolloutDisruptionBudget;

  /**
   * Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruption_budget` at least until this duration of time has passed after configuration changes are applied.
   *
   * @schema OsConfigOsPolicyAssignmentSpecRollout#minWaitDuration
   */
  readonly minWaitDuration: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecRollout' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecRollout(obj: OsConfigOsPolicyAssignmentSpecRollout | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'disruptionBudget': toJson_OsConfigOsPolicyAssignmentSpecRolloutDisruptionBudget(obj.disruptionBudget),
    'minWaitDuration': obj.minWaitDuration,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigOsPolicyAssignmentSpecInstanceFilterExclusionLabels
 */
export interface OsConfigOsPolicyAssignmentSpecInstanceFilterExclusionLabels {
  /**
   * Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
   *
   * @schema OsConfigOsPolicyAssignmentSpecInstanceFilterExclusionLabels#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecInstanceFilterExclusionLabels' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecInstanceFilterExclusionLabels(obj: OsConfigOsPolicyAssignmentSpecInstanceFilterExclusionLabels | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigOsPolicyAssignmentSpecInstanceFilterInclusionLabels
 */
export interface OsConfigOsPolicyAssignmentSpecInstanceFilterInclusionLabels {
  /**
   * Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
   *
   * @schema OsConfigOsPolicyAssignmentSpecInstanceFilterInclusionLabels#labels
   */
  readonly labels?: { [key: string]: string };

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecInstanceFilterInclusionLabels' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecInstanceFilterInclusionLabels(obj: OsConfigOsPolicyAssignmentSpecInstanceFilterInclusionLabels | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigOsPolicyAssignmentSpecInstanceFilterInventories
 */
export interface OsConfigOsPolicyAssignmentSpecInstanceFilterInventories {
  /**
   * Required. The OS short name
   *
   * @schema OsConfigOsPolicyAssignmentSpecInstanceFilterInventories#osShortName
   */
  readonly osShortName: string;

  /**
   * The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.
   *
   * @schema OsConfigOsPolicyAssignmentSpecInstanceFilterInventories#osVersion
   */
  readonly osVersion?: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecInstanceFilterInventories' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecInstanceFilterInventories(obj: OsConfigOsPolicyAssignmentSpecInstanceFilterInventories | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'osShortName': obj.osShortName,
    'osVersion': obj.osVersion,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroups
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroups {
  /**
   * List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either `RHEL` or `CentOS` operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroups#inventoryFilters
   */
  readonly inventoryFilters?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsInventoryFilters[];

  /**
   * Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroups#resources
   */
  readonly resources: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources[];

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroups' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroups(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroups | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'inventoryFilters': obj.inventoryFilters?.map(y => toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsInventoryFilters(y)),
    'resources': obj.resources?.map(y => toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
 *
 * @schema OsConfigOsPolicyAssignmentSpecRolloutDisruptionBudget
 */
export interface OsConfigOsPolicyAssignmentSpecRolloutDisruptionBudget {
  /**
   * Specifies a fixed value.
   *
   * @schema OsConfigOsPolicyAssignmentSpecRolloutDisruptionBudget#fixed
   */
  readonly fixed?: number;

  /**
   * Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
   *
   * @schema OsConfigOsPolicyAssignmentSpecRolloutDisruptionBudget#percent
   */
  readonly percent?: number;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecRolloutDisruptionBudget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecRolloutDisruptionBudget(obj: OsConfigOsPolicyAssignmentSpecRolloutDisruptionBudget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fixed': obj.fixed,
    'percent': obj.percent,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsInventoryFilters
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsInventoryFilters {
  /**
   * Required. The OS short name
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsInventoryFilters#osShortName
   */
  readonly osShortName: string;

  /**
   * The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsInventoryFilters#osVersion
   */
  readonly osVersion?: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsInventoryFilters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsInventoryFilters(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsInventoryFilters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'osShortName': obj.osShortName,
    'osVersion': obj.osVersion,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources {
  /**
   * Exec resource
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources#exec
   */
  readonly exec?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExec;

  /**
   * File resource
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources#file
   */
  readonly file?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile;

  /**
   * Required. The id of the resource with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the OS policy.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources#id
   */
  readonly id: string;

  /**
   * Package resource
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources#pkg
   */
  readonly pkg?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg;

  /**
   * Package repository resource
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources#repository
   */
  readonly repository?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExec(obj.exec),
    'file': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile(obj.file),
    'id': obj.id,
    'pkg': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg(obj.pkg),
    'repository': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository(obj.repository),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Exec resource
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExec
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExec {
  /**
   * What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExec#enforce
   */
  readonly enforce?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce;

  /**
   * Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExec#validate
   */
  readonly validate: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExec(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enforce': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce(obj.enforce),
    'validate': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate(obj.validate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * File resource
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile {
  /**
   * A a file with this content. The size of the content is limited to 1024 characters.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile#content
   */
  readonly content?: string;

  /**
   * A remote or local source.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile#file
   */
  readonly file?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile;

  /**
   * Required. The absolute path of the file within the VM.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile#path
   */
  readonly path: string;

  /**
   * Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile#permissions
   */
  readonly permissions?: string;

  /**
   * Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile#state
   */
  readonly state: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'content': obj.content,
    'file': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile(obj.file),
    'path': obj.path,
    'permissions': obj.permissions,
    'state': obj.state,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Package resource
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg {
  /**
   * A package managed by Apt.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg#apt
   */
  readonly apt?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgApt;

  /**
   * A deb package file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg#deb
   */
  readonly deb?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDeb;

  /**
   * Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg#desiredState
   */
  readonly desiredState: string;

  /**
   * A package managed by GooGet.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg#googet
   */
  readonly googet?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgGooget;

  /**
   * An MSI package.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg#msi
   */
  readonly msi?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsi;

  /**
   * An rpm package file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg#rpm
   */
  readonly rpm?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpm;

  /**
   * A package managed by YUM.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg#yum
   */
  readonly yum?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgYum;

  /**
   * A package managed by Zypper.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg#zypper
   */
  readonly zypper?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgZypper;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkg | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apt': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgApt(obj.apt),
    'deb': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDeb(obj.deb),
    'desiredState': obj.desiredState,
    'googet': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgGooget(obj.googet),
    'msi': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsi(obj.msi),
    'rpm': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpm(obj.rpm),
    'yum': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgYum(obj.yum),
    'zypper': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgZypper(obj.zypper),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Package repository resource
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository {
  /**
   * An Apt Repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository#apt
   */
  readonly apt?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt;

  /**
   * A Goo Repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository#goo
   */
  readonly goo?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryGoo;

  /**
   * A Yum Repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository#yum
   */
  readonly yum?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum;

  /**
   * A Zypper Repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository#zypper
   */
  readonly zypper?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepository | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apt': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt(obj.apt),
    'goo': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryGoo(obj.goo),
    'yum': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum(obj.yum),
    'zypper': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper(obj.zypper),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce {
  /**
   * Optional arguments to pass to the source during execution.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce#args
   */
  readonly args?: string[];

  /**
   * A remote or local file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce#file
   */
  readonly file?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile;

  /**
   * Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce#interpreter
   */
  readonly interpreter: string;

  /**
   * Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce#outputFilePath
   */
  readonly outputFilePath?: string;

  /**
   * An inline script. The size of the script is limited to 1024 characters.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce#script
   */
  readonly script?: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforce | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'file': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile(obj.file),
    'interpreter': obj.interpreter,
    'outputFilePath': obj.outputFilePath,
    'script': obj.script,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate {
  /**
   * Optional arguments to pass to the source during execution.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate#args
   */
  readonly args?: string[];

  /**
   * A remote or local file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate#file
   */
  readonly file?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile;

  /**
   * Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate#interpreter
   */
  readonly interpreter: string;

  /**
   * Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate#outputFilePath
   */
  readonly outputFilePath?: string;

  /**
   * An inline script. The size of the script is limited to 1024 characters.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate#script
   */
  readonly script?: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'file': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile(obj.file),
    'interpreter': obj.interpreter,
    'outputFilePath': obj.outputFilePath,
    'script': obj.script,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A remote or local source.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile {
  /**
   * Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   *
   * @default false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile#allowInsecure
   */
  readonly allowInsecure?: boolean;

  /**
   * A Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile#gcs
   */
  readonly gcs?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs;

  /**
   * A local path within the VM to use.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile#localPath
   */
  readonly localPath?: string;

  /**
   * A generic remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile#remote
   */
  readonly remote?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileRemote;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowInsecure': obj.allowInsecure,
    'gcs': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs(obj.gcs),
    'localPath': obj.localPath,
    'remote': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileRemote(obj.remote),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A package managed by Apt.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgApt
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgApt {
  /**
   * Required. Package name.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgApt#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgApt' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgApt(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgApt | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A deb package file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDeb
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDeb {
  /**
   * Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update && apt-get -y install package.deb`
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDeb#pullDeps
   */
  readonly pullDeps?: boolean;

  /**
   * Required. A deb package.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDeb#source
   */
  readonly source: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDeb' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDeb(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDeb | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'pullDeps': obj.pullDeps,
    'source': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource(obj.source),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A package managed by GooGet.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgGooget
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgGooget {
  /**
   * Required. Package name.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgGooget#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgGooget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgGooget(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgGooget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An MSI package.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsi
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsi {
  /**
   * Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsi#properties
   */
  readonly properties?: string[];

  /**
   * Required. The MSI package.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsi#source
   */
  readonly source: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsi(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'properties': obj.properties?.map(y => y),
    'source': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource(obj.source),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An rpm package file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpm
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpm {
  /**
   * Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpm#pullDeps
   */
  readonly pullDeps?: boolean;

  /**
   * Required. An rpm package.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpm#source
   */
  readonly source: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpm(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'pullDeps': obj.pullDeps,
    'source': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource(obj.source),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A package managed by YUM.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgYum
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgYum {
  /**
   * Required. Package name.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgYum#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgYum' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgYum(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgYum | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A package managed by Zypper.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgZypper
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgZypper {
  /**
   * Required. Package name.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgZypper#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgZypper' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgZypper(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgZypper | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An Apt Repository.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt {
  /**
   * Required. Type of archive files in this repository. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt#archiveType
   */
  readonly archiveType: string;

  /**
   * Required. List of components for this repository. Must contain at least one item.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt#components
   */
  readonly components: string[];

  /**
   * Required. Distribution of this repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt#distribution
   */
  readonly distribution: string;

  /**
   * URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt#gpgKey
   */
  readonly gpgKey?: string;

  /**
   * Required. URI for this repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt#uri
   */
  readonly uri: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryApt | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'archiveType': obj.archiveType,
    'components': obj.components?.map(y => y),
    'distribution': obj.distribution,
    'gpgKey': obj.gpgKey,
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Goo Repository.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryGoo
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryGoo {
  /**
   * Required. The name of the repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryGoo#name
   */
  readonly name: string;

  /**
   * Required. The url of the repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryGoo#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryGoo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryGoo(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryGoo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Yum Repository.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum {
  /**
   * Required. The location of the repository directory.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum#baseUrl
   */
  readonly baseUrl: string;

  /**
   * The display name of the repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum#displayName
   */
  readonly displayName?: string;

  /**
   * URIs of GPG keys.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum#gpgKeys
   */
  readonly gpgKeys?: string[];

  /**
   * Required. A one word, unique name for this repository. This is the `repo id` in the yum config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for resource conflicts.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum#id
   */
  readonly id: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryYum | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'baseUrl': obj.baseUrl,
    'displayName': obj.displayName,
    'gpgKeys': obj.gpgKeys?.map(y => y),
    'id': obj.id,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Zypper Repository.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper {
  /**
   * Required. The location of the repository directory.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper#baseUrl
   */
  readonly baseUrl: string;

  /**
   * The display name of the repository.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper#displayName
   */
  readonly displayName?: string;

  /**
   * URIs of GPG keys.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper#gpgKeys
   */
  readonly gpgKeys?: string[];

  /**
   * Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper#id
   */
  readonly id: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesRepositoryZypper | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'baseUrl': obj.baseUrl,
    'displayName': obj.displayName,
    'gpgKeys': obj.gpgKeys?.map(y => y),
    'id': obj.id,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A remote or local file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile {
  /**
   * Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   *
   * @default false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile#allowInsecure
   */
  readonly allowInsecure?: boolean;

  /**
   * A Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile#gcs
   */
  readonly gcs?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs;

  /**
   * A local path within the VM to use.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile#localPath
   */
  readonly localPath?: string;

  /**
   * A generic remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile#remote
   */
  readonly remote?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileRemote;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowInsecure': obj.allowInsecure,
    'gcs': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs(obj.gcs),
    'localPath': obj.localPath,
    'remote': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileRemote(obj.remote),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A remote or local file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile {
  /**
   * Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   *
   * @default false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile#allowInsecure
   */
  readonly allowInsecure?: boolean;

  /**
   * A Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile#gcs
   */
  readonly gcs?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs;

  /**
   * A local path within the VM to use.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile#localPath
   */
  readonly localPath?: string;

  /**
   * A generic remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile#remote
   */
  readonly remote?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileRemote;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowInsecure': obj.allowInsecure,
    'gcs': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs(obj.gcs),
    'localPath': obj.localPath,
    'remote': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileRemote(obj.remote),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Cloud Storage object.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs {
  /**
   * Required. Bucket of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs#bucket
   */
  readonly bucket: string;

  /**
   * Generation number of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs#generation
   */
  readonly generation?: number;

  /**
   * Required. Name of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs#object
   */
  readonly object: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'generation': obj.generation,
    'object': obj.object,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A generic remote file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileRemote
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileRemote {
  /**
   * SHA256 checksum of the remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileRemote#sha256Checksum
   */
  readonly sha256Checksum?: string;

  /**
   * Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileRemote#uri
   */
  readonly uri: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileRemote' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileRemote(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesFileFileRemote | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'sha256Checksum': obj.sha256Checksum,
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. A deb package.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource {
  /**
   * Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   *
   * @default false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource#allowInsecure
   */
  readonly allowInsecure?: boolean;

  /**
   * A Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource#gcs
   */
  readonly gcs?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs;

  /**
   * A local path within the VM to use.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource#localPath
   */
  readonly localPath?: string;

  /**
   * A generic remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource#remote
   */
  readonly remote?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceRemote;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowInsecure': obj.allowInsecure,
    'gcs': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs(obj.gcs),
    'localPath': obj.localPath,
    'remote': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceRemote(obj.remote),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. The MSI package.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource {
  /**
   * Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   *
   * @default false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource#allowInsecure
   */
  readonly allowInsecure?: boolean;

  /**
   * A Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource#gcs
   */
  readonly gcs?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs;

  /**
   * A local path within the VM to use.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource#localPath
   */
  readonly localPath?: string;

  /**
   * A generic remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource#remote
   */
  readonly remote?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceRemote;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowInsecure': obj.allowInsecure,
    'gcs': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs(obj.gcs),
    'localPath': obj.localPath,
    'remote': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceRemote(obj.remote),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. An rpm package.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource {
  /**
   * Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   *
   * @default false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource#allowInsecure
   */
  readonly allowInsecure?: boolean;

  /**
   * A Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource#gcs
   */
  readonly gcs?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs;

  /**
   * A local path within the VM to use.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource#localPath
   */
  readonly localPath?: string;

  /**
   * A generic remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource#remote
   */
  readonly remote?: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceRemote;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowInsecure': obj.allowInsecure,
    'gcs': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs(obj.gcs),
    'localPath': obj.localPath,
    'remote': toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceRemote(obj.remote),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Cloud Storage object.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs {
  /**
   * Required. Bucket of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs#bucket
   */
  readonly bucket: string;

  /**
   * Generation number of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs#generation
   */
  readonly generation?: number;

  /**
   * Required. Name of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs#object
   */
  readonly object: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'generation': obj.generation,
    'object': obj.object,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A generic remote file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileRemote
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileRemote {
  /**
   * SHA256 checksum of the remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileRemote#sha256Checksum
   */
  readonly sha256Checksum?: string;

  /**
   * Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileRemote#uri
   */
  readonly uri: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileRemote' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileRemote(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecEnforceFileRemote | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'sha256Checksum': obj.sha256Checksum,
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Cloud Storage object.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs {
  /**
   * Required. Bucket of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs#bucket
   */
  readonly bucket: string;

  /**
   * Generation number of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs#generation
   */
  readonly generation?: number;

  /**
   * Required. Name of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs#object
   */
  readonly object: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'generation': obj.generation,
    'object': obj.object,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A generic remote file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileRemote
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileRemote {
  /**
   * SHA256 checksum of the remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileRemote#sha256Checksum
   */
  readonly sha256Checksum?: string;

  /**
   * Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileRemote#uri
   */
  readonly uri: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileRemote' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileRemote(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesExecValidateFileRemote | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'sha256Checksum': obj.sha256Checksum,
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Cloud Storage object.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs {
  /**
   * Required. Bucket of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs#bucket
   */
  readonly bucket: string;

  /**
   * Generation number of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs#generation
   */
  readonly generation?: number;

  /**
   * Required. Name of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs#object
   */
  readonly object: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'generation': obj.generation,
    'object': obj.object,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A generic remote file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceRemote
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceRemote {
  /**
   * SHA256 checksum of the remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceRemote#sha256Checksum
   */
  readonly sha256Checksum?: string;

  /**
   * Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceRemote#uri
   */
  readonly uri: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceRemote' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceRemote(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgDebSourceRemote | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'sha256Checksum': obj.sha256Checksum,
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Cloud Storage object.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs {
  /**
   * Required. Bucket of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs#bucket
   */
  readonly bucket: string;

  /**
   * Generation number of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs#generation
   */
  readonly generation?: number;

  /**
   * Required. Name of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs#object
   */
  readonly object: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'generation': obj.generation,
    'object': obj.object,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A generic remote file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceRemote
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceRemote {
  /**
   * SHA256 checksum of the remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceRemote#sha256Checksum
   */
  readonly sha256Checksum?: string;

  /**
   * Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceRemote#uri
   */
  readonly uri: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceRemote' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceRemote(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgMsiSourceRemote | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'sha256Checksum': obj.sha256Checksum,
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A Cloud Storage object.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs {
  /**
   * Required. Bucket of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs#bucket
   */
  readonly bucket: string;

  /**
   * Generation number of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs#generation
   */
  readonly generation?: number;

  /**
   * Required. Name of the Cloud Storage object.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs#object
   */
  readonly object: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceGcs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'bucket': obj.bucket,
    'generation': obj.generation,
    'object': obj.object,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A generic remote file.
 *
 * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceRemote
 */
export interface OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceRemote {
  /**
   * SHA256 checksum of the remote file.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceRemote#sha256Checksum
   */
  readonly sha256Checksum?: string;

  /**
   * Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.
   *
   * @schema OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceRemote#uri
   */
  readonly uri: string;

}

/**
 * Converts an object of type 'OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceRemote' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceRemote(obj: OsConfigOsPolicyAssignmentSpecOsPoliciesResourceGroupsResourcesPkgRpmSourceRemote | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'sha256Checksum': obj.sha256Checksum,
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

