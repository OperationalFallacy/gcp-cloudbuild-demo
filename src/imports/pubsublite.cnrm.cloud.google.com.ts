// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema PubSubLiteReservation
 */
export class PubSubLiteReservation extends ApiObject {
  /**
   * Returns the apiVersion and kind for "PubSubLiteReservation"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'pubsublite.cnrm.cloud.google.com/v1beta1',
    kind: 'PubSubLiteReservation',
  }

  /**
   * Renders a Kubernetes manifest for "PubSubLiteReservation".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: PubSubLiteReservationProps): any {
    return {
      ...PubSubLiteReservation.GVK,
      ...toJson_PubSubLiteReservationProps(props),
    };
  }

  /**
   * Defines a "PubSubLiteReservation" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: PubSubLiteReservationProps) {
    super(scope, id, {
      ...PubSubLiteReservation.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...PubSubLiteReservation.GVK,
      ...toJson_PubSubLiteReservationProps(resolved),
    };
  }
}

/**
 * @schema PubSubLiteReservation
 */
export interface PubSubLiteReservationProps {
  /**
   * @schema PubSubLiteReservation#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema PubSubLiteReservation#spec
   */
  readonly spec: PubSubLiteReservationSpec;

}

/**
 * Converts an object of type 'PubSubLiteReservationProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_PubSubLiteReservationProps(obj: PubSubLiteReservationProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_PubSubLiteReservationSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema PubSubLiteReservationSpec
 */
export interface PubSubLiteReservationSpec {
  /**
   * The project that this resource belongs to.
   *
   * @schema PubSubLiteReservationSpec#projectRef
   */
  readonly projectRef: PubSubLiteReservationSpecProjectRef;

  /**
   * The region of the pubsub lite reservation.
   *
   * @schema PubSubLiteReservationSpec#region
   */
  readonly region: string;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema PubSubLiteReservationSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * The reserved throughput capacity. Every unit of throughput capacity is
   * equivalent to 1 MiB/s of published messages or 2 MiB/s of subscribed
   * messages.
   *
   * @schema PubSubLiteReservationSpec#throughputCapacity
   */
  readonly throughputCapacity: number;

}

/**
 * Converts an object of type 'PubSubLiteReservationSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_PubSubLiteReservationSpec(obj: PubSubLiteReservationSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'projectRef': toJson_PubSubLiteReservationSpecProjectRef(obj.projectRef),
    'region': obj.region,
    'resourceID': obj.resourceId,
    'throughputCapacity': obj.throughputCapacity,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The project that this resource belongs to.
 *
 * @schema PubSubLiteReservationSpecProjectRef
 */
export interface PubSubLiteReservationSpecProjectRef {
  /**
   * Allowed value: The `name` field of a `Project` resource.
   *
   * @schema PubSubLiteReservationSpecProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema PubSubLiteReservationSpecProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema PubSubLiteReservationSpecProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'PubSubLiteReservationSpecProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_PubSubLiteReservationSpecProjectRef(obj: PubSubLiteReservationSpecProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

