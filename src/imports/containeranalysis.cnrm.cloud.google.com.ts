// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema ContainerAnalysisNote
 */
export class ContainerAnalysisNote extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ContainerAnalysisNote"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'containeranalysis.cnrm.cloud.google.com/v1beta1',
    kind: 'ContainerAnalysisNote',
  }

  /**
   * Renders a Kubernetes manifest for "ContainerAnalysisNote".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ContainerAnalysisNoteProps = {}): any {
    return {
      ...ContainerAnalysisNote.GVK,
      ...toJson_ContainerAnalysisNoteProps(props),
    };
  }

  /**
   * Defines a "ContainerAnalysisNote" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ContainerAnalysisNoteProps = {}) {
    super(scope, id, {
      ...ContainerAnalysisNote.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...ContainerAnalysisNote.GVK,
      ...toJson_ContainerAnalysisNoteProps(resolved),
    };
  }
}

/**
 * @schema ContainerAnalysisNote
 */
export interface ContainerAnalysisNoteProps {
  /**
   * @schema ContainerAnalysisNote#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema ContainerAnalysisNote#spec
   */
  readonly spec?: ContainerAnalysisNoteSpec;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteProps(obj: ContainerAnalysisNoteProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_ContainerAnalysisNoteSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ContainerAnalysisNoteSpec
 */
export interface ContainerAnalysisNoteSpec {
  /**
   * A note describing an attestation role.
   *
   * @schema ContainerAnalysisNoteSpec#attestation
   */
  readonly attestation?: ContainerAnalysisNoteSpecAttestation;

  /**
   * A note describing build provenance for a verifiable build.
   *
   * @schema ContainerAnalysisNoteSpec#build
   */
  readonly build?: ContainerAnalysisNoteSpecBuild;

  /**
   * A note describing something that can be deployed.
   *
   * @schema ContainerAnalysisNoteSpec#deployment
   */
  readonly deployment?: ContainerAnalysisNoteSpecDeployment;

  /**
   * A note describing the initial analysis of a resource.
   *
   * @schema ContainerAnalysisNoteSpec#discovery
   */
  readonly discovery?: ContainerAnalysisNoteSpecDiscovery;

  /**
   * Time of expiration for this note. Empty if note does not expire.
   *
   * @schema ContainerAnalysisNoteSpec#expirationTime
   */
  readonly expirationTime?: Date;

  /**
   * A note describing a base image.
   *
   * @schema ContainerAnalysisNoteSpec#image
   */
  readonly image?: ContainerAnalysisNoteSpecImage;

  /**
   * A detailed description of this note.
   *
   * @schema ContainerAnalysisNoteSpec#longDescription
   */
  readonly longDescription?: string;

  /**
   * Required for non-Windows OS. The package this Upgrade is for.
   *
   * @schema ContainerAnalysisNoteSpec#package
   */
  readonly package?: ContainerAnalysisNoteSpecPackage;

  /**
   * @schema ContainerAnalysisNoteSpec#relatedNoteNames
   */
  readonly relatedNoteNames?: ContainerAnalysisNoteSpecRelatedNoteNames[];

  /**
   * URLs associated with this note.
   *
   * @schema ContainerAnalysisNoteSpec#relatedUrl
   */
  readonly relatedUrl?: ContainerAnalysisNoteSpecRelatedUrl[];

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema ContainerAnalysisNoteSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * A one sentence description of this note.
   *
   * @schema ContainerAnalysisNoteSpec#shortDescription
   */
  readonly shortDescription?: string;

  /**
   * A note describing a package vulnerability.
   *
   * @schema ContainerAnalysisNoteSpec#vulnerability
   */
  readonly vulnerability?: ContainerAnalysisNoteSpecVulnerability;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpec(obj: ContainerAnalysisNoteSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'attestation': toJson_ContainerAnalysisNoteSpecAttestation(obj.attestation),
    'build': toJson_ContainerAnalysisNoteSpecBuild(obj.build),
    'deployment': toJson_ContainerAnalysisNoteSpecDeployment(obj.deployment),
    'discovery': toJson_ContainerAnalysisNoteSpecDiscovery(obj.discovery),
    'expirationTime': obj.expirationTime?.toISOString(),
    'image': toJson_ContainerAnalysisNoteSpecImage(obj.image),
    'longDescription': obj.longDescription,
    'package': toJson_ContainerAnalysisNoteSpecPackage(obj.package),
    'relatedNoteNames': obj.relatedNoteNames?.map(y => toJson_ContainerAnalysisNoteSpecRelatedNoteNames(y)),
    'relatedUrl': obj.relatedUrl?.map(y => toJson_ContainerAnalysisNoteSpecRelatedUrl(y)),
    'resourceID': obj.resourceId,
    'shortDescription': obj.shortDescription,
    'vulnerability': toJson_ContainerAnalysisNoteSpecVulnerability(obj.vulnerability),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A note describing an attestation role.
 *
 * @schema ContainerAnalysisNoteSpecAttestation
 */
export interface ContainerAnalysisNoteSpecAttestation {
  /**
   * Hint hints at the purpose of the attestation authority.
   *
   * @schema ContainerAnalysisNoteSpecAttestation#hint
   */
  readonly hint?: ContainerAnalysisNoteSpecAttestationHint;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecAttestation' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecAttestation(obj: ContainerAnalysisNoteSpecAttestation | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'hint': toJson_ContainerAnalysisNoteSpecAttestationHint(obj.hint),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A note describing build provenance for a verifiable build.
 *
 * @schema ContainerAnalysisNoteSpecBuild
 */
export interface ContainerAnalysisNoteSpecBuild {
  /**
   * Required. Immutable. Version of the builder which produced this build.
   *
   * @schema ContainerAnalysisNoteSpecBuild#builderVersion
   */
  readonly builderVersion: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecBuild' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecBuild(obj: ContainerAnalysisNoteSpecBuild | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'builderVersion': obj.builderVersion,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A note describing something that can be deployed.
 *
 * @schema ContainerAnalysisNoteSpecDeployment
 */
export interface ContainerAnalysisNoteSpecDeployment {
  /**
   * Required. Resource URI for the artifact being deployed.
   *
   * @schema ContainerAnalysisNoteSpecDeployment#resourceUri
   */
  readonly resourceUri: string[];

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecDeployment' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecDeployment(obj: ContainerAnalysisNoteSpecDeployment | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceUri': obj.resourceUri?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A note describing the initial analysis of a resource.
 *
 * @schema ContainerAnalysisNoteSpecDiscovery
 */
export interface ContainerAnalysisNoteSpecDiscovery {
  /**
   * The kind of analysis that is handled by this discovery. Possible values: NOTE_KIND_UNSPECIFIED, VULNERABILITY, BUILD, IMAGE, PACKAGE, DEPLOYMENT, DISCOVERY, ATTESTATION, UPGRADE
   *
   * @schema ContainerAnalysisNoteSpecDiscovery#analysisKind
   */
  readonly analysisKind: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecDiscovery' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecDiscovery(obj: ContainerAnalysisNoteSpecDiscovery | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'analysisKind': obj.analysisKind,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A note describing a base image.
 *
 * @schema ContainerAnalysisNoteSpecImage
 */
export interface ContainerAnalysisNoteSpecImage {
  /**
   * Required. Immutable. The fingerprint of the base image.
   *
   * @schema ContainerAnalysisNoteSpecImage#fingerprint
   */
  readonly fingerprint: ContainerAnalysisNoteSpecImageFingerprint;

  /**
   * Required. Immutable. The resource_url for the resource representing the basis of associated occurrence images.
   *
   * @schema ContainerAnalysisNoteSpecImage#resourceUrl
   */
  readonly resourceUrl: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecImage' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecImage(obj: ContainerAnalysisNoteSpecImage | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fingerprint': toJson_ContainerAnalysisNoteSpecImageFingerprint(obj.fingerprint),
    'resourceUrl': obj.resourceUrl,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required for non-Windows OS. The package this Upgrade is for.
 *
 * @schema ContainerAnalysisNoteSpecPackage
 */
export interface ContainerAnalysisNoteSpecPackage {
  /**
   * The various channels by which a package is distributed.
   *
   * @schema ContainerAnalysisNoteSpecPackage#distribution
   */
  readonly distribution?: ContainerAnalysisNoteSpecPackageDistribution[];

  /**
   * The name of the package.
   *
   * @schema ContainerAnalysisNoteSpecPackage#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecPackage' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecPackage(obj: ContainerAnalysisNoteSpecPackage | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'distribution': obj.distribution?.map(y => toJson_ContainerAnalysisNoteSpecPackageDistribution(y)),
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ContainerAnalysisNoteSpecRelatedNoteNames
 */
export interface ContainerAnalysisNoteSpecRelatedNoteNames {
  /**
   * Allowed value: The Google Cloud resource name of a `ContainerAnalysisNote` resource (format: `projects/{{project}}/notes/{{name}}`).
   *
   * @schema ContainerAnalysisNoteSpecRelatedNoteNames#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ContainerAnalysisNoteSpecRelatedNoteNames#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema ContainerAnalysisNoteSpecRelatedNoteNames#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecRelatedNoteNames' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecRelatedNoteNames(obj: ContainerAnalysisNoteSpecRelatedNoteNames | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ContainerAnalysisNoteSpecRelatedUrl
 */
export interface ContainerAnalysisNoteSpecRelatedUrl {
  /**
   * Label to describe usage of the URL
   *
   * @schema ContainerAnalysisNoteSpecRelatedUrl#label
   */
  readonly label?: string;

  /**
   * Specific URL to associate with the note
   *
   * @schema ContainerAnalysisNoteSpecRelatedUrl#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecRelatedUrl' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecRelatedUrl(obj: ContainerAnalysisNoteSpecRelatedUrl | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'label': obj.label,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A note describing a package vulnerability.
 *
 * @schema ContainerAnalysisNoteSpecVulnerability
 */
export interface ContainerAnalysisNoteSpecVulnerability {
  /**
   * The CVSS score of this vulnerability. CVSS score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.
   *
   * @schema ContainerAnalysisNoteSpecVulnerability#cvssScore
   */
  readonly cvssScore?: number;

  /**
   * The full description of the CVSSv3 for this vulnerability.
   *
   * @schema ContainerAnalysisNoteSpecVulnerability#cvssV3
   */
  readonly cvssV3?: ContainerAnalysisNoteSpecVulnerabilityCvssV3;

  /**
   * Details of all known distros and packages affected by this vulnerability.
   *
   * @schema ContainerAnalysisNoteSpecVulnerability#details
   */
  readonly details?: ContainerAnalysisNoteSpecVulnerabilityDetails[];

  /**
   * The note provider assigned severity of this vulnerability. Possible values: SEVERITY_UNSPECIFIED, MINIMAL, LOW, MEDIUM, HIGH, CRITICAL
   *
   * @schema ContainerAnalysisNoteSpecVulnerability#severity
   */
  readonly severity?: string;

  /**
   * The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
   *
   * @schema ContainerAnalysisNoteSpecVulnerability#sourceUpdateTime
   */
  readonly sourceUpdateTime?: Date;

  /**
   * Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
   *
   * @schema ContainerAnalysisNoteSpecVulnerability#windowsDetails
   */
  readonly windowsDetails?: ContainerAnalysisNoteSpecVulnerabilityWindowsDetails[];

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecVulnerability' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecVulnerability(obj: ContainerAnalysisNoteSpecVulnerability | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cvssScore': obj.cvssScore,
    'cvssV3': toJson_ContainerAnalysisNoteSpecVulnerabilityCvssV3(obj.cvssV3),
    'details': obj.details?.map(y => toJson_ContainerAnalysisNoteSpecVulnerabilityDetails(y)),
    'severity': obj.severity,
    'sourceUpdateTime': obj.sourceUpdateTime?.toISOString(),
    'windowsDetails': obj.windowsDetails?.map(y => toJson_ContainerAnalysisNoteSpecVulnerabilityWindowsDetails(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Hint hints at the purpose of the attestation authority.
 *
 * @schema ContainerAnalysisNoteSpecAttestationHint
 */
export interface ContainerAnalysisNoteSpecAttestationHint {
  /**
   * Required. The human readable name of this attestation authority, for example "qa".
   *
   * @schema ContainerAnalysisNoteSpecAttestationHint#humanReadableName
   */
  readonly humanReadableName: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecAttestationHint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecAttestationHint(obj: ContainerAnalysisNoteSpecAttestationHint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'humanReadableName': obj.humanReadableName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. Immutable. The fingerprint of the base image.
 *
 * @schema ContainerAnalysisNoteSpecImageFingerprint
 */
export interface ContainerAnalysisNoteSpecImageFingerprint {
  /**
   * Required. The layer ID of the final layer in the Docker image's v1 representation.
   *
   * @schema ContainerAnalysisNoteSpecImageFingerprint#v1Name
   */
  readonly v1Name: string;

  /**
   * Required. The ordered list of v2 blobs that represent a given image.
   *
   * @schema ContainerAnalysisNoteSpecImageFingerprint#v2Blob
   */
  readonly v2Blob: string[];

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecImageFingerprint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecImageFingerprint(obj: ContainerAnalysisNoteSpecImageFingerprint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'v1Name': obj.v1Name,
    'v2Blob': obj.v2Blob?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ContainerAnalysisNoteSpecPackageDistribution
 */
export interface ContainerAnalysisNoteSpecPackageDistribution {
  /**
   * The CPU architecture for which packages in this distribution channel were built Possible values: ARCHITECTURE_UNSPECIFIED, X86, X64
   *
   * @schema ContainerAnalysisNoteSpecPackageDistribution#architecture
   */
  readonly architecture?: string;

  /**
   * The cpe_uri in [cpe format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.
   *
   * @schema ContainerAnalysisNoteSpecPackageDistribution#cpeUri
   */
  readonly cpeUri: string;

  /**
   * The distribution channel-specific description of this package.
   *
   * @schema ContainerAnalysisNoteSpecPackageDistribution#description
   */
  readonly description?: string;

  /**
   * The latest available version of this package in this distribution channel.
   *
   * @schema ContainerAnalysisNoteSpecPackageDistribution#latestVersion
   */
  readonly latestVersion?: ContainerAnalysisNoteSpecPackageDistributionLatestVersion;

  /**
   * A freeform string denoting the maintainer of this package.
   *
   * @schema ContainerAnalysisNoteSpecPackageDistribution#maintainer
   */
  readonly maintainer?: string;

  /**
   * The distribution channel-specific homepage for this package.
   *
   * @schema ContainerAnalysisNoteSpecPackageDistribution#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecPackageDistribution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecPackageDistribution(obj: ContainerAnalysisNoteSpecPackageDistribution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'architecture': obj.architecture,
    'cpeUri': obj.cpeUri,
    'description': obj.description,
    'latestVersion': toJson_ContainerAnalysisNoteSpecPackageDistributionLatestVersion(obj.latestVersion),
    'maintainer': obj.maintainer,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The full description of the CVSSv3 for this vulnerability.
 *
 * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3
 */
export interface ContainerAnalysisNoteSpecVulnerabilityCvssV3 {
  /**
   * Possible values: ATTACK_COMPLEXITY_UNSPECIFIED, ATTACK_COMPLEXITY_LOW, ATTACK_COMPLEXITY_HIGH
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#attackComplexity
   */
  readonly attackComplexity?: string;

  /**
   * Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. Possible values: ATTACK_VECTOR_UNSPECIFIED, ATTACK_VECTOR_NETWORK, ATTACK_VECTOR_ADJACENT, ATTACK_VECTOR_LOCAL, ATTACK_VECTOR_PHYSICAL
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#attackVector
   */
  readonly attackVector?: string;

  /**
   * Possible values: IMPACT_UNSPECIFIED, IMPACT_HIGH, IMPACT_LOW, IMPACT_NONE
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#availabilityImpact
   */
  readonly availabilityImpact?: string;

  /**
   * The base score is a function of the base metric scores.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#baseScore
   */
  readonly baseScore?: number;

  /**
   * Possible values: IMPACT_UNSPECIFIED, IMPACT_HIGH, IMPACT_LOW, IMPACT_NONE
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#confidentialityImpact
   */
  readonly confidentialityImpact?: string;

  /**
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#exploitabilityScore
   */
  readonly exploitabilityScore?: number;

  /**
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#impactScore
   */
  readonly impactScore?: number;

  /**
   * Possible values: IMPACT_UNSPECIFIED, IMPACT_HIGH, IMPACT_LOW, IMPACT_NONE
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#integrityImpact
   */
  readonly integrityImpact?: string;

  /**
   * Possible values: PRIVILEGES_REQUIRED_UNSPECIFIED, PRIVILEGES_REQUIRED_NONE, PRIVILEGES_REQUIRED_LOW, PRIVILEGES_REQUIRED_HIGH
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#privilegesRequired
   */
  readonly privilegesRequired?: string;

  /**
   * Possible values: SCOPE_UNSPECIFIED, SCOPE_UNCHANGED, SCOPE_CHANGED
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#scope
   */
  readonly scope?: string;

  /**
   * Possible values: USER_INTERACTION_UNSPECIFIED, USER_INTERACTION_NONE, USER_INTERACTION_REQUIRED
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityCvssV3#userInteraction
   */
  readonly userInteraction?: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecVulnerabilityCvssV3' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecVulnerabilityCvssV3(obj: ContainerAnalysisNoteSpecVulnerabilityCvssV3 | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'attackComplexity': obj.attackComplexity,
    'attackVector': obj.attackVector,
    'availabilityImpact': obj.availabilityImpact,
    'baseScore': obj.baseScore,
    'confidentialityImpact': obj.confidentialityImpact,
    'exploitabilityScore': obj.exploitabilityScore,
    'impactScore': obj.impactScore,
    'integrityImpact': obj.integrityImpact,
    'privilegesRequired': obj.privilegesRequired,
    'scope': obj.scope,
    'userInteraction': obj.userInteraction,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ContainerAnalysisNoteSpecVulnerabilityDetails
 */
export interface ContainerAnalysisNoteSpecVulnerabilityDetails {
  /**
   * Required. The (https://cpe.mitre.org/specification/) this vulnerability affects.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#affectedCpeUri
   */
  readonly affectedCpeUri: string;

  /**
   * Required. The package this vulnerability affects.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#affectedPackage
   */
  readonly affectedPackage: string;

  /**
   * The version number at the end of an interval in which this vulnerability exists. A vulnerability can affect a package between version numbers that are disjoint sets of intervals (example: ) each of which will be represented in its own Detail. If a specific affected version is provided by a vulnerability database, affected_version_start and affected_version_end will be the same in that Detail.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#affectedVersionEnd
   */
  readonly affectedVersionEnd?: ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd;

  /**
   * The version number at the start of an interval in which this vulnerability exists. A vulnerability can affect a package between version numbers that are disjoint sets of intervals (example: ) each of which will be represented in its own Detail. If a specific affected version is provided by a vulnerability database, affected_version_start and affected_version_end will be the same in that Detail.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#affectedVersionStart
   */
  readonly affectedVersionStart?: ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart;

  /**
   * A vendor-specific description of this vulnerability.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#description
   */
  readonly description?: string;

  /**
   * The distro recommended (https://cpe.mitre.org/specification/) to update to that contains a fix for this vulnerability. It is possible for this to be different from the affected_cpe_uri.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#fixedCpeUri
   */
  readonly fixedCpeUri?: string;

  /**
   * The distro recommended package to update to that contains a fix for this vulnerability. It is possible for this to be different from the affected_package.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#fixedPackage
   */
  readonly fixedPackage?: string;

  /**
   * The distro recommended version to update to that contains a fix for this vulnerability. Setting this to VersionKind.MAXIMUM means no such version is yet available.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#fixedVersion
   */
  readonly fixedVersion?: ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion;

  /**
   * Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#isObsolete
   */
  readonly isObsolete?: boolean;

  /**
   * The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#packageType
   */
  readonly packageType?: string;

  /**
   * The distro assigned severity of this vulnerability.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#severityName
   */
  readonly severityName?: string;

  /**
   * The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetails#sourceUpdateTime
   */
  readonly sourceUpdateTime?: Date;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecVulnerabilityDetails' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecVulnerabilityDetails(obj: ContainerAnalysisNoteSpecVulnerabilityDetails | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'affectedCpeUri': obj.affectedCpeUri,
    'affectedPackage': obj.affectedPackage,
    'affectedVersionEnd': toJson_ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd(obj.affectedVersionEnd),
    'affectedVersionStart': toJson_ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart(obj.affectedVersionStart),
    'description': obj.description,
    'fixedCpeUri': obj.fixedCpeUri,
    'fixedPackage': obj.fixedPackage,
    'fixedVersion': toJson_ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion(obj.fixedVersion),
    'isObsolete': obj.isObsolete,
    'packageType': obj.packageType,
    'severityName': obj.severityName,
    'sourceUpdateTime': obj.sourceUpdateTime?.toISOString(),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ContainerAnalysisNoteSpecVulnerabilityWindowsDetails
 */
export interface ContainerAnalysisNoteSpecVulnerabilityWindowsDetails {
  /**
   * Required. The (https://cpe.mitre.org/specification/) this vulnerability affects.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityWindowsDetails#cpeUri
   */
  readonly cpeUri: string;

  /**
   * The description of this vulnerability.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityWindowsDetails#description
   */
  readonly description?: string;

  /**
   * Required. The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed KBs presence is considered a fix.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityWindowsDetails#fixingKbs
   */
  readonly fixingKbs: ContainerAnalysisNoteSpecVulnerabilityWindowsDetailsFixingKbs[];

  /**
   * Required. The name of this vulnerability.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityWindowsDetails#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecVulnerabilityWindowsDetails' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecVulnerabilityWindowsDetails(obj: ContainerAnalysisNoteSpecVulnerabilityWindowsDetails | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cpeUri': obj.cpeUri,
    'description': obj.description,
    'fixingKbs': obj.fixingKbs?.map(y => toJson_ContainerAnalysisNoteSpecVulnerabilityWindowsDetailsFixingKbs(y)),
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The latest available version of this package in this distribution channel.
 *
 * @schema ContainerAnalysisNoteSpecPackageDistributionLatestVersion
 */
export interface ContainerAnalysisNoteSpecPackageDistributionLatestVersion {
  /**
   * Used to correct mistakes in the version numbering scheme.
   *
   * @schema ContainerAnalysisNoteSpecPackageDistributionLatestVersion#epoch
   */
  readonly epoch?: number;

  /**
   * Human readable version string. This string is of the form :- and is only set when kind is NORMAL.
   *
   * @schema ContainerAnalysisNoteSpecPackageDistributionLatestVersion#fullName
   */
  readonly fullName?: string;

  /**
   * Distinguish between sentinel MIN/MAX versions and normal versions. If kind is not NORMAL, then the other fields are ignored. Possible values: VERSION_KIND_UNSPECIFIED, NORMAL, MINIMUM, MAXIMUM
   *
   * @schema ContainerAnalysisNoteSpecPackageDistributionLatestVersion#kind
   */
  readonly kind: string;

  /**
   * The main part of the version name.
   *
   * @schema ContainerAnalysisNoteSpecPackageDistributionLatestVersion#name
   */
  readonly name?: string;

  /**
   * The iteration of the package build from the above version.
   *
   * @schema ContainerAnalysisNoteSpecPackageDistributionLatestVersion#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecPackageDistributionLatestVersion' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecPackageDistributionLatestVersion(obj: ContainerAnalysisNoteSpecPackageDistributionLatestVersion | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'epoch': obj.epoch,
    'fullName': obj.fullName,
    'kind': obj.kind,
    'name': obj.name,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The version number at the end of an interval in which this vulnerability exists. A vulnerability can affect a package between version numbers that are disjoint sets of intervals (example: ) each of which will be represented in its own Detail. If a specific affected version is provided by a vulnerability database, affected_version_start and affected_version_end will be the same in that Detail.
 *
 * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd
 */
export interface ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd {
  /**
   * Used to correct mistakes in the version numbering scheme.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd#epoch
   */
  readonly epoch?: number;

  /**
   * Human readable version string. This string is of the form :- and is only set when kind is NORMAL.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd#fullName
   */
  readonly fullName?: string;

  /**
   * Required. Distinguishes between sentinel MIN/MAX versions and normal versions. Possible values: NOTE_KIND_UNSPECIFIED, VULNERABILITY, BUILD, IMAGE, PACKAGE, DEPLOYMENT, DISCOVERY, ATTESTATION, UPGRADE
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd#kind
   */
  readonly kind: string;

  /**
   * Required only when version kind is NORMAL. The main part of the version name.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd#name
   */
  readonly name?: string;

  /**
   * The iteration of the package build from the above version.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd(obj: ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionEnd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'epoch': obj.epoch,
    'fullName': obj.fullName,
    'kind': obj.kind,
    'name': obj.name,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The version number at the start of an interval in which this vulnerability exists. A vulnerability can affect a package between version numbers that are disjoint sets of intervals (example: ) each of which will be represented in its own Detail. If a specific affected version is provided by a vulnerability database, affected_version_start and affected_version_end will be the same in that Detail.
 *
 * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart
 */
export interface ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart {
  /**
   * Used to correct mistakes in the version numbering scheme.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart#epoch
   */
  readonly epoch?: number;

  /**
   * Human readable version string. This string is of the form :- and is only set when kind is NORMAL.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart#fullName
   */
  readonly fullName?: string;

  /**
   * Required. Distinguishes between sentinel MIN/MAX versions and normal versions. Possible values: NOTE_KIND_UNSPECIFIED, VULNERABILITY, BUILD, IMAGE, PACKAGE, DEPLOYMENT, DISCOVERY, ATTESTATION, UPGRADE
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart#kind
   */
  readonly kind: string;

  /**
   * Required only when version kind is NORMAL. The main part of the version name.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart#name
   */
  readonly name?: string;

  /**
   * The iteration of the package build from the above version.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart(obj: ContainerAnalysisNoteSpecVulnerabilityDetailsAffectedVersionStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'epoch': obj.epoch,
    'fullName': obj.fullName,
    'kind': obj.kind,
    'name': obj.name,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The distro recommended version to update to that contains a fix for this vulnerability. Setting this to VersionKind.MAXIMUM means no such version is yet available.
 *
 * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion
 */
export interface ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion {
  /**
   * Used to correct mistakes in the version numbering scheme.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion#epoch
   */
  readonly epoch?: number;

  /**
   * Human readable version string. This string is of the form :- and is only set when kind is NORMAL.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion#fullName
   */
  readonly fullName?: string;

  /**
   * Required. Distinguishes between sentinel MIN/MAX versions and normal versions. Possible values: NOTE_KIND_UNSPECIFIED, VULNERABILITY, BUILD, IMAGE, PACKAGE, DEPLOYMENT, DISCOVERY, ATTESTATION, UPGRADE
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion#kind
   */
  readonly kind: string;

  /**
   * Required only when version kind is NORMAL. The main part of the version name.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion#name
   */
  readonly name?: string;

  /**
   * The iteration of the package build from the above version.
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion(obj: ContainerAnalysisNoteSpecVulnerabilityDetailsFixedVersion | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'epoch': obj.epoch,
    'fullName': obj.fullName,
    'kind': obj.kind,
    'name': obj.name,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ContainerAnalysisNoteSpecVulnerabilityWindowsDetailsFixingKbs
 */
export interface ContainerAnalysisNoteSpecVulnerabilityWindowsDetailsFixingKbs {
  /**
   * The KB name (generally of the form KB+ (e.g., KB123456)).
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityWindowsDetailsFixingKbs#name
   */
  readonly name?: string;

  /**
   * A link to the KB in the (https://www.catalog.update.microsoft.com/).
   *
   * @schema ContainerAnalysisNoteSpecVulnerabilityWindowsDetailsFixingKbs#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'ContainerAnalysisNoteSpecVulnerabilityWindowsDetailsFixingKbs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ContainerAnalysisNoteSpecVulnerabilityWindowsDetailsFixingKbs(obj: ContainerAnalysisNoteSpecVulnerabilityWindowsDetailsFixingKbs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

