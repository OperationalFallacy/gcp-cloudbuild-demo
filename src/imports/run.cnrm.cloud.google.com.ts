// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema RunJob
 */
export class RunJob extends ApiObject {
  /**
   * Returns the apiVersion and kind for "RunJob"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'run.cnrm.cloud.google.com/v1beta1',
    kind: 'RunJob',
  }

  /**
   * Renders a Kubernetes manifest for "RunJob".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: RunJobProps): any {
    return {
      ...RunJob.GVK,
      ...toJson_RunJobProps(props),
    };
  }

  /**
   * Defines a "RunJob" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: RunJobProps) {
    super(scope, id, {
      ...RunJob.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...RunJob.GVK,
      ...toJson_RunJobProps(resolved),
    };
  }
}

/**
 * @schema RunJob
 */
export interface RunJobProps {
  /**
   * @schema RunJob#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema RunJob#spec
   */
  readonly spec: RunJobSpec;

}

/**
 * Converts an object of type 'RunJobProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobProps(obj: RunJobProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_RunJobSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunJobSpec
 */
export interface RunJobSpec {
  /**
   * Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
   *
   * Cloud Run API v2 does not support annotations with 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected on new resources.
   * All system annotations in v1 now have a corresponding field in v2 Job.
   *
   * This field follows Kubernetes annotations' namespacing, limits, and rules.
   *
   * @schema RunJobSpec#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * Settings for the Binary Authorization feature.
   *
   * @schema RunJobSpec#binaryAuthorization
   */
  readonly binaryAuthorization?: RunJobSpecBinaryAuthorization;

  /**
   * Arbitrary identifier for the API client.
   *
   * @schema RunJobSpec#client
   */
  readonly client?: string;

  /**
   * Arbitrary version identifier for the API client.
   *
   * @schema RunJobSpec#clientVersion
   */
  readonly clientVersion?: string;

  /**
   * The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
   * If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
   *
   * For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values: ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"].
   *
   * @schema RunJobSpec#launchStage
   */
  readonly launchStage?: string;

  /**
   * Immutable. The location of the cloud run job.
   *
   * @schema RunJobSpec#location
   */
  readonly location: string;

  /**
   * The project that this resource belongs to.
   *
   * @schema RunJobSpec#projectRef
   */
  readonly projectRef: RunJobSpecProjectRef;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema RunJobSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * The template used to create executions for this Job.
   *
   * @schema RunJobSpec#template
   */
  readonly template: RunJobSpecTemplate;

}

/**
 * Converts an object of type 'RunJobSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpec(obj: RunJobSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'binaryAuthorization': toJson_RunJobSpecBinaryAuthorization(obj.binaryAuthorization),
    'client': obj.client,
    'clientVersion': obj.clientVersion,
    'launchStage': obj.launchStage,
    'location': obj.location,
    'projectRef': toJson_RunJobSpecProjectRef(obj.projectRef),
    'resourceID': obj.resourceId,
    'template': toJson_RunJobSpecTemplate(obj.template),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Settings for the Binary Authorization feature.
 *
 * @schema RunJobSpecBinaryAuthorization
 */
export interface RunJobSpecBinaryAuthorization {
  /**
   * If present, indicates to use Breakglass using this justification. If useDefault is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass.
   *
   * @default False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass.
   * @schema RunJobSpecBinaryAuthorization#breakglassJustification
   */
  readonly breakglassJustification?: string;

  /**
   * If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.
   *
   * @schema RunJobSpecBinaryAuthorization#useDefault
   */
  readonly useDefault?: boolean;

}

/**
 * Converts an object of type 'RunJobSpecBinaryAuthorization' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecBinaryAuthorization(obj: RunJobSpecBinaryAuthorization | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'breakglassJustification': obj.breakglassJustification,
    'useDefault': obj.useDefault,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The project that this resource belongs to.
 *
 * @schema RunJobSpecProjectRef
 */
export interface RunJobSpecProjectRef {
  /**
   * Allowed value: The `name` field of a `Project` resource.
   *
   * @schema RunJobSpecProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunJobSpecProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunJobSpecProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunJobSpecProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecProjectRef(obj: RunJobSpecProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The template used to create executions for this Job.
 *
 * @schema RunJobSpecTemplate
 */
export interface RunJobSpecTemplate {
  /**
   * Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
   *
   * Cloud Run API v2 does not support annotations with 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected.
   * All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate.
   *
   * This field follows Kubernetes annotations' namespacing, limits, and rules.
   *
   * @schema RunJobSpecTemplate#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * Specifies the maximum desired number of tasks the execution should run at given time. Must be <= taskCount. When the job is run, if this field is 0 or unset, the maximum possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed remaining, i.e. when the work left to do is less than max parallelism.
   *
   * @schema RunJobSpecTemplate#parallelism
   */
  readonly parallelism?: number;

  /**
   * Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/.
   *
   * @schema RunJobSpecTemplate#taskCount
   */
  readonly taskCount?: number;

  /**
   * Describes the task(s) that will be created when executing an execution.
   *
   * @schema RunJobSpecTemplate#template
   */
  readonly template: RunJobSpecTemplateTemplate;

}

/**
 * Converts an object of type 'RunJobSpecTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplate(obj: RunJobSpecTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'parallelism': obj.parallelism,
    'taskCount': obj.taskCount,
    'template': toJson_RunJobSpecTemplateTemplate(obj.template),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Describes the task(s) that will be created when executing an execution.
 *
 * @schema RunJobSpecTemplateTemplate
 */
export interface RunJobSpecTemplateTemplate {
  /**
   * Holds the single container that defines the unit of execution for this task.
   *
   * @schema RunJobSpecTemplateTemplate#containers
   */
  readonly containers?: RunJobSpecTemplateTemplateContainers[];

  /**
   * A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
   *
   * @schema RunJobSpecTemplateTemplate#encryptionKeyRef
   */
  readonly encryptionKeyRef?: RunJobSpecTemplateTemplateEncryptionKeyRef;

  /**
   * The execution environment being used to host this Task. Possible values: ["EXECUTION_ENVIRONMENT_GEN1", "EXECUTION_ENVIRONMENT_GEN2"].
   *
   * @schema RunJobSpecTemplateTemplate#executionEnvironment
   */
  readonly executionEnvironment?: string;

  /**
   * Number of retries allowed per Task, before marking this Task failed.
   *
   * @schema RunJobSpecTemplateTemplate#maxRetries
   */
  readonly maxRetries?: number;

  /**
   * Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
   *
   * @schema RunJobSpecTemplateTemplate#serviceAccountRef
   */
  readonly serviceAccountRef?: RunJobSpecTemplateTemplateServiceAccountRef;

  /**
   * Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.
   *
   * A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
   *
   * @schema RunJobSpecTemplateTemplate#timeout
   */
  readonly timeout?: string;

  /**
   * A list of Volumes to make available to containers.
   *
   * @schema RunJobSpecTemplateTemplate#volumes
   */
  readonly volumes?: RunJobSpecTemplateTemplateVolumes[];

  /**
   * VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
   *
   * @schema RunJobSpecTemplateTemplate#vpcAccess
   */
  readonly vpcAccess?: RunJobSpecTemplateTemplateVpcAccess;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplate(obj: RunJobSpecTemplateTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containers': obj.containers?.map(y => toJson_RunJobSpecTemplateTemplateContainers(y)),
    'encryptionKeyRef': toJson_RunJobSpecTemplateTemplateEncryptionKeyRef(obj.encryptionKeyRef),
    'executionEnvironment': obj.executionEnvironment,
    'maxRetries': obj.maxRetries,
    'serviceAccountRef': toJson_RunJobSpecTemplateTemplateServiceAccountRef(obj.serviceAccountRef),
    'timeout': obj.timeout,
    'volumes': obj.volumes?.map(y => toJson_RunJobSpecTemplateTemplateVolumes(y)),
    'vpcAccess': toJson_RunJobSpecTemplateTemplateVpcAccess(obj.vpcAccess),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunJobSpecTemplateTemplateContainers
 */
export interface RunJobSpecTemplateTemplateContainers {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell.
   *
   * @schema RunJobSpecTemplateTemplateContainers#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell.
   *
   * @schema RunJobSpecTemplateTemplateContainers#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container.
   *
   * @schema RunJobSpecTemplateTemplateContainers#env
   */
  readonly env?: RunJobSpecTemplateTemplateContainersEnv[];

  /**
   * URL of the Container image in Google Container Registry or Google Artifact Registry. More info: https://kubernetes.io/docs/concepts/containers/images.
   *
   * @schema RunJobSpecTemplateTemplateContainers#image
   */
  readonly image: string;

  /**
   * DEPRECATED. Cloud Run Job does not support liveness probe and `liveness_probe` field will be removed in a future major release. Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * This field is not supported in Cloud Run Job currently.
   *
   * @schema RunJobSpecTemplateTemplateContainers#livenessProbe
   */
  readonly livenessProbe?: RunJobSpecTemplateTemplateContainersLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL.
   *
   * @schema RunJobSpecTemplateTemplateContainers#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible.
   *
   * If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.
   *
   * @schema RunJobSpecTemplateTemplateContainers#ports
   */
  readonly ports?: RunJobSpecTemplateTemplateContainersPorts[];

  /**
   * Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources.
   *
   * @schema RunJobSpecTemplateTemplateContainers#resources
   */
  readonly resources?: RunJobSpecTemplateTemplateContainersResources;

  /**
   * DEPRECATED. Cloud Run Job does not support startup probe and `startup_probe` field will be removed in a future major release. Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * This field is not supported in Cloud Run Job currently.
   *
   * @schema RunJobSpecTemplateTemplateContainers#startupProbe
   */
  readonly startupProbe?: RunJobSpecTemplateTemplateContainersStartupProbe;

  /**
   * Volume to mount into the container's filesystem.
   *
   * @schema RunJobSpecTemplateTemplateContainers#volumeMounts
   */
  readonly volumeMounts?: RunJobSpecTemplateTemplateContainersVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
   *
   * @schema RunJobSpecTemplateTemplateContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainers(obj: RunJobSpecTemplateTemplateContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_RunJobSpecTemplateTemplateContainersEnv(y)),
    'image': obj.image,
    'livenessProbe': toJson_RunJobSpecTemplateTemplateContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_RunJobSpecTemplateTemplateContainersPorts(y)),
    'resources': toJson_RunJobSpecTemplateTemplateContainersResources(obj.resources),
    'startupProbe': toJson_RunJobSpecTemplateTemplateContainersStartupProbe(obj.startupProbe),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_RunJobSpecTemplateTemplateContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
 *
 * @schema RunJobSpecTemplateTemplateEncryptionKeyRef
 */
export interface RunJobSpecTemplateTemplateEncryptionKeyRef {
  /**
   * Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
   *
   * @schema RunJobSpecTemplateTemplateEncryptionKeyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunJobSpecTemplateTemplateEncryptionKeyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunJobSpecTemplateTemplateEncryptionKeyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateEncryptionKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateEncryptionKeyRef(obj: RunJobSpecTemplateTemplateEncryptionKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
 *
 * @schema RunJobSpecTemplateTemplateServiceAccountRef
 */
export interface RunJobSpecTemplateTemplateServiceAccountRef {
  /**
   * Allowed value: The `email` field of an `IAMServiceAccount` resource.
   *
   * @schema RunJobSpecTemplateTemplateServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunJobSpecTemplateTemplateServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunJobSpecTemplateTemplateServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateServiceAccountRef(obj: RunJobSpecTemplateTemplateServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunJobSpecTemplateTemplateVolumes
 */
export interface RunJobSpecTemplateTemplateVolumes {
  /**
   * Ephemeral storage used as a shared volume.
   *
   * @schema RunJobSpecTemplateTemplateVolumes#emptyDir
   */
  readonly emptyDir?: RunJobSpecTemplateTemplateVolumesEmptyDir;

  /**
   * Volume's name.
   *
   * @schema RunJobSpecTemplateTemplateVolumes#name
   */
  readonly name: string;

  /**
   * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret.
   *
   * @schema RunJobSpecTemplateTemplateVolumes#secret
   */
  readonly secret?: RunJobSpecTemplateTemplateVolumesSecret;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateVolumes(obj: RunJobSpecTemplateTemplateVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'emptyDir': toJson_RunJobSpecTemplateTemplateVolumesEmptyDir(obj.emptyDir),
    'name': obj.name,
    'secret': toJson_RunJobSpecTemplateTemplateVolumesSecret(obj.secret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
 *
 * @schema RunJobSpecTemplateTemplateVpcAccess
 */
export interface RunJobSpecTemplateTemplateVpcAccess {
  /**
   * Traffic VPC egress settings. Possible values: ["ALL_TRAFFIC", "PRIVATE_RANGES_ONLY"].
   *
   * @schema RunJobSpecTemplateTemplateVpcAccess#egress
   */
  readonly egress?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateVpcAccess' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateVpcAccess(obj: RunJobSpecTemplateTemplateVpcAccess | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'egress': obj.egress,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunJobSpecTemplateTemplateContainersEnv
 */
export interface RunJobSpecTemplateTemplateContainersEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER, and mnay not exceed 32768 characters.
   *
   * @schema RunJobSpecTemplateTemplateContainersEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "", and the maximum length is 32768 bytes.
   *
   * @default and the maximum length is 32768 bytes.
   * @schema RunJobSpecTemplateTemplateContainersEnv#value
   */
  readonly value?: string;

  /**
   * Source for the environment variable's value.
   *
   * @schema RunJobSpecTemplateTemplateContainersEnv#valueSource
   */
  readonly valueSource?: RunJobSpecTemplateTemplateContainersEnvValueSource;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersEnv(obj: RunJobSpecTemplateTemplateContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueSource': toJson_RunJobSpecTemplateTemplateContainersEnvValueSource(obj.valueSource),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * DEPRECATED. Cloud Run Job does not support liveness probe and `liveness_probe` field will be removed in a future major release. Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 * This field is not supported in Cloud Run Job currently.
 *
 * @schema RunJobSpecTemplateTemplateContainersLivenessProbe
 */
export interface RunJobSpecTemplateTemplateContainersLivenessProbe {
  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
   *
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbe#httpGet
   */
  readonly httpGet?: RunJobSpecTemplateTemplateContainersLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.
   *
   * @default 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds.
   *
   * @default 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds.
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
   *
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: RunJobSpecTemplateTemplateContainersLivenessProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.
   *
   * @default 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersLivenessProbe(obj: RunJobSpecTemplateTemplateContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_RunJobSpecTemplateTemplateContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'tcpSocket': toJson_RunJobSpecTemplateTemplateContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunJobSpecTemplateTemplateContainersPorts
 */
export interface RunJobSpecTemplateTemplateContainersPorts {
  /**
   * Port number the container listens on. This must be a valid TCP port number, 0 < containerPort < 65536.
   *
   * @schema RunJobSpecTemplateTemplateContainersPorts#containerPort
   */
  readonly containerPort?: number;

  /**
   * If specified, used to specify which protocol to use. Allowed values are "http1" and "h2c".
   *
   * @schema RunJobSpecTemplateTemplateContainersPorts#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersPorts(obj: RunJobSpecTemplateTemplateContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources.
 *
 * @schema RunJobSpecTemplateTemplateContainersResources
 */
export interface RunJobSpecTemplateTemplateContainersResources {
  /**
   * Only memory and CPU are supported. Note: The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go.
   *
   * @schema RunJobSpecTemplateTemplateContainersResources#limits
   */
  readonly limits?: { [key: string]: string };

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersResources(obj: RunJobSpecTemplateTemplateContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * DEPRECATED. Cloud Run Job does not support startup probe and `startup_probe` field will be removed in a future major release. Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 * This field is not supported in Cloud Run Job currently.
 *
 * @schema RunJobSpecTemplateTemplateContainersStartupProbe
 */
export interface RunJobSpecTemplateTemplateContainersStartupProbe {
  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema RunJobSpecTemplateTemplateContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
   *
   * @schema RunJobSpecTemplateTemplateContainersStartupProbe#httpGet
   */
  readonly httpGet?: RunJobSpecTemplateTemplateContainersStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.
   *
   * @default 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.
   * @schema RunJobSpecTemplateTemplateContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds.
   *
   * @default 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeoutSeconds.
   * @schema RunJobSpecTemplateTemplateContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
   *
   * @schema RunJobSpecTemplateTemplateContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: RunJobSpecTemplateTemplateContainersStartupProbeTcpSocket;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.
   *
   * @default 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.
   * @schema RunJobSpecTemplateTemplateContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersStartupProbe(obj: RunJobSpecTemplateTemplateContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_RunJobSpecTemplateTemplateContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'tcpSocket': toJson_RunJobSpecTemplateTemplateContainersStartupProbeTcpSocket(obj.tcpSocket),
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunJobSpecTemplateTemplateContainersVolumeMounts
 */
export interface RunJobSpecTemplateTemplateContainersVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be /cloudsql. All instances defined in the Volume will be available as /cloudsql/[instance]. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run.
   *
   * @schema RunJobSpecTemplateTemplateContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema RunJobSpecTemplateTemplateContainersVolumeMounts#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersVolumeMounts(obj: RunJobSpecTemplateTemplateContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Ephemeral storage used as a shared volume.
 *
 * @schema RunJobSpecTemplateTemplateVolumesEmptyDir
 */
export interface RunJobSpecTemplateTemplateVolumesEmptyDir {
  /**
   * The different types of medium supported for EmptyDir. Default value: "MEMORY" Possible values: ["MEMORY"].
   *
   * @schema RunJobSpecTemplateTemplateVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. This field's values are of the 'Quantity' k8s type: https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir.
   *
   * @schema RunJobSpecTemplateTemplateVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateVolumesEmptyDir(obj: RunJobSpecTemplateTemplateVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret.
 *
 * @schema RunJobSpecTemplateTemplateVolumesSecret
 */
export interface RunJobSpecTemplateTemplateVolumesSecret {
  /**
   * Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting.
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecret#items
   */
  readonly items?: RunJobSpecTemplateTemplateVolumesSecretItems[];

  /**
   * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecret#secretRef
   */
  readonly secretRef: RunJobSpecTemplateTemplateVolumesSecretSecretRef;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateVolumesSecret(obj: RunJobSpecTemplateTemplateVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_RunJobSpecTemplateTemplateVolumesSecretItems(y)),
    'secretRef': toJson_RunJobSpecTemplateTemplateVolumesSecretSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Source for the environment variable's value.
 *
 * @schema RunJobSpecTemplateTemplateContainersEnvValueSource
 */
export interface RunJobSpecTemplateTemplateContainersEnvValueSource {
  /**
   * Selects a secret and a specific version from Cloud Secret Manager.
   *
   * @schema RunJobSpecTemplateTemplateContainersEnvValueSource#secretKeyRef
   */
  readonly secretKeyRef?: RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRef;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersEnvValueSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersEnvValueSource(obj: RunJobSpecTemplateTemplateContainersEnvValueSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'secretKeyRef': toJson_RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
 *
 * @schema RunJobSpecTemplateTemplateContainersLivenessProbeHttpGet
 */
export interface RunJobSpecTemplateTemplateContainersLivenessProbeHttpGet {
  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: RunJobSpecTemplateTemplateContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server. Defaults to '/'.
   *
   * @default .
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersLivenessProbeHttpGet(obj: RunJobSpecTemplateTemplateContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'httpHeaders': obj.httpHeaders?.map(y => toJson_RunJobSpecTemplateTemplateContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
 *
 * @schema RunJobSpecTemplateTemplateContainersLivenessProbeTcpSocket
 */
export interface RunJobSpecTemplateTemplateContainersLivenessProbeTcpSocket {
  /**
   * Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
   *
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbeTcpSocket#port
   */
  readonly port?: number;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersLivenessProbeTcpSocket(obj: RunJobSpecTemplateTemplateContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform. Exactly one of HTTPGet or TCPSocket must be specified.
 *
 * @schema RunJobSpecTemplateTemplateContainersStartupProbeHttpGet
 */
export interface RunJobSpecTemplateTemplateContainersStartupProbeHttpGet {
  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema RunJobSpecTemplateTemplateContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: RunJobSpecTemplateTemplateContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server. Defaults to '/'.
   *
   * @default .
   * @schema RunJobSpecTemplateTemplateContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersStartupProbeHttpGet(obj: RunJobSpecTemplateTemplateContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'httpHeaders': obj.httpHeaders?.map(y => toJson_RunJobSpecTemplateTemplateContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. Exactly one of HTTPGet or TCPSocket must be specified.
 *
 * @schema RunJobSpecTemplateTemplateContainersStartupProbeTcpSocket
 */
export interface RunJobSpecTemplateTemplateContainersStartupProbeTcpSocket {
  /**
   * Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080.
   *
   * @schema RunJobSpecTemplateTemplateContainersStartupProbeTcpSocket#port
   */
  readonly port?: number;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersStartupProbeTcpSocket(obj: RunJobSpecTemplateTemplateContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'port': obj.port,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunJobSpecTemplateTemplateVolumesSecretItems
 */
export interface RunJobSpecTemplateTemplateVolumesSecretItems {
  /**
   * Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used.
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecretItems#mode
   */
  readonly mode: number;

  /**
   * The relative path of the secret in the container.
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecretItems#path
   */
  readonly path: string;

  /**
   * The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecretItems#versionRef
   */
  readonly versionRef: RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateVolumesSecretItems(obj: RunJobSpecTemplateTemplateVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'path': obj.path,
    'versionRef': toJson_RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef(obj.versionRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
 *
 * @schema RunJobSpecTemplateTemplateVolumesSecretSecretRef
 */
export interface RunJobSpecTemplateTemplateVolumesSecretSecretRef {
  /**
   * Allowed value: The `name` field of a `SecretManagerSecret` resource.
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecretSecretRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecretSecretRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecretSecretRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateVolumesSecretSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateVolumesSecretSecretRef(obj: RunJobSpecTemplateTemplateVolumesSecretSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a secret and a specific version from Cloud Secret Manager.
 *
 * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRef
 */
export interface RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRef {
  /**
   * The name of the secret in Cloud Secret Manager. Format: {secretName} if the secret is in the same project. projects/{project}/secrets/{secretName} if the secret is in a different project.
   *
   * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRef#secretRef
   */
  readonly secretRef: RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef;

  /**
   * The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
   *
   * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRef#versionRef
   */
  readonly versionRef: RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRef(obj: RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'secretRef': toJson_RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef(obj.secretRef),
    'versionRef': toJson_RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef(obj.versionRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunJobSpecTemplateTemplateContainersLivenessProbeHttpGetHttpHeaders
 */
export interface RunJobSpecTemplateTemplateContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name.
   *
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value.
   *
   * @schema RunJobSpecTemplateTemplateContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersLivenessProbeHttpGetHttpHeaders(obj: RunJobSpecTemplateTemplateContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunJobSpecTemplateTemplateContainersStartupProbeHttpGetHttpHeaders
 */
export interface RunJobSpecTemplateTemplateContainersStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name.
   *
   * @schema RunJobSpecTemplateTemplateContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value.
   *
   * @schema RunJobSpecTemplateTemplateContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersStartupProbeHttpGetHttpHeaders(obj: RunJobSpecTemplateTemplateContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version
 *
 * @schema RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef
 */
export interface RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef {
  /**
   * Allowed value: The `version` field of a `SecretManagerSecretVersion` resource.
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef(obj: RunJobSpecTemplateTemplateVolumesSecretItemsVersionRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The name of the secret in Cloud Secret Manager. Format: {secretName} if the secret is in the same project. projects/{project}/secrets/{secretName} if the secret is in a different project.
 *
 * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef
 */
export interface RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef {
  /**
   * Allowed value: The `name` field of a `SecretManagerSecret` resource.
   *
   * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef(obj: RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
 *
 * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef
 */
export interface RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef {
  /**
   * Allowed value: The `version` field of a `SecretManagerSecretVersion` resource.
   *
   * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef(obj: RunJobSpecTemplateTemplateContainersEnvValueSourceSecretKeyRefVersionRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema RunService
 */
export class RunService extends ApiObject {
  /**
   * Returns the apiVersion and kind for "RunService"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'run.cnrm.cloud.google.com/v1beta1',
    kind: 'RunService',
  }

  /**
   * Renders a Kubernetes manifest for "RunService".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: RunServiceProps): any {
    return {
      ...RunService.GVK,
      ...toJson_RunServiceProps(props),
    };
  }

  /**
   * Defines a "RunService" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: RunServiceProps) {
    super(scope, id, {
      ...RunService.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...RunService.GVK,
      ...toJson_RunServiceProps(resolved),
    };
  }
}

/**
 * @schema RunService
 */
export interface RunServiceProps {
  /**
   * @schema RunService#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema RunService#spec
   */
  readonly spec: RunServiceSpec;

}

/**
 * Converts an object of type 'RunServiceProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceProps(obj: RunServiceProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_RunServiceSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpec
 */
export interface RunServiceSpec {
  /**
   * Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using 'run.googleapis.com' or 'serving.knative.dev' namespaces. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: http://kubernetes.io/docs/user-guide/annotations
   *
   * @schema RunServiceSpec#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * Settings for the Binary Authorization feature.
   *
   * @schema RunServiceSpec#binaryAuthorization
   */
  readonly binaryAuthorization?: RunServiceSpecBinaryAuthorization;

  /**
   * Arbitrary identifier for the API client.
   *
   * @schema RunServiceSpec#client
   */
  readonly client?: string;

  /**
   * Arbitrary version identifier for the API client.
   *
   * @schema RunServiceSpec#clientVersion
   */
  readonly clientVersion?: string;

  /**
   * User-provided description of the Service.
   *
   * @schema RunServiceSpec#description
   */
  readonly description?: string;

  /**
   * Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.
   *
   * @schema RunServiceSpec#ingress
   */
  readonly ingress?: string;

  /**
   * The launch stage as defined by [Google Cloud Platform Launch Stages](http://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed. Possible values: LAUNCH_STAGE_UNSPECIFIED, UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED
   *
   * @schema RunServiceSpec#launchStage
   */
  readonly launchStage?: string;

  /**
   * Immutable. The location for the resource
   *
   * @schema RunServiceSpec#location
   */
  readonly location: string;

  /**
   * Immutable. The Project that this resource belongs to.
   *
   * @schema RunServiceSpec#projectRef
   */
  readonly projectRef: RunServiceSpecProjectRef;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema RunServiceSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Required. The template used to create revisions for this Service.
   *
   * @schema RunServiceSpec#template
   */
  readonly template: RunServiceSpecTemplate;

  /**
   * Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest `Ready` Revision.
   *
   * @schema RunServiceSpec#traffic
   */
  readonly traffic?: RunServiceSpecTraffic[];

}

/**
 * Converts an object of type 'RunServiceSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpec(obj: RunServiceSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'binaryAuthorization': toJson_RunServiceSpecBinaryAuthorization(obj.binaryAuthorization),
    'client': obj.client,
    'clientVersion': obj.clientVersion,
    'description': obj.description,
    'ingress': obj.ingress,
    'launchStage': obj.launchStage,
    'location': obj.location,
    'projectRef': toJson_RunServiceSpecProjectRef(obj.projectRef),
    'resourceID': obj.resourceId,
    'template': toJson_RunServiceSpecTemplate(obj.template),
    'traffic': obj.traffic?.map(y => toJson_RunServiceSpecTraffic(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Settings for the Binary Authorization feature.
 *
 * @schema RunServiceSpecBinaryAuthorization
 */
export interface RunServiceSpecBinaryAuthorization {
  /**
   * If present, indicates to use Breakglass using this justification. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
   *
   * @schema RunServiceSpecBinaryAuthorization#breakglassJustification
   */
  readonly breakglassJustification?: string;

  /**
   * If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled
   *
   * @schema RunServiceSpecBinaryAuthorization#useDefault
   */
  readonly useDefault?: boolean;

}

/**
 * Converts an object of type 'RunServiceSpecBinaryAuthorization' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecBinaryAuthorization(obj: RunServiceSpecBinaryAuthorization | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'breakglassJustification': obj.breakglassJustification,
    'useDefault': obj.useDefault,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. The Project that this resource belongs to.
 *
 * @schema RunServiceSpecProjectRef
 */
export interface RunServiceSpecProjectRef {
  /**
   * The project for the resource
   *
   * Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
   *
   * @schema RunServiceSpecProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunServiceSpecProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunServiceSpecProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunServiceSpecProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecProjectRef(obj: RunServiceSpecProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. The template used to create revisions for this Service.
 *
 * @schema RunServiceSpecTemplate
 */
export interface RunServiceSpecTemplate {
  /**
   * KRM-style annotations for the resource.
   *
   * @schema RunServiceSpecTemplate#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * Sets the maximum number of requests that each serving instance can receive.
   *
   * @schema RunServiceSpecTemplate#containerConcurrency
   */
  readonly containerConcurrency?: number;

  /**
   * Holds the single container that defines the unit of execution for this Revision.
   *
   * @schema RunServiceSpecTemplate#containers
   */
  readonly containers?: RunServiceSpecTemplateContainers[];

  /**
   * The sandbox environment to host this Revision. Possible values: EXECUTION_ENVIRONMENT_UNSPECIFIED, EXECUTION_ENVIRONMENT_GEN1, EXECUTION_ENVIRONMENT_GEN2
   *
   * @schema RunServiceSpecTemplate#executionEnvironment
   */
  readonly executionEnvironment?: string;

  /**
   * KRM-style labels for the resource.
   *
   * @schema RunServiceSpecTemplate#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.
   *
   * @schema RunServiceSpecTemplate#revision
   */
  readonly revision?: string;

  /**
   * Scaling settings for this Revision.
   *
   * @schema RunServiceSpecTemplate#scaling
   */
  readonly scaling?: RunServiceSpecTemplateScaling;

  /**
   * @schema RunServiceSpecTemplate#serviceAccountRef
   */
  readonly serviceAccountRef?: RunServiceSpecTemplateServiceAccountRef;

  /**
   * Max allowed time for an instance to respond to a request.
   *
   * @schema RunServiceSpecTemplate#timeout
   */
  readonly timeout?: string;

  /**
   * A list of Volumes to make available to containers.
   *
   * @schema RunServiceSpecTemplate#volumes
   */
  readonly volumes?: RunServiceSpecTemplateVolumes[];

  /**
   * VPC Access configuration to use for this Revision. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
   *
   * @schema RunServiceSpecTemplate#vpcAccess
   */
  readonly vpcAccess?: RunServiceSpecTemplateVpcAccess;

}

/**
 * Converts an object of type 'RunServiceSpecTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplate(obj: RunServiceSpecTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'containerConcurrency': obj.containerConcurrency,
    'containers': obj.containers?.map(y => toJson_RunServiceSpecTemplateContainers(y)),
    'executionEnvironment': obj.executionEnvironment,
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'revision': obj.revision,
    'scaling': toJson_RunServiceSpecTemplateScaling(obj.scaling),
    'serviceAccountRef': toJson_RunServiceSpecTemplateServiceAccountRef(obj.serviceAccountRef),
    'timeout': obj.timeout,
    'volumes': obj.volumes?.map(y => toJson_RunServiceSpecTemplateVolumes(y)),
    'vpcAccess': toJson_RunServiceSpecTemplateVpcAccess(obj.vpcAccess),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTraffic
 */
export interface RunServiceSpecTraffic {
  /**
   * Specifies percent of the traffic to this Revision. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single TrafficTarget entry.
   *
   * @schema RunServiceSpecTraffic#percent
   */
  readonly percent?: number;

  /**
   * Revision to which to send this portion of traffic, if traffic allocation is by revision.
   *
   * @schema RunServiceSpecTraffic#revision
   */
  readonly revision?: string;

  /**
   * Indicates a string to be part of the URI to exclusively reference this target.
   *
   * @schema RunServiceSpecTraffic#tag
   */
  readonly tag?: string;

  /**
   * The allocation type for this traffic target. Possible values: TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED, TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST, TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION
   *
   * @schema RunServiceSpecTraffic#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTraffic' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTraffic(obj: RunServiceSpecTraffic | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'percent': obj.percent,
    'revision': obj.revision,
    'tag': obj.tag,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateContainers
 */
export interface RunServiceSpecTemplateContainers {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema RunServiceSpecTemplateContainers#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema RunServiceSpecTemplateContainers#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container.
   *
   * @schema RunServiceSpecTemplateContainers#env
   */
  readonly env?: RunServiceSpecTemplateContainersEnv[];

  /**
   * Required. URL of the Container image in Google Container Registry or Docker More info: https://kubernetes.io/docs/concepts/containers/images
   *
   * @schema RunServiceSpecTemplateContainers#image
   */
  readonly image: string;

  /**
   * Name of the container specified as a DNS_LABEL.
   *
   * @schema RunServiceSpecTemplateContainers#name
   */
  readonly name?: string;

  /**
   * List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.
   *
   * @schema RunServiceSpecTemplateContainers#ports
   */
  readonly ports?: RunServiceSpecTemplateContainersPorts[];

  /**
   * Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
   *
   * @schema RunServiceSpecTemplateContainers#resources
   */
  readonly resources?: RunServiceSpecTemplateContainersResources;

  /**
   * Volume to mount into the container's filesystem.
   *
   * @schema RunServiceSpecTemplateContainers#volumeMounts
   */
  readonly volumeMounts?: RunServiceSpecTemplateContainersVolumeMounts[];

}

/**
 * Converts an object of type 'RunServiceSpecTemplateContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateContainers(obj: RunServiceSpecTemplateContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_RunServiceSpecTemplateContainersEnv(y)),
    'image': obj.image,
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_RunServiceSpecTemplateContainersPorts(y)),
    'resources': toJson_RunServiceSpecTemplateContainersResources(obj.resources),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_RunServiceSpecTemplateContainersVolumeMounts(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Scaling settings for this Revision.
 *
 * @schema RunServiceSpecTemplateScaling
 */
export interface RunServiceSpecTemplateScaling {
  /**
   * Maximum number of serving instances that this resource should have.
   *
   * @schema RunServiceSpecTemplateScaling#maxInstanceCount
   */
  readonly maxInstanceCount?: number;

  /**
   * Minimum number of serving instances that this resource should have.
   *
   * @schema RunServiceSpecTemplateScaling#minInstanceCount
   */
  readonly minInstanceCount?: number;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateScaling' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateScaling(obj: RunServiceSpecTemplateScaling | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxInstanceCount': obj.maxInstanceCount,
    'minInstanceCount': obj.minInstanceCount,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateServiceAccountRef
 */
export interface RunServiceSpecTemplateServiceAccountRef {
  /**
   * Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
   *
   * Allowed value: The `email` field of an `IAMServiceAccount` resource.
   *
   * @schema RunServiceSpecTemplateServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunServiceSpecTemplateServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunServiceSpecTemplateServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateServiceAccountRef(obj: RunServiceSpecTemplateServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateVolumes
 */
export interface RunServiceSpecTemplateVolumes {
  /**
   * For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
   *
   * @schema RunServiceSpecTemplateVolumes#cloudSqlInstance
   */
  readonly cloudSqlInstance?: RunServiceSpecTemplateVolumesCloudSqlInstance;

  /**
   * Required. Volume's name.
   *
   * @schema RunServiceSpecTemplateVolumes#name
   */
  readonly name: string;

  /**
   * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema RunServiceSpecTemplateVolumes#secret
   */
  readonly secret?: RunServiceSpecTemplateVolumesSecret;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateVolumes(obj: RunServiceSpecTemplateVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cloudSqlInstance': toJson_RunServiceSpecTemplateVolumesCloudSqlInstance(obj.cloudSqlInstance),
    'name': obj.name,
    'secret': toJson_RunServiceSpecTemplateVolumesSecret(obj.secret),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VPC Access configuration to use for this Revision. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
 *
 * @schema RunServiceSpecTemplateVpcAccess
 */
export interface RunServiceSpecTemplateVpcAccess {
  /**
   * @schema RunServiceSpecTemplateVpcAccess#connectorRef
   */
  readonly connectorRef?: RunServiceSpecTemplateVpcAccessConnectorRef;

  /**
   * Traffic VPC egress settings. Possible values: VPC_EGRESS_UNSPECIFIED, ALL_TRAFFIC, PRIVATE_RANGES_ONLY
   *
   * @schema RunServiceSpecTemplateVpcAccess#egress
   */
  readonly egress?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateVpcAccess' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateVpcAccess(obj: RunServiceSpecTemplateVpcAccess | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'connectorRef': toJson_RunServiceSpecTemplateVpcAccessConnectorRef(obj.connectorRef),
    'egress': obj.egress,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateContainersEnv
 */
export interface RunServiceSpecTemplateContainersEnv {
  /**
   * Required. Name of the environment variable. Must be a C_IDENTIFIER, and mnay not exceed 32768 characters.
   *
   * @schema RunServiceSpecTemplateContainersEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "", and the maximum length is 32768 bytes.
   *
   * @default and the maximum length is 32768 bytes.
   * @schema RunServiceSpecTemplateContainersEnv#value
   */
  readonly value?: string;

  /**
   * Source for the environment variable's value.
   *
   * @schema RunServiceSpecTemplateContainersEnv#valueSource
   */
  readonly valueSource?: RunServiceSpecTemplateContainersEnvValueSource;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateContainersEnv(obj: RunServiceSpecTemplateContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueSource': toJson_RunServiceSpecTemplateContainersEnvValueSource(obj.valueSource),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateContainersPorts
 */
export interface RunServiceSpecTemplateContainersPorts {
  /**
   * Port number the container listens on. This must be a valid TCP port number, 0 < container_port < 65536.
   *
   * @schema RunServiceSpecTemplateContainersPorts#containerPort
   */
  readonly containerPort?: number;

  /**
   * If specified, used to specify which protocol to use. Allowed values are "http1" and "h2c".
   *
   * @schema RunServiceSpecTemplateContainersPorts#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateContainersPorts(obj: RunServiceSpecTemplateContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
 *
 * @schema RunServiceSpecTemplateContainersResources
 */
export interface RunServiceSpecTemplateContainersResources {
  /**
   * Determines whether CPU should be throttled or not outside of requests.
   *
   * @schema RunServiceSpecTemplateContainersResources#cpuIdle
   */
  readonly cpuIdle?: boolean;

  /**
   * Only memory and CPU are supported. Note: The only supported values for CPU are '1', '2', and '4'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
   *
   * @schema RunServiceSpecTemplateContainersResources#limits
   */
  readonly limits?: { [key: string]: string };

}

/**
 * Converts an object of type 'RunServiceSpecTemplateContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateContainersResources(obj: RunServiceSpecTemplateContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cpuIdle': obj.cpuIdle,
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateContainersVolumeMounts
 */
export interface RunServiceSpecTemplateContainersVolumeMounts {
  /**
   * Required. Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be `/cloudsql`. All instances defined in the Volume will be available as `/cloudsql/[instance]`. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
   *
   * @schema RunServiceSpecTemplateContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * Required. This must match the Name of a Volume.
   *
   * @schema RunServiceSpecTemplateContainersVolumeMounts#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateContainersVolumeMounts(obj: RunServiceSpecTemplateContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
 *
 * @schema RunServiceSpecTemplateVolumesCloudSqlInstance
 */
export interface RunServiceSpecTemplateVolumesCloudSqlInstance {
  /**
   * @schema RunServiceSpecTemplateVolumesCloudSqlInstance#instances
   */
  readonly instances?: RunServiceSpecTemplateVolumesCloudSqlInstanceInstances[];

}

/**
 * Converts an object of type 'RunServiceSpecTemplateVolumesCloudSqlInstance' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateVolumesCloudSqlInstance(obj: RunServiceSpecTemplateVolumesCloudSqlInstance | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'instances': obj.instances?.map(y => toJson_RunServiceSpecTemplateVolumesCloudSqlInstanceInstances(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
 *
 * @schema RunServiceSpecTemplateVolumesSecret
 */
export interface RunServiceSpecTemplateVolumesSecret {
  /**
   * Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0644. Directories within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. This might be in conflict with other options that affect the file mode, like fsGroup, and as a result, other mode bits could be set.
   *
   * @schema RunServiceSpecTemplateVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.
   *
   * @schema RunServiceSpecTemplateVolumesSecret#items
   */
  readonly items?: RunServiceSpecTemplateVolumesSecretItems[];

  /**
   * @schema RunServiceSpecTemplateVolumesSecret#secretRef
   */
  readonly secretRef: RunServiceSpecTemplateVolumesSecretSecretRef;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateVolumesSecret(obj: RunServiceSpecTemplateVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_RunServiceSpecTemplateVolumesSecretItems(y)),
    'secretRef': toJson_RunServiceSpecTemplateVolumesSecretSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateVpcAccessConnectorRef
 */
export interface RunServiceSpecTemplateVpcAccessConnectorRef {
  /**
   * VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}
   *
   * Allowed value: The Google Cloud resource name of a `VPCAccessConnector` resource (format: `projects/{{project}}/locations/{{location}}/connectors/{{name}}`).
   *
   * @schema RunServiceSpecTemplateVpcAccessConnectorRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunServiceSpecTemplateVpcAccessConnectorRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunServiceSpecTemplateVpcAccessConnectorRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateVpcAccessConnectorRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateVpcAccessConnectorRef(obj: RunServiceSpecTemplateVpcAccessConnectorRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Source for the environment variable's value.
 *
 * @schema RunServiceSpecTemplateContainersEnvValueSource
 */
export interface RunServiceSpecTemplateContainersEnvValueSource {
  /**
   * Selects a secret and a specific version from Cloud Secret Manager.
   *
   * @schema RunServiceSpecTemplateContainersEnvValueSource#secretKeyRef
   */
  readonly secretKeyRef?: RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRef;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateContainersEnvValueSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateContainersEnvValueSource(obj: RunServiceSpecTemplateContainersEnvValueSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'secretKeyRef': toJson_RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateVolumesCloudSqlInstanceInstances
 */
export interface RunServiceSpecTemplateVolumesCloudSqlInstanceInstances {
  /**
   * Allowed value: The `instanceName` field of a `SQLInstance` resource.
   *
   * @schema RunServiceSpecTemplateVolumesCloudSqlInstanceInstances#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunServiceSpecTemplateVolumesCloudSqlInstanceInstances#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunServiceSpecTemplateVolumesCloudSqlInstanceInstances#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateVolumesCloudSqlInstanceInstances' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateVolumesCloudSqlInstanceInstances(obj: RunServiceSpecTemplateVolumesCloudSqlInstanceInstances | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateVolumesSecretItems
 */
export interface RunServiceSpecTemplateVolumesSecretItems {
  /**
   * Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema RunServiceSpecTemplateVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * Required. The relative path of the secret in the container.
   *
   * @schema RunServiceSpecTemplateVolumesSecretItems#path
   */
  readonly path: string;

  /**
   * @schema RunServiceSpecTemplateVolumesSecretItems#versionRef
   */
  readonly versionRef?: RunServiceSpecTemplateVolumesSecretItemsVersionRef;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateVolumesSecretItems(obj: RunServiceSpecTemplateVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'path': obj.path,
    'versionRef': toJson_RunServiceSpecTemplateVolumesSecretItemsVersionRef(obj.versionRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateVolumesSecretSecretRef
 */
export interface RunServiceSpecTemplateVolumesSecretSecretRef {
  /**
   * Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project.
   *
   * Allowed value: The Google Cloud resource name of a `SecretManagerSecret` resource (format: `projects/{{project}}/secrets/{{name}}`).
   *
   * @schema RunServiceSpecTemplateVolumesSecretSecretRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunServiceSpecTemplateVolumesSecretSecretRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunServiceSpecTemplateVolumesSecretSecretRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateVolumesSecretSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateVolumesSecretSecretRef(obj: RunServiceSpecTemplateVolumesSecretSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a secret and a specific version from Cloud Secret Manager.
 *
 * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRef
 */
export interface RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRef {
  /**
   * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRef#secretRef
   */
  readonly secretRef: RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef;

  /**
   * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRef#versionRef
   */
  readonly versionRef?: RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRef(obj: RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'secretRef': toJson_RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef(obj.secretRef),
    'versionRef': toJson_RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef(obj.versionRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateVolumesSecretItemsVersionRef
 */
export interface RunServiceSpecTemplateVolumesSecretItemsVersionRef {
  /**
   * The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
   *
   * Allowed value: The Google Cloud resource name of a `SecretManagerSecretVersion` resource (format: `{{name}}`).
   *
   * @schema RunServiceSpecTemplateVolumesSecretItemsVersionRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunServiceSpecTemplateVolumesSecretItemsVersionRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunServiceSpecTemplateVolumesSecretItemsVersionRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateVolumesSecretItemsVersionRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateVolumesSecretItemsVersionRef(obj: RunServiceSpecTemplateVolumesSecretItemsVersionRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef
 */
export interface RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef {
  /**
   * Required. The name of the secret in Cloud Secret Manager. Format: {secret_name} if the secret is in the same project. projects/{project}/secrets/{secret_name} if the secret is in a different project.
   *
   * Allowed value: The Google Cloud resource name of a `SecretManagerSecret` resource (format: `projects/{{project}}/secrets/{{name}}`).
   *
   * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef(obj: RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef
 */
export interface RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef {
  /**
   * The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
   *
   * Allowed value: The Google Cloud resource name of a `SecretManagerSecretVersion` resource (format: `{{name}}`).
   *
   * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef(obj: RunServiceSpecTemplateContainersEnvValueSourceSecretKeyRefVersionRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

