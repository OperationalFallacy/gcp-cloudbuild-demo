// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema TagsTagBinding
 */
export class TagsTagBinding extends ApiObject {
  /**
   * Returns the apiVersion and kind for "TagsTagBinding"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'tags.cnrm.cloud.google.com/v1beta1',
    kind: 'TagsTagBinding',
  }

  /**
   * Renders a Kubernetes manifest for "TagsTagBinding".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TagsTagBindingProps): any {
    return {
      ...TagsTagBinding.GVK,
      ...toJson_TagsTagBindingProps(props),
    };
  }

  /**
   * Defines a "TagsTagBinding" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TagsTagBindingProps) {
    super(scope, id, {
      ...TagsTagBinding.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...TagsTagBinding.GVK,
      ...toJson_TagsTagBindingProps(resolved),
    };
  }
}

/**
 * @schema TagsTagBinding
 */
export interface TagsTagBindingProps {
  /**
   * @schema TagsTagBinding#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema TagsTagBinding#spec
   */
  readonly spec: TagsTagBindingSpec;

}

/**
 * Converts an object of type 'TagsTagBindingProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TagsTagBindingProps(obj: TagsTagBindingProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_TagsTagBindingSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TagsTagBindingSpec
 */
export interface TagsTagBindingSpec {
  /**
   * @schema TagsTagBindingSpec#parentRef
   */
  readonly parentRef: TagsTagBindingSpecParentRef;

  /**
   * Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.
   *
   * @schema TagsTagBindingSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * @schema TagsTagBindingSpec#tagValueRef
   */
  readonly tagValueRef: TagsTagBindingSpecTagValueRef;

}

/**
 * Converts an object of type 'TagsTagBindingSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TagsTagBindingSpec(obj: TagsTagBindingSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'parentRef': toJson_TagsTagBindingSpecParentRef(obj.parentRef),
    'resourceID': obj.resourceId,
    'tagValueRef': toJson_TagsTagBindingSpecTagValueRef(obj.tagValueRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TagsTagBindingSpecParentRef
 */
export interface TagsTagBindingSpecParentRef {
  /**
   * Allowed value: string of the format `//cloudresourcemanager.googleapis.com/projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.
   *
   * @schema TagsTagBindingSpecParentRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema TagsTagBindingSpecParentRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema TagsTagBindingSpecParentRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TagsTagBindingSpecParentRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TagsTagBindingSpecParentRef(obj: TagsTagBindingSpecParentRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TagsTagBindingSpecTagValueRef
 */
export interface TagsTagBindingSpecTagValueRef {
  /**
   * Allowed value: string of the format `tagValues/{{value}}`, where {{value}} is the `name` field of a `TagsTagValue` resource.
   *
   * @schema TagsTagBindingSpecTagValueRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema TagsTagBindingSpecTagValueRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema TagsTagBindingSpecTagValueRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TagsTagBindingSpecTagValueRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TagsTagBindingSpecTagValueRef(obj: TagsTagBindingSpecTagValueRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema TagsTagKey
 */
export class TagsTagKey extends ApiObject {
  /**
   * Returns the apiVersion and kind for "TagsTagKey"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'tags.cnrm.cloud.google.com/v1beta1',
    kind: 'TagsTagKey',
  }

  /**
   * Renders a Kubernetes manifest for "TagsTagKey".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TagsTagKeyProps): any {
    return {
      ...TagsTagKey.GVK,
      ...toJson_TagsTagKeyProps(props),
    };
  }

  /**
   * Defines a "TagsTagKey" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TagsTagKeyProps) {
    super(scope, id, {
      ...TagsTagKey.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...TagsTagKey.GVK,
      ...toJson_TagsTagKeyProps(resolved),
    };
  }
}

/**
 * @schema TagsTagKey
 */
export interface TagsTagKeyProps {
  /**
   * @schema TagsTagKey#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema TagsTagKey#spec
   */
  readonly spec: TagsTagKeySpec;

}

/**
 * Converts an object of type 'TagsTagKeyProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TagsTagKeyProps(obj: TagsTagKeyProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_TagsTagKeySpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TagsTagKeySpec
 */
export interface TagsTagKeySpec {
  /**
   * User-assigned description of the TagKey. Must not exceed 256 characters.
   *
   * @schema TagsTagKeySpec#description
   */
  readonly description?: string;

  /**
   * Immutable. Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id} or projects/{project_id_or_number}.
   *
   * @schema TagsTagKeySpec#parent
   */
  readonly parent: string;

  /**
   * Immutable. Optional. A purpose cannot be changed once set.
   *
   * A purpose denotes that this Tag is intended for use in policies of a specific policy engine, and will involve that policy engine in management operations involving this Tag. Possible values: ["GCE_FIREWALL"].
   *
   * @schema TagsTagKeySpec#purpose
   */
  readonly purpose?: string;

  /**
   * Immutable. Optional. Purpose data cannot be changed once set.
   *
   * Purpose data corresponds to the policy system that the tag is intended for. For example, the GCE_FIREWALL purpose expects data in the following format: 'network = "<project-name>/<vpc-name>"'.
   *
   * @schema TagsTagKeySpec#purposeData
   */
  readonly purposeData?: { [key: string]: string };

  /**
   * Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.
   *
   * @schema TagsTagKeySpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Immutable. Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace.
   *
   * The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
   *
   * @schema TagsTagKeySpec#shortName
   */
  readonly shortName: string;

}

/**
 * Converts an object of type 'TagsTagKeySpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TagsTagKeySpec(obj: TagsTagKeySpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'description': obj.description,
    'parent': obj.parent,
    'purpose': obj.purpose,
    'purposeData': ((obj.purposeData) === undefined) ? undefined : (Object.entries(obj.purposeData).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'resourceID': obj.resourceId,
    'shortName': obj.shortName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema TagsTagValue
 */
export class TagsTagValue extends ApiObject {
  /**
   * Returns the apiVersion and kind for "TagsTagValue"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'tags.cnrm.cloud.google.com/v1beta1',
    kind: 'TagsTagValue',
  }

  /**
   * Renders a Kubernetes manifest for "TagsTagValue".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TagsTagValueProps): any {
    return {
      ...TagsTagValue.GVK,
      ...toJson_TagsTagValueProps(props),
    };
  }

  /**
   * Defines a "TagsTagValue" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TagsTagValueProps) {
    super(scope, id, {
      ...TagsTagValue.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...TagsTagValue.GVK,
      ...toJson_TagsTagValueProps(resolved),
    };
  }
}

/**
 * @schema TagsTagValue
 */
export interface TagsTagValueProps {
  /**
   * @schema TagsTagValue#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema TagsTagValue#spec
   */
  readonly spec: TagsTagValueSpec;

}

/**
 * Converts an object of type 'TagsTagValueProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TagsTagValueProps(obj: TagsTagValueProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_TagsTagValueSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TagsTagValueSpec
 */
export interface TagsTagValueSpec {
  /**
   * User-assigned description of the TagValue. Must not exceed 256 characters.
   *
   * @schema TagsTagValueSpec#description
   */
  readonly description?: string;

  /**
   * @schema TagsTagValueSpec#parentRef
   */
  readonly parentRef: TagsTagValueSpecParentRef;

  /**
   * Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.
   *
   * @schema TagsTagValueSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Immutable. Input only. User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey.
   *
   * The short name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
   *
   * @schema TagsTagValueSpec#shortName
   */
  readonly shortName: string;

}

/**
 * Converts an object of type 'TagsTagValueSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TagsTagValueSpec(obj: TagsTagValueSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'description': obj.description,
    'parentRef': toJson_TagsTagValueSpecParentRef(obj.parentRef),
    'resourceID': obj.resourceId,
    'shortName': obj.shortName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TagsTagValueSpecParentRef
 */
export interface TagsTagValueSpecParentRef {
  /**
   * Allowed value: string of the format `tagKeys/{{value}}`, where {{value}} is the `name` field of a `TagsTagKey` resource.
   *
   * @schema TagsTagValueSpecParentRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema TagsTagValueSpecParentRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema TagsTagValueSpecParentRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'TagsTagValueSpecParentRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TagsTagValueSpecParentRef(obj: TagsTagValueSpecParentRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

