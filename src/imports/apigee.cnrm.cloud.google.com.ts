// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema ApigeeEnvironment
 */
export class ApigeeEnvironment extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ApigeeEnvironment"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'apigee.cnrm.cloud.google.com/v1beta1',
    kind: 'ApigeeEnvironment',
  }

  /**
   * Renders a Kubernetes manifest for "ApigeeEnvironment".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ApigeeEnvironmentProps): any {
    return {
      ...ApigeeEnvironment.GVK,
      ...toJson_ApigeeEnvironmentProps(props),
    };
  }

  /**
   * Defines a "ApigeeEnvironment" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ApigeeEnvironmentProps) {
    super(scope, id, {
      ...ApigeeEnvironment.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...ApigeeEnvironment.GVK,
      ...toJson_ApigeeEnvironmentProps(resolved),
    };
  }
}

/**
 * @schema ApigeeEnvironment
 */
export interface ApigeeEnvironmentProps {
  /**
   * @schema ApigeeEnvironment#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema ApigeeEnvironment#spec
   */
  readonly spec: ApigeeEnvironmentSpec;

}

/**
 * Converts an object of type 'ApigeeEnvironmentProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeEnvironmentProps(obj: ApigeeEnvironmentProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_ApigeeEnvironmentSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ApigeeEnvironmentSpec
 */
export interface ApigeeEnvironmentSpec {
  /**
   * Immutable.
   *
   * @schema ApigeeEnvironmentSpec#apigeeOrganizationRef
   */
  readonly apigeeOrganizationRef: ApigeeEnvironmentSpecApigeeOrganizationRef;

  /**
   * Optional. Description of the environment.
   *
   * @schema ApigeeEnvironmentSpec#description
   */
  readonly description?: string;

  /**
   * Optional. Display name for this environment.
   *
   * @schema ApigeeEnvironmentSpec#displayName
   */
  readonly displayName?: string;

  /**
   * Optional. Key-value pairs that may be used for customizing the environment.
   *
   * @schema ApigeeEnvironmentSpec#properties
   */
  readonly properties?: { [key: string]: string };

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema ApigeeEnvironmentSpec#resourceID
   */
  readonly resourceId?: string;

}

/**
 * Converts an object of type 'ApigeeEnvironmentSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeEnvironmentSpec(obj: ApigeeEnvironmentSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apigeeOrganizationRef': toJson_ApigeeEnvironmentSpecApigeeOrganizationRef(obj.apigeeOrganizationRef),
    'description': obj.description,
    'displayName': obj.displayName,
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'resourceID': obj.resourceId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema ApigeeEnvironmentSpecApigeeOrganizationRef
 */
export interface ApigeeEnvironmentSpecApigeeOrganizationRef {
  /**
   * The apigee organization for the resource
   *
   * Allowed value: The Google Cloud resource name of an `ApigeeOrganization` resource (format: `organizations/{{name}}`).
   *
   * @schema ApigeeEnvironmentSpecApigeeOrganizationRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ApigeeEnvironmentSpecApigeeOrganizationRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema ApigeeEnvironmentSpecApigeeOrganizationRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'ApigeeEnvironmentSpecApigeeOrganizationRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeEnvironmentSpecApigeeOrganizationRef(obj: ApigeeEnvironmentSpecApigeeOrganizationRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema ApigeeOrganization
 */
export class ApigeeOrganization extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ApigeeOrganization"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'apigee.cnrm.cloud.google.com/v1beta1',
    kind: 'ApigeeOrganization',
  }

  /**
   * Renders a Kubernetes manifest for "ApigeeOrganization".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ApigeeOrganizationProps): any {
    return {
      ...ApigeeOrganization.GVK,
      ...toJson_ApigeeOrganizationProps(props),
    };
  }

  /**
   * Defines a "ApigeeOrganization" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ApigeeOrganizationProps) {
    super(scope, id, {
      ...ApigeeOrganization.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...ApigeeOrganization.GVK,
      ...toJson_ApigeeOrganizationProps(resolved),
    };
  }
}

/**
 * @schema ApigeeOrganization
 */
export interface ApigeeOrganizationProps {
  /**
   * @schema ApigeeOrganization#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema ApigeeOrganization#spec
   */
  readonly spec: ApigeeOrganizationSpec;

}

/**
 * Converts an object of type 'ApigeeOrganizationProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeOrganizationProps(obj: ApigeeOrganizationProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_ApigeeOrganizationSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ApigeeOrganizationSpec
 */
export interface ApigeeOrganizationSpec {
  /**
   * Addon configurations of the Apigee organization.
   *
   * @schema ApigeeOrganizationSpec#addonsConfig
   */
  readonly addonsConfig?: ApigeeOrganizationSpecAddonsConfig;

  /**
   * Immutable. Required. Primary GCP region for analytics data storage. For valid values, see (https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
   *
   * @schema ApigeeOrganizationSpec#analyticsRegion
   */
  readonly analyticsRegion: string;

  /**
   * @schema ApigeeOrganizationSpec#authorizedNetworkRef
   */
  readonly authorizedNetworkRef?: ApigeeOrganizationSpecAuthorizedNetworkRef;

  /**
   * Description of the Apigee organization.
   *
   * @schema ApigeeOrganizationSpec#description
   */
  readonly description?: string;

  /**
   * Display name for the Apigee organization.
   *
   * @schema ApigeeOrganizationSpec#displayName
   */
  readonly displayName?: string;

  /**
   * Immutable. The Project that this resource belongs to.
   *
   * @schema ApigeeOrganizationSpec#projectRef
   */
  readonly projectRef: ApigeeOrganizationSpecProjectRef;

  /**
   * Properties defined in the Apigee organization profile.
   *
   * @schema ApigeeOrganizationSpec#properties
   */
  readonly properties?: { [key: string]: string };

  /**
   * Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.
   *
   * @schema ApigeeOrganizationSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * @schema ApigeeOrganizationSpec#runtimeDatabaseEncryptionKeyRef
   */
  readonly runtimeDatabaseEncryptionKeyRef?: ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef;

  /**
   * Immutable. Required. Runtime type of the Apigee organization based on the Apigee subscription purchased. Possible values: RUNTIME_TYPE_UNSPECIFIED, CLOUD, HYBRID
   *
   * @schema ApigeeOrganizationSpec#runtimeType
   */
  readonly runtimeType: string;

}

/**
 * Converts an object of type 'ApigeeOrganizationSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeOrganizationSpec(obj: ApigeeOrganizationSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'addonsConfig': toJson_ApigeeOrganizationSpecAddonsConfig(obj.addonsConfig),
    'analyticsRegion': obj.analyticsRegion,
    'authorizedNetworkRef': toJson_ApigeeOrganizationSpecAuthorizedNetworkRef(obj.authorizedNetworkRef),
    'description': obj.description,
    'displayName': obj.displayName,
    'projectRef': toJson_ApigeeOrganizationSpecProjectRef(obj.projectRef),
    'properties': ((obj.properties) === undefined) ? undefined : (Object.entries(obj.properties).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'resourceID': obj.resourceId,
    'runtimeDatabaseEncryptionKeyRef': toJson_ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef(obj.runtimeDatabaseEncryptionKeyRef),
    'runtimeType': obj.runtimeType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Addon configurations of the Apigee organization.
 *
 * @schema ApigeeOrganizationSpecAddonsConfig
 */
export interface ApigeeOrganizationSpecAddonsConfig {
  /**
   * Configuration for the Advanced API Ops add-on.
   *
   * @schema ApigeeOrganizationSpecAddonsConfig#advancedApiOpsConfig
   */
  readonly advancedApiOpsConfig?: ApigeeOrganizationSpecAddonsConfigAdvancedApiOpsConfig;

  /**
   * Configuration for the Monetization add-on.
   *
   * @schema ApigeeOrganizationSpecAddonsConfig#monetizationConfig
   */
  readonly monetizationConfig?: ApigeeOrganizationSpecAddonsConfigMonetizationConfig;

}

/**
 * Converts an object of type 'ApigeeOrganizationSpecAddonsConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeOrganizationSpecAddonsConfig(obj: ApigeeOrganizationSpecAddonsConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'advancedApiOpsConfig': toJson_ApigeeOrganizationSpecAddonsConfigAdvancedApiOpsConfig(obj.advancedApiOpsConfig),
    'monetizationConfig': toJson_ApigeeOrganizationSpecAddonsConfigMonetizationConfig(obj.monetizationConfig),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ApigeeOrganizationSpecAuthorizedNetworkRef
 */
export interface ApigeeOrganizationSpecAuthorizedNetworkRef {
  /**
   * Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See (https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork` **Note:** Not supported for Apigee hybrid.
   *
   * Allowed value: The Google Cloud resource name of a `ComputeNetwork` resource (format: `projects/{{project}}/global/networks/{{name}}`).
   *
   * @schema ApigeeOrganizationSpecAuthorizedNetworkRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ApigeeOrganizationSpecAuthorizedNetworkRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema ApigeeOrganizationSpecAuthorizedNetworkRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'ApigeeOrganizationSpecAuthorizedNetworkRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeOrganizationSpecAuthorizedNetworkRef(obj: ApigeeOrganizationSpecAuthorizedNetworkRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. The Project that this resource belongs to.
 *
 * @schema ApigeeOrganizationSpecProjectRef
 */
export interface ApigeeOrganizationSpecProjectRef {
  /**
   * Required. Name of the GCP project in which to associate the Apigee organization. Pass the information as a query parameter using the following structure in your request: projects/<project> Authorization requires the following IAM permission on the specified resource parent: apigee.organizations.create
   *
   * Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
   *
   * @schema ApigeeOrganizationSpecProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ApigeeOrganizationSpecProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema ApigeeOrganizationSpecProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'ApigeeOrganizationSpecProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeOrganizationSpecProjectRef(obj: ApigeeOrganizationSpecProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef
 */
export interface ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef {
  /**
   * Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when (#RuntimeType) is `TRIAL`, a Google-Managed encryption key will be used. For example: "projects/foo/locations/us/keyRings/bar/cryptoKeys/baz". **Note:** Not supported for Apigee hybrid.
   *
   * Allowed value: The Google Cloud resource name of a `KMSCryptoKey` resource (format: `{{selfLink}}`).
   *
   * @schema ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef(obj: ApigeeOrganizationSpecRuntimeDatabaseEncryptionKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Configuration for the Advanced API Ops add-on.
 *
 * @schema ApigeeOrganizationSpecAddonsConfigAdvancedApiOpsConfig
 */
export interface ApigeeOrganizationSpecAddonsConfigAdvancedApiOpsConfig {
  /**
   * Flag that specifies whether the Advanced API Ops add-on is enabled.
   *
   * @schema ApigeeOrganizationSpecAddonsConfigAdvancedApiOpsConfig#enabled
   */
  readonly enabled?: boolean;

}

/**
 * Converts an object of type 'ApigeeOrganizationSpecAddonsConfigAdvancedApiOpsConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeOrganizationSpecAddonsConfigAdvancedApiOpsConfig(obj: ApigeeOrganizationSpecAddonsConfigAdvancedApiOpsConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enabled': obj.enabled,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Configuration for the Monetization add-on.
 *
 * @schema ApigeeOrganizationSpecAddonsConfigMonetizationConfig
 */
export interface ApigeeOrganizationSpecAddonsConfigMonetizationConfig {
  /**
   * Flag that specifies whether the Monetization add-on is enabled.
   *
   * @schema ApigeeOrganizationSpecAddonsConfigMonetizationConfig#enabled
   */
  readonly enabled?: boolean;

}

/**
 * Converts an object of type 'ApigeeOrganizationSpecAddonsConfigMonetizationConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ApigeeOrganizationSpecAddonsConfigMonetizationConfig(obj: ApigeeOrganizationSpecAddonsConfigMonetizationConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enabled': obj.enabled,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

