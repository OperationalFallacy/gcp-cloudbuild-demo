// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema AccessContextManagerAccessLevel
 */
export class AccessContextManagerAccessLevel extends ApiObject {
  /**
   * Returns the apiVersion and kind for "AccessContextManagerAccessLevel"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'accesscontextmanager.cnrm.cloud.google.com/v1beta1',
    kind: 'AccessContextManagerAccessLevel',
  }

  /**
   * Renders a Kubernetes manifest for "AccessContextManagerAccessLevel".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: AccessContextManagerAccessLevelProps): any {
    return {
      ...AccessContextManagerAccessLevel.GVK,
      ...toJson_AccessContextManagerAccessLevelProps(props),
    };
  }

  /**
   * Defines a "AccessContextManagerAccessLevel" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: AccessContextManagerAccessLevelProps) {
    super(scope, id, {
      ...AccessContextManagerAccessLevel.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...AccessContextManagerAccessLevel.GVK,
      ...toJson_AccessContextManagerAccessLevelProps(resolved),
    };
  }
}

/**
 * @schema AccessContextManagerAccessLevel
 */
export interface AccessContextManagerAccessLevelProps {
  /**
   * @schema AccessContextManagerAccessLevel#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema AccessContextManagerAccessLevel#spec
   */
  readonly spec: AccessContextManagerAccessLevelSpec;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelProps(obj: AccessContextManagerAccessLevelProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_AccessContextManagerAccessLevelSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerAccessLevelSpec
 */
export interface AccessContextManagerAccessLevelSpec {
  /**
   * The AccessContextManagerAccessPolicy this
   * AccessContextManagerAccessLevel lives in.
   *
   * @schema AccessContextManagerAccessLevelSpec#accessPolicyRef
   */
  readonly accessPolicyRef: AccessContextManagerAccessLevelSpecAccessPolicyRef;

  /**
   * A set of predefined conditions for the access level and a combining function.
   *
   * @schema AccessContextManagerAccessLevelSpec#basic
   */
  readonly basic?: AccessContextManagerAccessLevelSpecBasic;

  /**
   * Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
   * See CEL spec at: https://github.com/google/cel-spec.
   *
   * @schema AccessContextManagerAccessLevelSpec#custom
   */
  readonly custom?: AccessContextManagerAccessLevelSpecCustom;

  /**
   * Description of the AccessLevel and its use. Does not affect behavior.
   *
   * @schema AccessContextManagerAccessLevelSpec#description
   */
  readonly description?: string;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema AccessContextManagerAccessLevelSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Human readable title. Must be unique within the Policy.
   *
   * @schema AccessContextManagerAccessLevelSpec#title
   */
  readonly title: string;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpec(obj: AccessContextManagerAccessLevelSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessPolicyRef': toJson_AccessContextManagerAccessLevelSpecAccessPolicyRef(obj.accessPolicyRef),
    'basic': toJson_AccessContextManagerAccessLevelSpecBasic(obj.basic),
    'custom': toJson_AccessContextManagerAccessLevelSpecCustom(obj.custom),
    'description': obj.description,
    'resourceID': obj.resourceId,
    'title': obj.title,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The AccessContextManagerAccessPolicy this
 * AccessContextManagerAccessLevel lives in.
 *
 * @schema AccessContextManagerAccessLevelSpecAccessPolicyRef
 */
export interface AccessContextManagerAccessLevelSpecAccessPolicyRef {
  /**
   * Allowed value: string of the format `accessPolicies/{{value}}`, where {{value}} is the `name` field of an `AccessContextManagerAccessPolicy` resource.
   *
   * @schema AccessContextManagerAccessLevelSpecAccessPolicyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerAccessLevelSpecAccessPolicyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerAccessLevelSpecAccessPolicyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecAccessPolicyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecAccessPolicyRef(obj: AccessContextManagerAccessLevelSpecAccessPolicyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A set of predefined conditions for the access level and a combining function.
 *
 * @schema AccessContextManagerAccessLevelSpecBasic
 */
export interface AccessContextManagerAccessLevelSpecBasic {
  /**
   * How the conditions list should be combined to determine if a request
   * is granted this AccessLevel. If AND is used, each Condition in
   * conditions must be satisfied for the AccessLevel to be applied. If
   * OR is used, at least one Condition in conditions must be satisfied
   * for the AccessLevel to be applied. Default value: "AND" Possible values: ["AND", "OR"].
   *
   * @schema AccessContextManagerAccessLevelSpecBasic#combiningFunction
   */
  readonly combiningFunction?: string;

  /**
   * A set of requirements for the AccessLevel to be granted.
   *
   * @schema AccessContextManagerAccessLevelSpecBasic#conditions
   */
  readonly conditions: AccessContextManagerAccessLevelSpecBasicConditions[];

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecBasic' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecBasic(obj: AccessContextManagerAccessLevelSpecBasic | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'combiningFunction': obj.combiningFunction,
    'conditions': obj.conditions?.map(y => toJson_AccessContextManagerAccessLevelSpecBasicConditions(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
 * See CEL spec at: https://github.com/google/cel-spec.
 *
 * @schema AccessContextManagerAccessLevelSpecCustom
 */
export interface AccessContextManagerAccessLevelSpecCustom {
  /**
   * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
   * This page details the objects and attributes that are used to the build the CEL expressions for
   * custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
   *
   * @schema AccessContextManagerAccessLevelSpecCustom#expr
   */
  readonly expr: AccessContextManagerAccessLevelSpecCustomExpr;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecCustom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecCustom(obj: AccessContextManagerAccessLevelSpecCustom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'expr': toJson_AccessContextManagerAccessLevelSpecCustomExpr(obj.expr),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerAccessLevelSpecBasicConditions
 */
export interface AccessContextManagerAccessLevelSpecBasicConditions {
  /**
   * Device specific restrictions, all restrictions must hold for
   * the Condition to be true. If not specified, all devices are
   * allowed.
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditions#devicePolicy
   */
  readonly devicePolicy?: AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy;

  /**
   * A list of CIDR block IP subnetwork specification. May be IPv4
   * or IPv6.
   * Note that for a CIDR IP address block, the specified IP address
   * portion must be properly truncated (i.e. all the host bits must
   * be zero) or the input is considered malformed. For example,
   * "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
   * for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
   * is not. The originating IP of a request must be in one of the
   * listed subnets in order for this Condition to be true.
   * If empty, all IP addresses are allowed.
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditions#ipSubnetworks
   */
  readonly ipSubnetworks?: string[];

  /**
   * @schema AccessContextManagerAccessLevelSpecBasicConditions#members
   */
  readonly members?: AccessContextManagerAccessLevelSpecBasicConditionsMembers[];

  /**
   * Whether to negate the Condition. If true, the Condition becomes
   * a NAND over its non-empty fields, each field must be false for
   * the Condition overall to be satisfied. Defaults to false.
   *
   * @default false.
   * @schema AccessContextManagerAccessLevelSpecBasicConditions#negate
   */
  readonly negate?: boolean;

  /**
   * The request must originate from one of the provided
   * countries/regions.
   * Format: A valid ISO 3166-1 alpha-2 code.
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditions#regions
   */
  readonly regions?: string[];

  /**
   * @schema AccessContextManagerAccessLevelSpecBasicConditions#requiredAccessLevels
   */
  readonly requiredAccessLevels?: AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels[];

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecBasicConditions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecBasicConditions(obj: AccessContextManagerAccessLevelSpecBasicConditions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePolicy': toJson_AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy(obj.devicePolicy),
    'ipSubnetworks': obj.ipSubnetworks?.map(y => y),
    'members': obj.members?.map(y => toJson_AccessContextManagerAccessLevelSpecBasicConditionsMembers(y)),
    'negate': obj.negate,
    'regions': obj.regions?.map(y => y),
    'requiredAccessLevels': obj.requiredAccessLevels?.map(y => toJson_AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
 * This page details the objects and attributes that are used to the build the CEL expressions for
 * custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
 *
 * @schema AccessContextManagerAccessLevelSpecCustomExpr
 */
export interface AccessContextManagerAccessLevelSpecCustomExpr {
  /**
   * Description of the expression.
   *
   * @schema AccessContextManagerAccessLevelSpecCustomExpr#description
   */
  readonly description?: string;

  /**
   * Textual representation of an expression in Common Expression Language syntax.
   *
   * @schema AccessContextManagerAccessLevelSpecCustomExpr#expression
   */
  readonly expression: string;

  /**
   * String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
   *
   * @schema AccessContextManagerAccessLevelSpecCustomExpr#location
   */
  readonly location?: string;

  /**
   * Title for the expression, i.e. a short string describing its purpose.
   *
   * @schema AccessContextManagerAccessLevelSpecCustomExpr#title
   */
  readonly title?: string;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecCustomExpr' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecCustomExpr(obj: AccessContextManagerAccessLevelSpecCustomExpr | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'description': obj.description,
    'expression': obj.expression,
    'location': obj.location,
    'title': obj.title,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Device specific restrictions, all restrictions must hold for
 * the Condition to be true. If not specified, all devices are
 * allowed.
 *
 * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy
 */
export interface AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy {
  /**
   * A list of allowed device management levels.
   * An empty list allows all management levels. Possible values: ["MANAGEMENT_UNSPECIFIED", "NONE", "BASIC", "COMPLETE"].
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy#allowedDeviceManagementLevels
   */
  readonly allowedDeviceManagementLevels?: string[];

  /**
   * A list of allowed encryptions statuses.
   * An empty list allows all statuses. Possible values: ["ENCRYPTION_UNSPECIFIED", "ENCRYPTION_UNSUPPORTED", "UNENCRYPTED", "ENCRYPTED"].
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy#allowedEncryptionStatuses
   */
  readonly allowedEncryptionStatuses?: string[];

  /**
   * A list of allowed OS versions.
   * An empty list allows all types and all versions.
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy#osConstraints
   */
  readonly osConstraints?: AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints[];

  /**
   * Whether the device needs to be approved by the customer admin.
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy#requireAdminApproval
   */
  readonly requireAdminApproval?: boolean;

  /**
   * Whether the device needs to be corp owned.
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy#requireCorpOwned
   */
  readonly requireCorpOwned?: boolean;

  /**
   * Whether or not screenlock is required for the DevicePolicy
   * to be true. Defaults to false.
   *
   * @default false.
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy#requireScreenLock
   */
  readonly requireScreenLock?: boolean;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy(obj: AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedDeviceManagementLevels': obj.allowedDeviceManagementLevels?.map(y => y),
    'allowedEncryptionStatuses': obj.allowedEncryptionStatuses?.map(y => y),
    'osConstraints': obj.osConstraints?.map(y => toJson_AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints(y)),
    'requireAdminApproval': obj.requireAdminApproval,
    'requireCorpOwned': obj.requireCorpOwned,
    'requireScreenLock': obj.requireScreenLock,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An allowed list of members (users, service accounts).
 * Using groups is not supported.
 *
 * The signed-in user originating the request must be a part of one
 * of the provided members. If not specified, a request may come
 * from any user (logged in/not logged in, not present in any
 * groups, etc.).
 *
 * @schema AccessContextManagerAccessLevelSpecBasicConditionsMembers
 */
export interface AccessContextManagerAccessLevelSpecBasicConditionsMembers {
  /**
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsMembers#serviceAccountRef
   */
  readonly serviceAccountRef?: AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef;

  /**
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsMembers#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecBasicConditionsMembers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecBasicConditionsMembers(obj: AccessContextManagerAccessLevelSpecBasicConditionsMembers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'serviceAccountRef': toJson_AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef(obj.serviceAccountRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A list of other access levels defined in the same policy.
 * Referencing an AccessContextManagerAccessLevel which does not exist
 * is an error. All access levels listed must be granted for the
 * condition to be true.
 *
 * @schema AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels
 */
export interface AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels {
  /**
   * Allowed value: The `name` field of an `AccessContextManagerAccessLevel` resource.
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels(obj: AccessContextManagerAccessLevelSpecBasicConditionsRequiredAccessLevels | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints
 */
export interface AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints {
  /**
   * The minimum allowed OS version. If not set, any version
   * of this OS satisfies the constraint.
   * Format: "major.minor.patch" such as "10.5.301", "9.2.1".
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints#minimumVersion
   */
  readonly minimumVersion?: string;

  /**
   * The operating system type of the device. Possible values: ["OS_UNSPECIFIED", "DESKTOP_MAC", "DESKTOP_WINDOWS", "DESKTOP_LINUX", "DESKTOP_CHROME_OS", "ANDROID", "IOS"].
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints#osType
   */
  readonly osType: string;

  /**
   * If you specify DESKTOP_CHROME_OS for osType, you can optionally include requireVerifiedChromeOs to require Chrome Verified Access.
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints#requireVerifiedChromeOs
   */
  readonly requireVerifiedChromeOs?: boolean;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints(obj: AccessContextManagerAccessLevelSpecBasicConditionsDevicePolicyOsConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'minimumVersion': obj.minimumVersion,
    'osType': obj.osType,
    'requireVerifiedChromeOs': obj.requireVerifiedChromeOs,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef
 */
export interface AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef {
  /**
   * Allowed value: string of the format `serviceAccount:{{value}}`, where {{value}} is the `email` field of an `IAMServiceAccount` resource.
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef(obj: AccessContextManagerAccessLevelSpecBasicConditionsMembersServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema AccessContextManagerAccessPolicy
 */
export class AccessContextManagerAccessPolicy extends ApiObject {
  /**
   * Returns the apiVersion and kind for "AccessContextManagerAccessPolicy"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'accesscontextmanager.cnrm.cloud.google.com/v1beta1',
    kind: 'AccessContextManagerAccessPolicy',
  }

  /**
   * Renders a Kubernetes manifest for "AccessContextManagerAccessPolicy".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: AccessContextManagerAccessPolicyProps): any {
    return {
      ...AccessContextManagerAccessPolicy.GVK,
      ...toJson_AccessContextManagerAccessPolicyProps(props),
    };
  }

  /**
   * Defines a "AccessContextManagerAccessPolicy" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: AccessContextManagerAccessPolicyProps) {
    super(scope, id, {
      ...AccessContextManagerAccessPolicy.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...AccessContextManagerAccessPolicy.GVK,
      ...toJson_AccessContextManagerAccessPolicyProps(resolved),
    };
  }
}

/**
 * @schema AccessContextManagerAccessPolicy
 */
export interface AccessContextManagerAccessPolicyProps {
  /**
   * @schema AccessContextManagerAccessPolicy#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema AccessContextManagerAccessPolicy#spec
   */
  readonly spec: AccessContextManagerAccessPolicySpec;

}

/**
 * Converts an object of type 'AccessContextManagerAccessPolicyProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessPolicyProps(obj: AccessContextManagerAccessPolicyProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_AccessContextManagerAccessPolicySpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerAccessPolicySpec
 */
export interface AccessContextManagerAccessPolicySpec {
  /**
   * Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.
   *
   * @schema AccessContextManagerAccessPolicySpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Human readable title. Does not affect behavior.
   *
   * @schema AccessContextManagerAccessPolicySpec#title
   */
  readonly title: string;

}

/**
 * Converts an object of type 'AccessContextManagerAccessPolicySpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerAccessPolicySpec(obj: AccessContextManagerAccessPolicySpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'resourceID': obj.resourceId,
    'title': obj.title,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 *
 *
 * @schema AccessContextManagerServicePerimeter
 */
export class AccessContextManagerServicePerimeter extends ApiObject {
  /**
   * Returns the apiVersion and kind for "AccessContextManagerServicePerimeter"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'accesscontextmanager.cnrm.cloud.google.com/v1beta1',
    kind: 'AccessContextManagerServicePerimeter',
  }

  /**
   * Renders a Kubernetes manifest for "AccessContextManagerServicePerimeter".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: AccessContextManagerServicePerimeterProps): any {
    return {
      ...AccessContextManagerServicePerimeter.GVK,
      ...toJson_AccessContextManagerServicePerimeterProps(props),
    };
  }

  /**
   * Defines a "AccessContextManagerServicePerimeter" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: AccessContextManagerServicePerimeterProps) {
    super(scope, id, {
      ...AccessContextManagerServicePerimeter.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...AccessContextManagerServicePerimeter.GVK,
      ...toJson_AccessContextManagerServicePerimeterProps(resolved),
    };
  }
}

/**
 * @schema AccessContextManagerServicePerimeter
 */
export interface AccessContextManagerServicePerimeterProps {
  /**
   * @schema AccessContextManagerServicePerimeter#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema AccessContextManagerServicePerimeter#spec
   */
  readonly spec: AccessContextManagerServicePerimeterSpec;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterProps(obj: AccessContextManagerServicePerimeterProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_AccessContextManagerServicePerimeterSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpec
 */
export interface AccessContextManagerServicePerimeterSpec {
  /**
   * The AccessContextManagerAccessPolicy this
   * AccessContextManagerServicePerimeter lives in.
   *
   * @schema AccessContextManagerServicePerimeterSpec#accessPolicyRef
   */
  readonly accessPolicyRef: AccessContextManagerServicePerimeterSpecAccessPolicyRef;

  /**
   * Description of the ServicePerimeter and its use. Does not affect
   * behavior.
   *
   * @schema AccessContextManagerServicePerimeterSpec#description
   */
  readonly description?: string;

  /**
   * Immutable. Specifies the type of the Perimeter. There are two types: regular and
   * bridge. Regular Service Perimeter contains resources, access levels,
   * and restricted services. Every resource can be in at most
   * ONE regular Service Perimeter.
   *
   * In addition to being in a regular service perimeter, a resource can also
   * be in zero or more perimeter bridges. A perimeter bridge only contains
   * resources. Cross project operations are permitted if all effected
   * resources share some perimeter (whether bridge or regular). Perimeter
   * Bridge does not contain access levels or services: those are governed
   * entirely by the regular perimeter that resource is in.
   *
   * Perimeter Bridges are typically useful when building more complex
   * topologies with many independent perimeters that need to share some data
   * with a common perimeter, but should not be able to share data among
   * themselves. Default value: "PERIMETER_TYPE_REGULAR" Possible values: ["PERIMETER_TYPE_REGULAR", "PERIMETER_TYPE_BRIDGE"].
   *
   * @schema AccessContextManagerServicePerimeterSpec#perimeterType
   */
  readonly perimeterType?: string;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema AccessContextManagerServicePerimeterSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Proposed (or dry run) ServicePerimeter configuration.
   * This configuration allows to specify and test ServicePerimeter configuration
   * without enforcing actual access restrictions. Only allowed to be set when
   * the 'useExplicitDryRunSpec' flag is set.
   *
   * @schema AccessContextManagerServicePerimeterSpec#spec
   */
  readonly spec?: AccessContextManagerServicePerimeterSpecSpec;

  /**
   * ServicePerimeter configuration. Specifies sets of resources,
   * restricted services and access levels that determine
   * perimeter content and boundaries.
   *
   * @schema AccessContextManagerServicePerimeterSpec#status
   */
  readonly status?: AccessContextManagerServicePerimeterSpecStatus;

  /**
   * Human readable title. Must be unique within the Policy.
   *
   * @schema AccessContextManagerServicePerimeterSpec#title
   */
  readonly title: string;

  /**
   * Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists
   * for all Service Perimeters, and that spec is identical to the status for those
   * Service Perimeters. When this flag is set, it inhibits the generation of the
   * implicit spec, thereby allowing the user to explicitly provide a
   * configuration ("spec") to use in a dry-run version of the Service Perimeter.
   * This allows the user to test changes to the enforced config ("status") without
   * actually enforcing them. This testing is done through analyzing the differences
   * between currently enforced and suggested restrictions. useExplicitDryRunSpec must
   * bet set to True if any of the fields in the spec are set to non-default values.
   *
   * @schema AccessContextManagerServicePerimeterSpec#useExplicitDryRunSpec
   */
  readonly useExplicitDryRunSpec?: boolean;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpec(obj: AccessContextManagerServicePerimeterSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessPolicyRef': toJson_AccessContextManagerServicePerimeterSpecAccessPolicyRef(obj.accessPolicyRef),
    'description': obj.description,
    'perimeterType': obj.perimeterType,
    'resourceID': obj.resourceId,
    'spec': toJson_AccessContextManagerServicePerimeterSpecSpec(obj.spec),
    'status': toJson_AccessContextManagerServicePerimeterSpecStatus(obj.status),
    'title': obj.title,
    'useExplicitDryRunSpec': obj.useExplicitDryRunSpec,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The AccessContextManagerAccessPolicy this
 * AccessContextManagerServicePerimeter lives in.
 *
 * @schema AccessContextManagerServicePerimeterSpecAccessPolicyRef
 */
export interface AccessContextManagerServicePerimeterSpecAccessPolicyRef {
  /**
   * Allowed value: string of the format `accessPolicies/{{value}}`, where {{value}} is the `name` field of an `AccessContextManagerAccessPolicy` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecAccessPolicyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecAccessPolicyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecAccessPolicyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecAccessPolicyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecAccessPolicyRef(obj: AccessContextManagerServicePerimeterSpecAccessPolicyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Proposed (or dry run) ServicePerimeter configuration.
 * This configuration allows to specify and test ServicePerimeter configuration
 * without enforcing actual access restrictions. Only allowed to be set when
 * the 'useExplicitDryRunSpec' flag is set.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpec
 */
export interface AccessContextManagerServicePerimeterSpecSpec {
  /**
   * @schema AccessContextManagerServicePerimeterSpecSpec#accessLevels
   */
  readonly accessLevels?: AccessContextManagerServicePerimeterSpecSpecAccessLevels[];

  /**
   * List of EgressPolicies to apply to the perimeter. A perimeter may
   * have multiple EgressPolicies, each of which is evaluated separately.
   * Access is granted if any EgressPolicy grants it. Must be empty for
   * a perimeter bridge.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpec#egressPolicies
   */
  readonly egressPolicies?: AccessContextManagerServicePerimeterSpecSpecEgressPolicies[];

  /**
   * List of 'IngressPolicies' to apply to the perimeter. A perimeter may
   * have multiple 'IngressPolicies', each of which is evaluated
   * separately. Access is granted if any 'Ingress Policy' grants it.
   * Must be empty for a perimeter bridge.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpec#ingressPolicies
   */
  readonly ingressPolicies?: AccessContextManagerServicePerimeterSpecSpecIngressPolicies[];

  /**
   * @schema AccessContextManagerServicePerimeterSpecSpec#resources
   */
  readonly resources?: AccessContextManagerServicePerimeterSpecSpecResources[];

  /**
   * GCP services that are subject to the Service Perimeter
   * restrictions. Must contain a list of services. For example, if
   * 'storage.googleapis.com' is specified, access to the storage
   * buckets inside the perimeter must meet the perimeter's access
   * restrictions.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpec#restrictedServices
   */
  readonly restrictedServices?: string[];

  /**
   * Specifies how APIs are allowed to communicate within the Service
   * Perimeter.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpec#vpcAccessibleServices
   */
  readonly vpcAccessibleServices?: AccessContextManagerServicePerimeterSpecSpecVpcAccessibleServices;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpec(obj: AccessContextManagerServicePerimeterSpecSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessLevels': obj.accessLevels?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecAccessLevels(y)),
    'egressPolicies': obj.egressPolicies?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecEgressPolicies(y)),
    'ingressPolicies': obj.ingressPolicies?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecIngressPolicies(y)),
    'resources': obj.resources?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecResources(y)),
    'restrictedServices': obj.restrictedServices?.map(y => y),
    'vpcAccessibleServices': toJson_AccessContextManagerServicePerimeterSpecSpecVpcAccessibleServices(obj.vpcAccessibleServices),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ServicePerimeter configuration. Specifies sets of resources,
 * restricted services and access levels that determine
 * perimeter content and boundaries.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatus
 */
export interface AccessContextManagerServicePerimeterSpecStatus {
  /**
   * @schema AccessContextManagerServicePerimeterSpecStatus#accessLevels
   */
  readonly accessLevels?: AccessContextManagerServicePerimeterSpecStatusAccessLevels[];

  /**
   * List of EgressPolicies to apply to the perimeter. A perimeter may
   * have multiple EgressPolicies, each of which is evaluated separately.
   * Access is granted if any EgressPolicy grants it. Must be empty for
   * a perimeter bridge.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatus#egressPolicies
   */
  readonly egressPolicies?: AccessContextManagerServicePerimeterSpecStatusEgressPolicies[];

  /**
   * List of 'IngressPolicies' to apply to the perimeter. A perimeter may
   * have multiple 'IngressPolicies', each of which is evaluated
   * separately. Access is granted if any 'Ingress Policy' grants it.
   * Must be empty for a perimeter bridge.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatus#ingressPolicies
   */
  readonly ingressPolicies?: AccessContextManagerServicePerimeterSpecStatusIngressPolicies[];

  /**
   * @schema AccessContextManagerServicePerimeterSpecStatus#resources
   */
  readonly resources?: AccessContextManagerServicePerimeterSpecStatusResources[];

  /**
   * GCP services that are subject to the Service Perimeter
   * restrictions. Must contain a list of services. For example, if
   * 'storage.googleapis.com' is specified, access to the storage
   * buckets inside the perimeter must meet the perimeter's access
   * restrictions.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatus#restrictedServices
   */
  readonly restrictedServices?: string[];

  /**
   * Specifies how APIs are allowed to communicate within the Service
   * Perimeter.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatus#vpcAccessibleServices
   */
  readonly vpcAccessibleServices?: AccessContextManagerServicePerimeterSpecStatusVpcAccessibleServices;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatus' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatus(obj: AccessContextManagerServicePerimeterSpecStatus | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessLevels': obj.accessLevels?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusAccessLevels(y)),
    'egressPolicies': obj.egressPolicies?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusEgressPolicies(y)),
    'ingressPolicies': obj.ingressPolicies?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusIngressPolicies(y)),
    'resources': obj.resources?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusResources(y)),
    'restrictedServices': obj.restrictedServices?.map(y => y),
    'vpcAccessibleServices': toJson_AccessContextManagerServicePerimeterSpecStatusVpcAccessibleServices(obj.vpcAccessibleServices),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of AccessLevel resource names that allow resources within
 * the ServicePerimeter to be accessed from the internet. AccessLevels listed
 * must be in the same policy as this ServicePerimeter.
 * Referencing a nonexistent AccessLevel is a syntax error. If no
 * AccessLevel names are listed, resources within the perimeter can
 * only be accessed via GCP calls with request origins within the
 * perimeter. For Service Perimeter Bridge, must be empty.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecAccessLevels
 */
export interface AccessContextManagerServicePerimeterSpecSpecAccessLevels {
  /**
   * Allowed value: string of the format `{{parent}}/accessLevels/{{value}}`, where {{value}} is the `name` field of an `AccessContextManagerAccessLevel` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecAccessLevels#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecAccessLevels#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecAccessLevels#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecAccessLevels' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecAccessLevels(obj: AccessContextManagerServicePerimeterSpecSpecAccessLevels | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecEgressPolicies
 */
export interface AccessContextManagerServicePerimeterSpecSpecEgressPolicies {
  /**
   * Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPolicies#egressFrom
   */
  readonly egressFrom?: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFrom;

  /**
   * Defines the conditions on the 'ApiOperation' and destination resources that
   * cause this 'EgressPolicy' to apply.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPolicies#egressTo
   */
  readonly egressTo?: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecEgressPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecEgressPolicies(obj: AccessContextManagerServicePerimeterSpecSpecEgressPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'egressFrom': toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFrom(obj.egressFrom),
    'egressTo': toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo(obj.egressTo),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPolicies
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPolicies {
  /**
   * Defines the conditions on the source of a request causing this 'IngressPolicy'
   * to apply.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPolicies#ingressFrom
   */
  readonly ingressFrom?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom;

  /**
   * Defines the conditions on the 'ApiOperation' and request destination that cause
   * this 'IngressPolicy' to apply.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPolicies#ingressTo
   */
  readonly ingressTo?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressTo;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPolicies(obj: AccessContextManagerServicePerimeterSpecSpecIngressPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ingressFrom': toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom(obj.ingressFrom),
    'ingressTo': toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressTo(obj.ingressTo),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of GCP resources that are inside of the service perimeter.
 * Currently only projects are allowed.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecResources
 */
export interface AccessContextManagerServicePerimeterSpecSpecResources {
  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecResources#projectRef
   */
  readonly projectRef?: AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecResources(obj: AccessContextManagerServicePerimeterSpecSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'projectRef': toJson_AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef(obj.projectRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies how APIs are allowed to communicate within the Service
 * Perimeter.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecVpcAccessibleServices
 */
export interface AccessContextManagerServicePerimeterSpecSpecVpcAccessibleServices {
  /**
   * The list of APIs usable within the Service Perimeter.
   * Must be empty unless 'enableRestriction' is True.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecVpcAccessibleServices#allowedServices
   */
  readonly allowedServices?: string[];

  /**
   * Whether to restrict API calls within the Service Perimeter to the
   * list of APIs specified in 'allowedServices'.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecVpcAccessibleServices#enableRestriction
   */
  readonly enableRestriction?: boolean;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecVpcAccessibleServices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecVpcAccessibleServices(obj: AccessContextManagerServicePerimeterSpecSpecVpcAccessibleServices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedServices': obj.allowedServices?.map(y => y),
    'enableRestriction': obj.enableRestriction,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of AccessLevel resource names that allow resources within
 * the ServicePerimeter to be accessed from the internet. AccessLevels listed
 * must be in the same policy as this ServicePerimeter.
 * Referencing a nonexistent AccessLevel is a syntax error. If no
 * AccessLevel names are listed, resources within the perimeter can
 * only be accessed via GCP calls with request origins within the
 * perimeter. For Service Perimeter Bridge, must be empty.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusAccessLevels
 */
export interface AccessContextManagerServicePerimeterSpecStatusAccessLevels {
  /**
   * Allowed value: string of the format `{{parent}}/accessLevels/{{value}}`, where {{value}} is the `name` field of an `AccessContextManagerAccessLevel` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusAccessLevels#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusAccessLevels#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusAccessLevels#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusAccessLevels' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusAccessLevels(obj: AccessContextManagerServicePerimeterSpecStatusAccessLevels | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusEgressPolicies
 */
export interface AccessContextManagerServicePerimeterSpecStatusEgressPolicies {
  /**
   * Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPolicies#egressFrom
   */
  readonly egressFrom?: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFrom;

  /**
   * Defines the conditions on the 'ApiOperation' and destination resources that
   * cause this 'EgressPolicy' to apply.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPolicies#egressTo
   */
  readonly egressTo?: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusEgressPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusEgressPolicies(obj: AccessContextManagerServicePerimeterSpecStatusEgressPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'egressFrom': toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFrom(obj.egressFrom),
    'egressTo': toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo(obj.egressTo),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPolicies
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPolicies {
  /**
   * Defines the conditions on the source of a request causing this 'IngressPolicy'
   * to apply.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPolicies#ingressFrom
   */
  readonly ingressFrom?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom;

  /**
   * Defines the conditions on the 'ApiOperation' and request destination that cause
   * this 'IngressPolicy' to apply.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPolicies#ingressTo
   */
  readonly ingressTo?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressTo;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPolicies(obj: AccessContextManagerServicePerimeterSpecStatusIngressPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'ingressFrom': toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom(obj.ingressFrom),
    'ingressTo': toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressTo(obj.ingressTo),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of GCP resources that are inside of the service perimeter.
 * Currently only projects are allowed.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusResources
 */
export interface AccessContextManagerServicePerimeterSpecStatusResources {
  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusResources#projectRef
   */
  readonly projectRef?: AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusResources(obj: AccessContextManagerServicePerimeterSpecStatusResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'projectRef': toJson_AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef(obj.projectRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies how APIs are allowed to communicate within the Service
 * Perimeter.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusVpcAccessibleServices
 */
export interface AccessContextManagerServicePerimeterSpecStatusVpcAccessibleServices {
  /**
   * The list of APIs usable within the Service Perimeter.
   * Must be empty unless 'enableRestriction' is True.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusVpcAccessibleServices#allowedServices
   */
  readonly allowedServices?: string[];

  /**
   * Whether to restrict API calls within the Service Perimeter to the
   * list of APIs specified in 'allowedServices'.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusVpcAccessibleServices#enableRestriction
   */
  readonly enableRestriction?: boolean;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusVpcAccessibleServices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusVpcAccessibleServices(obj: AccessContextManagerServicePerimeterSpecStatusVpcAccessibleServices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedServices': obj.allowedServices?.map(y => y),
    'enableRestriction': obj.enableRestriction,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFrom
 */
export interface AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFrom {
  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFrom#identities
   */
  readonly identities?: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentities[];

  /**
   * Specifies the type of identities that are allowed access to outside the
   * perimeter. If left unspecified, then members of 'identities' field will
   * be allowed access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"].
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFrom#identityType
   */
  readonly identityType?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFrom(obj: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'identities': obj.identities?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentities(y)),
    'identityType': obj.identityType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines the conditions on the 'ApiOperation' and destination resources that
 * cause this 'EgressPolicy' to apply.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo
 */
export interface AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo {
  /**
   * A list of external resources that are allowed to be accessed. A request
   * matches if it contains an external resource in this list (Example:
   * s3://bucket/path). Currently '*' is not allowed.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo#externalResources
   */
  readonly externalResources?: string[];

  /**
   * A list of 'ApiOperations' that this egress rule applies to. A request matches
   * if it contains an operation/service in this list.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo#operations
   */
  readonly operations?: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperations[];

  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo#resources
   */
  readonly resources?: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResources[];

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo(obj: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressTo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'externalResources': obj.externalResources?.map(y => y),
    'operations': obj.operations?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperations(y)),
    'resources': obj.resources?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines the conditions on the source of a request causing this 'IngressPolicy'
 * to apply.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom {
  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom#identities
   */
  readonly identities?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentities[];

  /**
   * Specifies the type of identities that are allowed access from outside the
   * perimeter. If left unspecified, then members of 'identities' field will be
   * allowed access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"].
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom#identityType
   */
  readonly identityType?: string;

  /**
   * Sources that this 'IngressPolicy' authorizes access from.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom#sources
   */
  readonly sources?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSources[];

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'identities': obj.identities?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentities(y)),
    'identityType': obj.identityType,
    'sources': obj.sources?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines the conditions on the 'ApiOperation' and request destination that cause
 * this 'IngressPolicy' to apply.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressTo
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressTo {
  /**
   * A list of 'ApiOperations' the sources specified in corresponding 'IngressFrom'
   * are allowed to perform in this 'ServicePerimeter'.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressTo#operations
   */
  readonly operations?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperations[];

  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressTo#resources
   */
  readonly resources?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResources[];

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressTo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressTo(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressTo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'operations': obj.operations?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperations(y)),
    'resources': obj.resources?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef
 */
export interface AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef {
  /**
   * Allowed value: string of the format `projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef(obj: AccessContextManagerServicePerimeterSpecSpecResourcesProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFrom
 */
export interface AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFrom {
  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFrom#identities
   */
  readonly identities?: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentities[];

  /**
   * Specifies the type of identities that are allowed access to outside the
   * perimeter. If left unspecified, then members of 'identities' field will
   * be allowed access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"].
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFrom#identityType
   */
  readonly identityType?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFrom(obj: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'identities': obj.identities?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentities(y)),
    'identityType': obj.identityType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines the conditions on the 'ApiOperation' and destination resources that
 * cause this 'EgressPolicy' to apply.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo
 */
export interface AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo {
  /**
   * A list of external resources that are allowed to be accessed. A request
   * matches if it contains an external resource in this list (Example:
   * s3://bucket/path). Currently '*' is not allowed.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo#externalResources
   */
  readonly externalResources?: string[];

  /**
   * A list of 'ApiOperations' that this egress rule applies to. A request matches
   * if it contains an operation/service in this list.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo#operations
   */
  readonly operations?: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperations[];

  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo#resources
   */
  readonly resources?: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResources[];

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo(obj: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressTo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'externalResources': obj.externalResources?.map(y => y),
    'operations': obj.operations?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperations(y)),
    'resources': obj.resources?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines the conditions on the source of a request causing this 'IngressPolicy'
 * to apply.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom {
  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom#identities
   */
  readonly identities?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentities[];

  /**
   * Specifies the type of identities that are allowed access from outside the
   * perimeter. If left unspecified, then members of 'identities' field will be
   * allowed access. Possible values: ["IDENTITY_TYPE_UNSPECIFIED", "ANY_IDENTITY", "ANY_USER_ACCOUNT", "ANY_SERVICE_ACCOUNT"].
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom#identityType
   */
  readonly identityType?: string;

  /**
   * Sources that this 'IngressPolicy' authorizes access from.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom#sources
   */
  readonly sources?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSources[];

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'identities': obj.identities?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentities(y)),
    'identityType': obj.identityType,
    'sources': obj.sources?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines the conditions on the 'ApiOperation' and request destination that cause
 * this 'IngressPolicy' to apply.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressTo
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressTo {
  /**
   * A list of 'ApiOperations' the sources specified in corresponding 'IngressFrom'
   * are allowed to perform in this 'ServicePerimeter'.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressTo#operations
   */
  readonly operations?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperations[];

  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressTo#resources
   */
  readonly resources?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResources[];

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressTo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressTo(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressTo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'operations': obj.operations?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperations(y)),
    'resources': obj.resources?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef
 */
export interface AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef {
  /**
   * Allowed value: string of the format `projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef(obj: AccessContextManagerServicePerimeterSpecStatusResourcesProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of identities that are allowed access through this
 * EgressPolicy. Should be in the format of email address. The email
 * address should represent individual user or service account only.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentities
 */
export interface AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentities {
  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentities#serviceAccountRef
   */
  readonly serviceAccountRef?: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef;

  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentities#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentities(obj: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'serviceAccountRef': toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef(obj.serviceAccountRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperations
 */
export interface AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperations {
  /**
   * API methods or permissions to allow. Method or permission must belong
   * to the service specified by 'serviceName' field. A single MethodSelector
   * entry with '*' specified for the 'method' field will allow all methods
   * AND permissions for the service specified in 'serviceName'.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperations#methodSelectors
   */
  readonly methodSelectors?: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperationsMethodSelectors[];

  /**
   * The name of the API whose methods or permissions the 'IngressPolicy' or
   * 'EgressPolicy' want to allow. A single 'ApiOperation' with serviceName
   * field set to '*' will allow all methods AND permissions for all services.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperations#serviceName
   */
  readonly serviceName?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperations(obj: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'methodSelectors': obj.methodSelectors?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperationsMethodSelectors(y)),
    'serviceName': obj.serviceName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of resources, currently only projects in the form
 * "projects/{project_number}". A request
 * matches if it contains a resource in this list.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResources
 */
export interface AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResources {
  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResources#projectRef
   */
  readonly projectRef?: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResources(obj: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'projectRef': toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef(obj.projectRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of identities that are allowed access through this
 * ingress policy. Should be in the format of email address. The email
 * address should represent individual user or service account only.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentities
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentities {
  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentities#serviceAccountRef
   */
  readonly serviceAccountRef?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef;

  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentities#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentities(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'serviceAccountRef': toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef(obj.serviceAccountRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSources
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSources {
  /**
   * An AccessLevel resource name that allow resources within the
   * ServicePerimeters to be accessed from the internet. AccessLevels
   * listed must be in the same policy as this ServicePerimeter.
   * Referencing a nonexistent AccessLevel will cause an error. If no
   * AccessLevel names are listed, resources within the perimeter can
   * only be accessed via Google Cloud calls with request origins within
   * the perimeter.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSources#accessLevelRef
   */
  readonly accessLevelRef?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef;

  /**
   * (Optional) A Google Cloud resource that is allowed to ingress the
   * perimeter. Requests from these resources will be allowed to access
   * perimeter data. Currently only projects are allowed. Format
   * "projects/{project_number}" The project may be in any Google Cloud
   * organization, not just the organization that the perimeter is defined in.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSources#projectRef
   */
  readonly projectRef?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSources(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessLevelRef': toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef(obj.accessLevelRef),
    'projectRef': toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef(obj.projectRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperations
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperations {
  /**
   * API methods or permissions to allow. Method or permission must belong to
   * the service specified by serviceName field. A single 'MethodSelector' entry
   * with '*' specified for the method field will allow all methods AND
   * permissions for the service specified in 'serviceName'.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperations#methodSelectors
   */
  readonly methodSelectors?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperationsMethodSelectors[];

  /**
   * The name of the API whose methods or permissions the 'IngressPolicy' or
   * 'EgressPolicy' want to allow. A single 'ApiOperation' with 'serviceName'
   * field set to '*' will allow all methods AND permissions for all services.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperations#serviceName
   */
  readonly serviceName?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperations(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'methodSelectors': obj.methodSelectors?.map(y => toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperationsMethodSelectors(y)),
    'serviceName': obj.serviceName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A list of resources, currently only projects in the form
 * "projects/{project_number}", protected by this ServicePerimeter
 * that are allowed to be accessed by sources defined in the
 * corresponding IngressFrom. A request matches if it contains a
 * resource in this list.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResources
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResources {
  /**
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResources#projectRef
   */
  readonly projectRef?: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResources(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'projectRef': toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef(obj.projectRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of identities that are allowed access through this
 * EgressPolicy. Should be in the format of email address. The email
 * address should represent individual user or service account only.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentities
 */
export interface AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentities {
  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentities#serviceAccountRef
   */
  readonly serviceAccountRef?: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef;

  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentities#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentities(obj: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'serviceAccountRef': toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef(obj.serviceAccountRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperations
 */
export interface AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperations {
  /**
   * API methods or permissions to allow. Method or permission must belong
   * to the service specified by 'serviceName' field. A single MethodSelector
   * entry with '*' specified for the 'method' field will allow all methods
   * AND permissions for the service specified in 'serviceName'.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperations#methodSelectors
   */
  readonly methodSelectors?: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperationsMethodSelectors[];

  /**
   * The name of the API whose methods or permissions the 'IngressPolicy' or
   * 'EgressPolicy' want to allow. A single 'ApiOperation' with serviceName
   * field set to '*' will allow all methods AND permissions for all services.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperations#serviceName
   */
  readonly serviceName?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperations(obj: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'methodSelectors': obj.methodSelectors?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperationsMethodSelectors(y)),
    'serviceName': obj.serviceName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of resources, currently only projects in the form
 * "projects/{project_number}". A request
 * matches if it contains a resource in this list.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResources
 */
export interface AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResources {
  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResources#projectRef
   */
  readonly projectRef?: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResources(obj: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'projectRef': toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef(obj.projectRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A list of identities that are allowed access through this
 * EgressPolicy. Should be in the format of email address. The email
 * address should represent individual user or service account only.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentities
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentities {
  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentities#serviceAccountRef
   */
  readonly serviceAccountRef?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef;

  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentities#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentities(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'serviceAccountRef': toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef(obj.serviceAccountRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSources
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSources {
  /**
   * An AccessLevel resource name that allow resources within the
   * ServicePerimeters to be accessed from the internet. AccessLevels
   * listed must be in the same policy as this ServicePerimeter.
   * Referencing a nonexistent AccessLevel will cause an error. If no
   * AccessLevel names are listed, resources within the perimeter can
   * only be accessed via Google Cloud calls with request origins within
   * the perimeter.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSources#accessLevelRef
   */
  readonly accessLevelRef?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef;

  /**
   * (Optional) A Google Cloud resource that is allowed to ingress the
   * perimeter. Requests from these resources will be allowed to access
   * perimeter data. Currently only projects are allowed. Format
   * "projects/{project_number}" The project may be in any Google Cloud
   * organization, not just the organization that the perimeter is defined in.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSources#projectRef
   */
  readonly projectRef?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSources(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessLevelRef': toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef(obj.accessLevelRef),
    'projectRef': toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef(obj.projectRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperations
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperations {
  /**
   * API methods or permissions to allow. Method or permission must belong to
   * the service specified by serviceName field. A single 'MethodSelector' entry
   * with '*' specified for the method field will allow all methods AND
   * permissions for the service specified in 'serviceName'.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperations#methodSelectors
   */
  readonly methodSelectors?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperationsMethodSelectors[];

  /**
   * The name of the API whose methods or permissions the 'IngressPolicy' or
   * 'EgressPolicy' want to allow. A single 'ApiOperation' with 'serviceName'
   * field set to '*' will allow all methods AND permissions for all services.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperations#serviceName
   */
  readonly serviceName?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperations(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'methodSelectors': obj.methodSelectors?.map(y => toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperationsMethodSelectors(y)),
    'serviceName': obj.serviceName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A list of resources, currently only projects in the form
 * "projects/{project_number}", protected by this ServicePerimeter
 * that are allowed to be accessed by sources defined in the
 * corresponding IngressFrom. A request matches if it contains a
 * resource in this list.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResources
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResources {
  /**
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResources#projectRef
   */
  readonly projectRef?: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResources(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'projectRef': toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef(obj.projectRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef
 */
export interface AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef {
  /**
   * Allowed value: string of the format `serviceAccount:{{value}}`, where {{value}} is the `email` field of an `IAMServiceAccount` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef(obj: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressFromIdentitiesServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperationsMethodSelectors
 */
export interface AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperationsMethodSelectors {
  /**
   * Value for 'method' should be a valid method name for the corresponding
   * 'serviceName' in 'ApiOperation'. If '*' used as value for method,
   * then ALL methods and permissions are allowed.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperationsMethodSelectors#method
   */
  readonly method?: string;

  /**
   * Value for permission should be a valid Cloud IAM permission for the
   * corresponding 'serviceName' in 'ApiOperation'.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperationsMethodSelectors#permission
   */
  readonly permission?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperationsMethodSelectors' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperationsMethodSelectors(obj: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToOperationsMethodSelectors | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'method': obj.method,
    'permission': obj.permission,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef
 */
export interface AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef {
  /**
   * Allowed value: string of the format `projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef(obj: AccessContextManagerServicePerimeterSpecSpecEgressPoliciesEgressToResourcesProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef {
  /**
   * Allowed value: string of the format `serviceAccount:{{value}}`, where {{value}} is the `email` field of an `IAMServiceAccount` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromIdentitiesServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An AccessLevel resource name that allow resources within the
 * ServicePerimeters to be accessed from the internet. AccessLevels
 * listed must be in the same policy as this ServicePerimeter.
 * Referencing a nonexistent AccessLevel will cause an error. If no
 * AccessLevel names are listed, resources within the perimeter can
 * only be accessed via Google Cloud calls with request origins within
 * the perimeter.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef {
  /**
   * Allowed value: string of the format `{{parent}}/accessLevels/{{value}}`, where {{value}} is the `name` field of an `AccessContextManagerAccessLevel` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesAccessLevelRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A Google Cloud resource that is allowed to ingress the
 * perimeter. Requests from these resources will be allowed to access
 * perimeter data. Currently only projects are allowed. Format
 * "projects/{project_number}" The project may be in any Google Cloud
 * organization, not just the organization that the perimeter is defined in.
 *
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef {
  /**
   * Allowed value: string of the format `projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressFromSourcesProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperationsMethodSelectors
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperationsMethodSelectors {
  /**
   * Value for method should be a valid method name for the corresponding
   * serviceName in 'ApiOperation'. If '*' used as value for 'method', then
   * ALL methods and permissions are allowed.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperationsMethodSelectors#method
   */
  readonly method?: string;

  /**
   * Value for permission should be a valid Cloud IAM permission for the
   * corresponding 'serviceName' in 'ApiOperation'.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperationsMethodSelectors#permission
   */
  readonly permission?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperationsMethodSelectors' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperationsMethodSelectors(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToOperationsMethodSelectors | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'method': obj.method,
    'permission': obj.permission,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef
 */
export interface AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef {
  /**
   * Allowed value: string of the format `projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef(obj: AccessContextManagerServicePerimeterSpecSpecIngressPoliciesIngressToResourcesProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef
 */
export interface AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef {
  /**
   * Allowed value: string of the format `serviceAccount:{{value}}`, where {{value}} is the `email` field of an `IAMServiceAccount` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef(obj: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressFromIdentitiesServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperationsMethodSelectors
 */
export interface AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperationsMethodSelectors {
  /**
   * Value for 'method' should be a valid method name for the corresponding
   * 'serviceName' in 'ApiOperation'. If '*' used as value for method,
   * then ALL methods and permissions are allowed.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperationsMethodSelectors#method
   */
  readonly method?: string;

  /**
   * Value for permission should be a valid Cloud IAM permission for the
   * corresponding 'serviceName' in 'ApiOperation'.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperationsMethodSelectors#permission
   */
  readonly permission?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperationsMethodSelectors' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperationsMethodSelectors(obj: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToOperationsMethodSelectors | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'method': obj.method,
    'permission': obj.permission,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef
 */
export interface AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef {
  /**
   * Allowed value: string of the format `projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef(obj: AccessContextManagerServicePerimeterSpecStatusEgressPoliciesEgressToResourcesProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef {
  /**
   * Allowed value: string of the format `serviceAccount:{{value}}`, where {{value}} is the `email` field of an `IAMServiceAccount` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromIdentitiesServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An AccessLevel resource name that allow resources within the
 * ServicePerimeters to be accessed from the internet. AccessLevels
 * listed must be in the same policy as this ServicePerimeter.
 * Referencing a nonexistent AccessLevel will cause an error. If no
 * AccessLevel names are listed, resources within the perimeter can
 * only be accessed via Google Cloud calls with request origins within
 * the perimeter.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef {
  /**
   * Allowed value: string of the format `{{parent}}/accessLevels/{{value}}`, where {{value}} is the `name` field of an `AccessContextManagerAccessLevel` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesAccessLevelRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * (Optional) A Google Cloud resource that is allowed to ingress the
 * perimeter. Requests from these resources will be allowed to access
 * perimeter data. Currently only projects are allowed. Format
 * "projects/{project_number}" The project may be in any Google Cloud
 * organization, not just the organization that the perimeter is defined in.
 *
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef {
  /**
   * Allowed value: string of the format `projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressFromSourcesProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperationsMethodSelectors
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperationsMethodSelectors {
  /**
   * Value for method should be a valid method name for the corresponding
   * serviceName in 'ApiOperation'. If '*' used as value for 'method', then
   * ALL methods and permissions are allowed.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperationsMethodSelectors#method
   */
  readonly method?: string;

  /**
   * Value for permission should be a valid Cloud IAM permission for the
   * corresponding 'serviceName' in 'ApiOperation'.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperationsMethodSelectors#permission
   */
  readonly permission?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperationsMethodSelectors' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperationsMethodSelectors(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToOperationsMethodSelectors | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'method': obj.method,
    'permission': obj.permission,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef
 */
export interface AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef {
  /**
   * Allowed value: string of the format `projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef(obj: AccessContextManagerServicePerimeterSpecStatusIngressPoliciesIngressToResourcesProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

