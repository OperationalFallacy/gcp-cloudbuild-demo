// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema ServiceNetworkingConnection
 */
export class ServiceNetworkingConnection extends ApiObject {
  /**
   * Returns the apiVersion and kind for "ServiceNetworkingConnection"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'servicenetworking.cnrm.cloud.google.com/v1beta1',
    kind: 'ServiceNetworkingConnection',
  }

  /**
   * Renders a Kubernetes manifest for "ServiceNetworkingConnection".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ServiceNetworkingConnectionProps): any {
    return {
      ...ServiceNetworkingConnection.GVK,
      ...toJson_ServiceNetworkingConnectionProps(props),
    };
  }

  /**
   * Defines a "ServiceNetworkingConnection" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ServiceNetworkingConnectionProps) {
    super(scope, id, {
      ...ServiceNetworkingConnection.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...ServiceNetworkingConnection.GVK,
      ...toJson_ServiceNetworkingConnectionProps(resolved),
    };
  }
}

/**
 * @schema ServiceNetworkingConnection
 */
export interface ServiceNetworkingConnectionProps {
  /**
   * @schema ServiceNetworkingConnection#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema ServiceNetworkingConnection#spec
   */
  readonly spec: ServiceNetworkingConnectionSpec;

}

/**
 * Converts an object of type 'ServiceNetworkingConnectionProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ServiceNetworkingConnectionProps(obj: ServiceNetworkingConnectionProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_ServiceNetworkingConnectionSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ServiceNetworkingConnectionSpec
 */
export interface ServiceNetworkingConnectionSpec {
  /**
   * @schema ServiceNetworkingConnectionSpec#networkRef
   */
  readonly networkRef: ServiceNetworkingConnectionSpecNetworkRef;

  /**
   * @schema ServiceNetworkingConnectionSpec#reservedPeeringRanges
   */
  readonly reservedPeeringRanges: ServiceNetworkingConnectionSpecReservedPeeringRanges[];

  /**
   * Immutable. Provider peering service that is managing peering connectivity for a service provider organization. For Google services that support this functionality it is 'servicenetworking.googleapis.com'.
   *
   * @schema ServiceNetworkingConnectionSpec#service
   */
  readonly service: string;

}

/**
 * Converts an object of type 'ServiceNetworkingConnectionSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ServiceNetworkingConnectionSpec(obj: ServiceNetworkingConnectionSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'networkRef': toJson_ServiceNetworkingConnectionSpecNetworkRef(obj.networkRef),
    'reservedPeeringRanges': obj.reservedPeeringRanges?.map(y => toJson_ServiceNetworkingConnectionSpecReservedPeeringRanges(y)),
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ServiceNetworkingConnectionSpecNetworkRef
 */
export interface ServiceNetworkingConnectionSpecNetworkRef {
  /**
   * Allowed value: The `name` field of a `ComputeNetwork` resource.
   *
   * @schema ServiceNetworkingConnectionSpecNetworkRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ServiceNetworkingConnectionSpecNetworkRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema ServiceNetworkingConnectionSpecNetworkRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'ServiceNetworkingConnectionSpecNetworkRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ServiceNetworkingConnectionSpecNetworkRef(obj: ServiceNetworkingConnectionSpecNetworkRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema ServiceNetworkingConnectionSpecReservedPeeringRanges
 */
export interface ServiceNetworkingConnectionSpecReservedPeeringRanges {
  /**
   * Allowed value: The `name` field of a `ComputeAddress` resource.
   *
   * @schema ServiceNetworkingConnectionSpecReservedPeeringRanges#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema ServiceNetworkingConnectionSpecReservedPeeringRanges#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema ServiceNetworkingConnectionSpecReservedPeeringRanges#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'ServiceNetworkingConnectionSpecReservedPeeringRanges' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_ServiceNetworkingConnectionSpecReservedPeeringRanges(obj: ServiceNetworkingConnectionSpecReservedPeeringRanges | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

