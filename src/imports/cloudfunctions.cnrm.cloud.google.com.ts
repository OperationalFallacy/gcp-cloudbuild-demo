// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema CloudFunctionsFunction
 */
export class CloudFunctionsFunction extends ApiObject {
  /**
   * Returns the apiVersion and kind for "CloudFunctionsFunction"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'cloudfunctions.cnrm.cloud.google.com/v1beta1',
    kind: 'CloudFunctionsFunction',
  }

  /**
   * Renders a Kubernetes manifest for "CloudFunctionsFunction".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: CloudFunctionsFunctionProps): any {
    return {
      ...CloudFunctionsFunction.GVK,
      ...toJson_CloudFunctionsFunctionProps(props),
    };
  }

  /**
   * Defines a "CloudFunctionsFunction" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: CloudFunctionsFunctionProps) {
    super(scope, id, {
      ...CloudFunctionsFunction.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...CloudFunctionsFunction.GVK,
      ...toJson_CloudFunctionsFunctionProps(resolved),
    };
  }
}

/**
 * @schema CloudFunctionsFunction
 */
export interface CloudFunctionsFunctionProps {
  /**
   * @schema CloudFunctionsFunction#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema CloudFunctionsFunction#spec
   */
  readonly spec: CloudFunctionsFunctionSpec;

}

/**
 * Converts an object of type 'CloudFunctionsFunctionProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudFunctionsFunctionProps(obj: CloudFunctionsFunctionProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_CloudFunctionsFunctionSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CloudFunctionsFunctionSpec
 */
export interface CloudFunctionsFunctionSpec {
  /**
   * Memory (in MB), available to the function. Default value is 256MB. Allowed values are: 128MB, 256MB, 512MB, 1024MB, and 2048MB.
   *
   * @schema CloudFunctionsFunctionSpec#availableMemoryMb
   */
  readonly availableMemoryMb?: number;

  /**
   * User-provided description of a function.
   *
   * @schema CloudFunctionsFunctionSpec#description
   */
  readonly description?: string;

  /**
   * Immutable. The name of the function (as defined in source code) that will be
   * executed. Defaults to the resource name suffix, if not specified. For
   * backward compatibility, if function with given name is not found, then the
   * system will try to use function named "function".
   * For Node.js this is name of a function exported by the module specified
   * in `source_location`.
   *
   * @default the resource name suffix, if not specified. For
   * @schema CloudFunctionsFunctionSpec#entryPoint
   */
  readonly entryPoint?: string;

  /**
   * Environment variables that shall be available during function execution.
   *
   * @schema CloudFunctionsFunctionSpec#environmentVariables
   */
  readonly environmentVariables?: { [key: string]: string };

  /**
   * Immutable. A source that fires events in response to a condition in another service.
   *
   * @schema CloudFunctionsFunctionSpec#eventTrigger
   */
  readonly eventTrigger?: CloudFunctionsFunctionSpecEventTrigger;

  /**
   * Immutable. An HTTPS endpoint type of source that can be triggered via URL.
   *
   * @schema CloudFunctionsFunctionSpec#httpsTrigger
   */
  readonly httpsTrigger?: CloudFunctionsFunctionSpecHttpsTrigger;

  /**
   * The ingress settings for the function, controlling what traffic can reach
   * it. Possible values: INGRESS_SETTINGS_UNSPECIFIED, ALLOW_ALL, ALLOW_INTERNAL_ONLY, ALLOW_INTERNAL_AND_GCLB
   *
   * @schema CloudFunctionsFunctionSpec#ingressSettings
   */
  readonly ingressSettings?: string;

  /**
   * The limit on the maximum number of function instances that may coexist at a
   * given time.
   *
   * @schema CloudFunctionsFunctionSpec#maxInstances
   */
  readonly maxInstances?: number;

  /**
   * Immutable. The Project that this resource belongs to.
   *
   * @schema CloudFunctionsFunctionSpec#projectRef
   */
  readonly projectRef: CloudFunctionsFunctionSpecProjectRef;

  /**
   * Immutable. The name of the Cloud Functions region of the function.
   *
   * @schema CloudFunctionsFunctionSpec#region
   */
  readonly region: string;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema CloudFunctionsFunctionSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * The runtime in which to run the function. Required when deploying a new
   * function, optional when updating an existing function. For a complete
   * list of possible choices, see the
   * [`gcloud` command
   * reference](/sdk/gcloud/reference/functions/deploy#--runtime).
   *
   *
   * @schema CloudFunctionsFunctionSpec#runtime
   */
  readonly runtime: string;

  /**
   * Immutable.
   *
   * @schema CloudFunctionsFunctionSpec#serviceAccountRef
   */
  readonly serviceAccountRef?: CloudFunctionsFunctionSpecServiceAccountRef;

  /**
   * Immutable. The Google Cloud Storage URL, starting with gs://, pointing to the zip archive which contains the function.
   *
   * @schema CloudFunctionsFunctionSpec#sourceArchiveUrl
   */
  readonly sourceArchiveUrl?: string;

  /**
   * Immutable. Represents parameters related to source repository where a function is hosted.
   *
   * @schema CloudFunctionsFunctionSpec#sourceRepository
   */
  readonly sourceRepository?: CloudFunctionsFunctionSpecSourceRepository;

  /**
   * The function execution timeout. Execution is considered failed and
   * can be terminated if the function is not completed at the end of the
   * timeout period. Defaults to 60 seconds.
   *
   * @default 60 seconds.
   * @schema CloudFunctionsFunctionSpec#timeout
   */
  readonly timeout?: string;

  /**
   * The egress settings for the connector, controlling what traffic is diverted
   * through it. Possible values: VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED, PRIVATE_RANGES_ONLY, ALL_TRAFFIC
   *
   * @schema CloudFunctionsFunctionSpec#vpcConnectorEgressSettings
   */
  readonly vpcConnectorEgressSettings?: string;

  /**
   * @schema CloudFunctionsFunctionSpec#vpcConnectorRef
   */
  readonly vpcConnectorRef?: CloudFunctionsFunctionSpecVpcConnectorRef;

}

/**
 * Converts an object of type 'CloudFunctionsFunctionSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudFunctionsFunctionSpec(obj: CloudFunctionsFunctionSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'availableMemoryMb': obj.availableMemoryMb,
    'description': obj.description,
    'entryPoint': obj.entryPoint,
    'environmentVariables': ((obj.environmentVariables) === undefined) ? undefined : (Object.entries(obj.environmentVariables).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'eventTrigger': toJson_CloudFunctionsFunctionSpecEventTrigger(obj.eventTrigger),
    'httpsTrigger': toJson_CloudFunctionsFunctionSpecHttpsTrigger(obj.httpsTrigger),
    'ingressSettings': obj.ingressSettings,
    'maxInstances': obj.maxInstances,
    'projectRef': toJson_CloudFunctionsFunctionSpecProjectRef(obj.projectRef),
    'region': obj.region,
    'resourceID': obj.resourceId,
    'runtime': obj.runtime,
    'serviceAccountRef': toJson_CloudFunctionsFunctionSpecServiceAccountRef(obj.serviceAccountRef),
    'sourceArchiveUrl': obj.sourceArchiveUrl,
    'sourceRepository': toJson_CloudFunctionsFunctionSpecSourceRepository(obj.sourceRepository),
    'timeout': obj.timeout,
    'vpcConnectorEgressSettings': obj.vpcConnectorEgressSettings,
    'vpcConnectorRef': toJson_CloudFunctionsFunctionSpecVpcConnectorRef(obj.vpcConnectorRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. A source that fires events in response to a condition in another service.
 *
 * @schema CloudFunctionsFunctionSpecEventTrigger
 */
export interface CloudFunctionsFunctionSpecEventTrigger {
  /**
   * Immutable. Required. The type of event to observe. For example:
   * `providers/cloud.storage/eventTypes/object.change` and
   * `providers/cloud.pubsub/eventTypes/topic.publish`.
   *
   * Event types match pattern `providers/_/eventTypes/*.*`.
   * The pattern contains:
   *
   * 1. namespace: For example, `cloud.storage` and
   * `google.firebase.analytics`.
   * 2. resource type: The type of resource on which event occurs. For
   * example, the Google Cloud Storage API includes the type `object`.
   * 3. action: The action that generates the event. For example, action for
   * a Google Cloud Storage Object is 'change'.
   * These parts are lower case.
   *
   * @schema CloudFunctionsFunctionSpecEventTrigger#eventType
   */
  readonly eventType: string;

  /**
   * Immutable. Specifies policy for failed executions.
   *
   * @schema CloudFunctionsFunctionSpecEventTrigger#failurePolicy
   */
  readonly failurePolicy?: boolean;

  /**
   * Immutable.
   *
   * @schema CloudFunctionsFunctionSpecEventTrigger#resourceRef
   */
  readonly resourceRef: CloudFunctionsFunctionSpecEventTriggerResourceRef;

  /**
   * Immutable. The hostname of the service that should be observed.
   *
   * If no string is provided, the default service implementing the API will
   * be used. For example, `storage.googleapis.com` is the default for all
   * event types in the `google.storage` namespace.
   *
   * @schema CloudFunctionsFunctionSpecEventTrigger#service
   */
  readonly service?: string;

}

/**
 * Converts an object of type 'CloudFunctionsFunctionSpecEventTrigger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudFunctionsFunctionSpecEventTrigger(obj: CloudFunctionsFunctionSpecEventTrigger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'eventType': obj.eventType,
    'failurePolicy': obj.failurePolicy,
    'resourceRef': toJson_CloudFunctionsFunctionSpecEventTriggerResourceRef(obj.resourceRef),
    'service': obj.service,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. An HTTPS endpoint type of source that can be triggered via URL.
 *
 * @schema CloudFunctionsFunctionSpecHttpsTrigger
 */
export interface CloudFunctionsFunctionSpecHttpsTrigger {
  /**
   * Immutable. Both HTTP and HTTPS requests with URLs that match the handler succeed without redirects. The application can examine the request to determine which protocol was used and respond accordingly. Possible values: SECURITY_LEVEL_UNSPECIFIED, SECURE_ALWAYS, SECURE_OPTIONAL
   *
   * @schema CloudFunctionsFunctionSpecHttpsTrigger#securityLevel
   */
  readonly securityLevel?: string;

}

/**
 * Converts an object of type 'CloudFunctionsFunctionSpecHttpsTrigger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudFunctionsFunctionSpecHttpsTrigger(obj: CloudFunctionsFunctionSpecHttpsTrigger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'securityLevel': obj.securityLevel,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. The Project that this resource belongs to.
 *
 * @schema CloudFunctionsFunctionSpecProjectRef
 */
export interface CloudFunctionsFunctionSpecProjectRef {
  /**
   * The project id of the function.
   *
   * Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
   *
   * @schema CloudFunctionsFunctionSpecProjectRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CloudFunctionsFunctionSpecProjectRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema CloudFunctionsFunctionSpecProjectRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CloudFunctionsFunctionSpecProjectRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudFunctionsFunctionSpecProjectRef(obj: CloudFunctionsFunctionSpecProjectRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema CloudFunctionsFunctionSpecServiceAccountRef
 */
export interface CloudFunctionsFunctionSpecServiceAccountRef {
  /**
   * The email of the function's service account. If empty, defaults to
   * `{project_id}@appspot.gserviceaccount.com`.
   *
   * Allowed value: The `email` field of an `IAMServiceAccount` resource.
   *
   * @schema CloudFunctionsFunctionSpecServiceAccountRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CloudFunctionsFunctionSpecServiceAccountRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema CloudFunctionsFunctionSpecServiceAccountRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CloudFunctionsFunctionSpecServiceAccountRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudFunctionsFunctionSpecServiceAccountRef(obj: CloudFunctionsFunctionSpecServiceAccountRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable. Represents parameters related to source repository where a function is hosted.
 *
 * @schema CloudFunctionsFunctionSpecSourceRepository
 */
export interface CloudFunctionsFunctionSpecSourceRepository {
  /**
   * Immutable. The URL pointing to the hosted repository where the function is defined.
   * There are supported Cloud Source Repository URLs in the following
   * formats:
   *
   * To refer to a specific commit:
   * `https://source.developers.google.com/projects/_/repos/_/revisions/_/paths/*`
   * To refer to a moveable alias (branch):
   * `https://source.developers.google.com/projects/_/repos/_/moveable-aliases/_/paths/*`
   * In particular, to refer to HEAD use `master` moveable alias.
   * To refer to a specific fixed alias (tag):
   * `https://source.developers.google.com/projects/_/repos/_/fixed-aliases/_/paths/*`
   *
   * You may omit `paths/*` if you want to use the main directory.
   *
   * @schema CloudFunctionsFunctionSpecSourceRepository#url
   */
  readonly url: string;

}

/**
 * Converts an object of type 'CloudFunctionsFunctionSpecSourceRepository' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudFunctionsFunctionSpecSourceRepository(obj: CloudFunctionsFunctionSpecSourceRepository | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CloudFunctionsFunctionSpecVpcConnectorRef
 */
export interface CloudFunctionsFunctionSpecVpcConnectorRef {
  /**
   * The VPC Network Connector that this cloud function can connect to. It can
   * be either the fully-qualified URI, or the short name of the network
   * connector resource. The format of this field is
   * `projects/_/locations/_/connectors/*`
   *
   * Allowed value: The Google Cloud resource name of a `VPCAccessConnector` resource (format: `projects/{{project}}/locations/{{location}}/connectors/{{name}}`).
   *
   * @schema CloudFunctionsFunctionSpecVpcConnectorRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CloudFunctionsFunctionSpecVpcConnectorRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema CloudFunctionsFunctionSpecVpcConnectorRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CloudFunctionsFunctionSpecVpcConnectorRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudFunctionsFunctionSpecVpcConnectorRef(obj: CloudFunctionsFunctionSpecVpcConnectorRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Immutable.
 *
 * @schema CloudFunctionsFunctionSpecEventTriggerResourceRef
 */
export interface CloudFunctionsFunctionSpecEventTriggerResourceRef {
  /**
   * Required. The resource(s) from which to observe events, for example,
   * `projects/_/buckets/myBucket`.
   *
   * Not all syntactically correct values are accepted by all services. For
   * example:
   *
   * 1. The authorization model must support it. Google Cloud Functions
   * only allows EventTriggers to be deployed that observe resources in the
   * same project as the `Function`.
   * 2. The resource type must match the pattern expected for an
   * `event_type`. For example, an `EventTrigger` that has an
   * `event_type` of "google.pubsub.topic.publish" should have a resource
   * that matches Google Cloud Pub/Sub topics.
   *
   * Additionally, some services may support short names when creating an
   * `EventTrigger`. These will always be returned in the normalized "long"
   * format.
   *
   * See each *service's* documentation for supported formats.
   *
   * Allowed values:
   * * The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
   * * The Google Cloud resource name of a `PubSubTopic` resource (format: `projects/{{project}}/topics/{{name}}`).
   *
   * @schema CloudFunctionsFunctionSpecEventTriggerResourceRef#external
   */
  readonly external?: string;

  /**
   * Kind of the referent. Allowed values: StorageBucket,PubSubTopic
   *
   * @schema CloudFunctionsFunctionSpecEventTriggerResourceRef#kind
   */
  readonly kind?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema CloudFunctionsFunctionSpecEventTriggerResourceRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema CloudFunctionsFunctionSpecEventTriggerResourceRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CloudFunctionsFunctionSpecEventTriggerResourceRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CloudFunctionsFunctionSpecEventTriggerResourceRef(obj: CloudFunctionsFunctionSpecEventTriggerResourceRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

